-- create tables

create table t_DFISCALES (
    "ID"             NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOCACHE NOORDER NOCYCLE NOKEEP NOSCALE
    title                          varchar2(400 char),
    cuit                           varchar2(11 char),
    domicilio                      varchar2(400 char),
    ciudad                         varchar2(80 char),
    cp                             varchar2(10 char),
    provincia_id                   number,
    partido_id                     number,
    tipo_persona                   number,
    IMP_GANANCIAS                  varchar2(2 char),
    IMP_IVA                        varchar2(2 char),
    MONOTRIBUTO                    varchar2(2 char),
    INTEGRANTE_SOC                 varchar2(1 char),
    EMPLEADOR                      varchar2(1 char),
    ACT_MONOTRIBUTO                varchar2(2 char),
    created                        date not null,
    created_by                     varchar2(255 char) not null,
    updated                        date not null,
    updated_by                     varchar2(255 char) not null
);




create sequence  e_CLIENTES_seq;

create table e_CLIENTES (
    id            number default on null e_CLIENTES_seq.nextval 
                  constraint e_clientes_id_pk primary key,
    TITLE         varchar2(400 char),
    STATUS        number,
    created       date not null,
    created_by    varchar2(255 char) not null,
    updated       date not null,
    updated_by    varchar2(255 char) not null
);



create sequence  e_PROVEDORES_seq;

create table e_PROVEDORES (
    id            number default on null e_PROVEDORES_seq.nextval 
                  constraint e_provedores_id_pk primary key,
    TITLE         varchar2(400 char),
    STATUS        number,
    created       date not null,
    created_by    varchar2(255 char) not null,
    updated       date not null,
    updated_by    varchar2(255 char) not null
);



create sequence  e_EMPLEADOS_seq;

create table e_EMPLEADOS (
    id            number default on null e_EMPLEADOS_seq.nextval 
                  constraint e_empleados_id_pk primary key,
    NOMBRE        varchar2(80 char),
    APELLIDO      varchar2(80 char),
    DNI           number,
    CUMPLE        date,
    HIRED         date,
    CUIL          varchar2(11 char),
    created       date not null,
    created_by    varchar2(255 char) not null,
    updated       date not null,
    updated_by    varchar2(255 char) not null
);



create sequence  e_CONTACTOS_seq;

create table e_CONTACTOS (
    id             number default on null e_CONTACTOS_seq.nextval 
                   constraint e_contactos_id_pk primary key,
    ref_tipo       number,
    ref_id         number,
    title          varchar2(80 char),
    description    varchar2(400 char),
    mail           varchar2(80 char),
    phone          varchar2(80 char),
    obs            varchar2(400 char),
    created        date not null,
    created_by     varchar2(255 char) not null,
    updated        date not null,
    updated_by     varchar2(255 char) not null
);



create sequence  e_DIRECCIONES_seq;

create table e_DIRECCIONES (
    id             number default on null e_DIRECCIONES_seq.nextval 
                   constraint e_direcciones_id_pk primary key,
    ref_tipo       number,
    ref_id         number,
    tipo_dir       number,
    title          varchar2(80 char),
    description    varchar2(400 char),
    status         number,
    calle          varchar2(80 char),
    nro            varchar2(20 char),
    depto          varchar2(20 char),
    localidad      varchar2(80 char),
    codpostal      varchar2(10 char),
    provincia      varchar2(80 char),
    pais           varchar2(80 char),
    lat            number,
    lng            number,
    obs            varchar2(400 char),
    created        date not null,
    created_by     varchar2(255 char) not null,
    updated        date not null,
    updated_by     varchar2(255 char) not null
);



create sequence  e_CLI_DFISCALES_seq;

create table e_CLI_DFISCALES (
    id            number default on null e_CLI_DFISCALES_seq.nextval 
                  constraint e_cli_dfiscales_id_pk primary key,
    CLIENTE_ID    number                  constraint e_CLI_DFISCALES_CLIENTE_ID_fk
                  references e_CLIENTES,
    DFISCAL_ID    number                  constraint e_CLI_DFISCALES_DFISCAL_ID_fk
                  references e_DFISCALES,
    STATUS        number,
    created       date not null,
    created_by    varchar2(255 char) not null,
    updated       date not null,
    updated_by    varchar2(255 char) not null
);

-- table index
create index e_CLI_DFISCALES_i1 on e_CLI_DFISCALES (CLIENTE_ID);

create index e_CLI_DFISCALES_i2 on e_CLI_DFISCALES (DFISCAL_ID);



create sequence  e_PROV_DFISCALES_seq;

create table e_PROV_DFISCALES (
    id            number default on null e_PROV_DFISCALES_seq.nextval 
                  constraint e_prov_dfiscales_id_pk primary key,
    PROV_ID       number                  constraint e_PROV_DFISCALES_PROV_ID_fk
                  references e_PROVEDORES,
    DFISCAL_ID    number                  constraint e_PROV_DFISCALES_DFISCAL_ID_fk
                  references e_DFISCALES,
    STATUS        number,
    created       date not null,
    created_by    varchar2(255 char) not null,
    updated       date not null,
    updated_by    varchar2(255 char) not null
);

-- table index
create index e_PROV_DFISCALES_i1 on e_PROV_DFISCALES (PROV_ID);

create index e_PROV_DFISCALES_i2 on e_PROV_DFISCALES (DFISCAL_ID);



-- triggers
create or replace trigger e_dfiscales_biu
    before insert or update
    on e_dfiscales
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_dfiscales_biu;
/


create or replace trigger e_clientes_biu
    before insert or update
    on e_clientes
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_clientes_biu;
/


create or replace trigger e_provedores_biu
    before insert or update
    on e_provedores
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_provedores_biu;
/


create or replace trigger e_empleados_biu
    before insert or update
    on e_empleados
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_empleados_biu;
/


create or replace trigger e_contactos_biu
    before insert or update
    on e_contactos
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_contactos_biu;
/


create or replace trigger e_direcciones_biu
    before insert or update
    on e_direcciones
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_direcciones_biu;
/


create or replace trigger e_cli_dfiscales_biu
    before insert or update
    on e_cli_dfiscales
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_cli_dfiscales_biu;
/


create or replace trigger e_prov_dfiscales_biu
    before insert or update
    on e_prov_dfiscales
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end e_prov_dfiscales_biu;
/

