---
- # ====== Plugin: Select2 =====================================
  id: 2175993801123871
  identification: 
    name: Select2
    internal-name: BE.CTB.SELECT2
    type: Item

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 39976555939443999

    subscribe-component-settings: true

  source: 
    pl/sql-code: |
      subtype gt_string is varchar2(32767);
      
      gco_min_lov_cols constant number(1) := 2;
      gco_max_lov_cols constant number(1) := 3;
      gco_lov_display_col constant number(1) := 1;
      gco_lov_return_col constant number(1) := 2;
      gco_lov_group_col constant number(1) := 3;
      gco_contains_ignore_case constant char(3) := 'CIC';
      gco_contains_ignore_case_diac constant char(4) := 'CICD';
      gco_contains_case_sensitive constant char(3) := 'CCS';
      gco_exact_ignore_case constant char(3) := 'EIC';
      gco_exact_case_sensitive constant char(3) := 'ECS';
      gco_starts_with_ignore_case constant char(3) := 'SIC';
      gco_starts_with_case_sensitive constant char(3) := 'SCS';
      gco_multi_word constant char(2) := 'MW';
      
      
      procedure print_lov_options(
                  p_item in apex_plugin.t_page_item,
                  p_plugin in apex_plugin.t_plugin,
                  p_value in gt_string default null
                ) is
        l_null_optgroup_label_app gt_string := p_plugin.attribute_05;
        l_select_list_type gt_string := p_item.attribute_01;
        l_null_optgroup_label_cmp gt_string := p_item.attribute_09;
        l_drag_and_drop_sorting gt_string := p_item.attribute_11;
        l_lazy_loading gt_string := p_item.attribute_14;
      
        lco_null_optgroup_label constant gt_string := 'Ungrouped';
      
        l_lov apex_plugin_util.t_column_value_list;
        l_null_optgroup gt_string;
        l_tmp_optgroup gt_string;
        l_selected_values apex_application_global.vc_arr2;
        l_display_value gt_string;
      
        type gt_optgroups
          is table of gt_string
          index by pls_integer;
        laa_optgroups gt_optgroups;
      
        -- local subprograms
        function optgroup_exists(
                   p_optgroups in gt_optgroups,
                   p_optgroup in gt_string
                 ) return boolean is
          l_index pls_integer := p_optgroups.first;
        begin
          while (l_index is not null) loop
            if p_optgroups(l_index) = p_optgroup then
              return true;
            end if;
      
            l_index := p_optgroups.next(l_index);
          end loop;
      
          return false;
        end optgroup_exists;
      
      
        function is_selected_value(
                   p_value in gt_string,
                   p_selected_values in gt_string
                 ) return boolean is
          l_selected_values apex_application_global.vc_arr2;
        begin
          l_selected_values := apex_util.string_to_table(p_selected_values);
      
          for i in 1 .. l_selected_values.count loop
            if apex_plugin_util.is_equal(p_value, l_selected_values(i)) then
              return true;
            end if;
          end loop;
      
          return false;
        end is_selected_value;
      begin
        l_lov := apex_plugin_util.get_data(
                   p_sql_statement  => p_item.lov_definition,
                   p_min_columns => gco_min_lov_cols,
                   p_max_columns => gco_max_lov_cols,
                   p_component_name => p_item.name
                 );
      
        -- print the selected LOV options in case of lazy loading or when drag and drop sorting is enabled
        if (l_lazy_loading is not null or l_drag_and_drop_sorting is not null) then
          if p_value is not null then
            l_selected_values := apex_util.string_to_table(p_value);
      
            for i in 1 .. l_selected_values.count loop
              begin
                l_display_value := apex_plugin_util.get_display_data(
                                     p_sql_statement => p_item.lov_definition,
                                     p_min_columns => gco_min_lov_cols,
                                     p_max_columns => gco_max_lov_cols,
                                     p_component_name => p_item.name,
                                     p_display_column_no => gco_lov_display_col,
                                     p_search_column_no => gco_lov_return_col,
                                     p_search_string => l_selected_values(i),
                                     p_display_extra => false
                                   );
              exception
                when no_data_found then
                  l_display_value := null;
              end;
      
              if not (l_display_value is null and not p_item.lov_display_extra) then
                -- print the display value, or return value if no display value was found
                apex_plugin_util.print_option(
                  p_display_value => nvl(l_display_value, l_selected_values(i)),
                  p_return_value => l_selected_values(i),
                  p_is_selected => true,
                  p_attributes => p_item.element_option_attributes,
                  p_escape => p_item.escape_output
                );
              end if;
            end loop;
          end if;
        end if;
      
        if l_lazy_loading is null then
          if l_lov.exists(gco_lov_group_col) then
            if l_null_optgroup_label_cmp is not null then
              l_null_optgroup := l_null_optgroup_label_cmp;
            else
              l_null_optgroup := nvl(l_null_optgroup_label_app, lco_null_optgroup_label);
            end if;
      
            for i in 1 .. l_lov(gco_lov_display_col).count loop
              l_tmp_optgroup := nvl(l_lov(gco_lov_group_col)(i), l_null_optgroup);
      
              if not optgroup_exists(laa_optgroups, l_tmp_optgroup) then
                htp.p('<optgroup label="' || l_tmp_optgroup || '">');
                for j in 1 .. l_lov(gco_lov_display_col).count loop
                  if nvl(l_lov(gco_lov_group_col)(j), l_null_optgroup) = l_tmp_optgroup then
                    apex_plugin_util.print_option(
                      p_display_value => l_lov(gco_lov_display_col)(j),
                      p_return_value => l_lov(gco_lov_return_col)(j),
                      p_is_selected => is_selected_value(l_lov(gco_lov_return_col)(j), p_value),
                      p_attributes => p_item.element_option_attributes,
                      p_escape => p_item.escape_output
                    );
                  end if;
                end loop;
                htp.p('</optgroup>');
      
                laa_optgroups(i) := l_tmp_optgroup;
              end if;
            end loop;
          else
            if (l_drag_and_drop_sorting is not null and p_value is not null) then
              for i in 1 .. l_lov(gco_lov_display_col).count loop
                if not is_selected_value(l_lov(gco_lov_return_col)(i), p_value) then
                  apex_plugin_util.print_option(
                    p_display_value => l_lov(gco_lov_display_col)(i),
                    p_return_value => l_lov(gco_lov_return_col)(i),
                    p_is_selected => false,
                    p_attributes => p_item.element_option_attributes,
                    p_escape => p_item.escape_output
                  );
                end if;
              end loop;
            else
              for i in 1 .. l_lov(gco_lov_display_col).count loop
                apex_plugin_util.print_option(
                  p_display_value => l_lov(gco_lov_display_col)(i),
                  p_return_value => l_lov(gco_lov_return_col)(i),
                  p_is_selected => is_selected_value(l_lov(gco_lov_return_col)(i), p_value),
                  p_attributes => p_item.element_option_attributes,
                  p_escape => p_item.escape_output
                );
              end loop;
            end if;
          end if;
        end if;
      
        if (p_value is not null and (l_select_list_type = 'TAG' or p_item.lov_display_extra)) then
          if not (l_lazy_loading is not null or l_drag_and_drop_sorting is not null) then
            l_selected_values := apex_util.string_to_table(p_value);
      
            for i in 1 .. l_selected_values.count loop
              begin
                l_display_value := apex_plugin_util.get_display_data(
                                     p_sql_statement => p_item.lov_definition,
                                     p_min_columns => gco_min_lov_cols,
                                     p_max_columns => gco_max_lov_cols,
                                     p_component_name => p_item.name,
                                     p_display_column_no => gco_lov_display_col,
                                     p_search_column_no => gco_lov_return_col,
                                     p_search_string => l_selected_values(i),
                                     p_display_extra => false
                                   );
              exception
                when no_data_found then
                  l_display_value := null;
              end;
      
              if l_display_value is null then
                apex_plugin_util.print_option(
                  p_display_value => l_selected_values(i),
                  p_return_value => l_selected_values(i),
                  p_is_selected => true,
                  p_attributes => p_item.element_option_attributes,
                  p_escape => p_item.escape_output
                );
              end if;
            end loop;
          end if;
        end if;
      end print_lov_options;
      
      
      function render(
                 p_item in apex_plugin.t_page_item,
                 p_plugin in apex_plugin.t_plugin,
                 p_value in gt_string,
                 p_is_readonly in boolean,
                 p_is_printer_friendly in boolean
               ) return apex_plugin.t_page_item_render_result is
        l_no_matches_msg gt_string := p_plugin.attribute_01;
        l_input_too_short_msg gt_string := p_plugin.attribute_02;
        l_selection_too_big_msg gt_string := p_plugin.attribute_03;
        l_searching_msg gt_string := p_plugin.attribute_04;
        l_null_optgroup_label_app gt_string := p_plugin.attribute_05;
        l_loading_more_results_msg gt_string := p_plugin.attribute_06;
        l_look_and_feel gt_string := p_plugin.attribute_07;
        l_error_loading_msg gt_string := p_plugin.attribute_08;
        l_input_too_long_msg gt_string := p_plugin.attribute_09;
        l_custom_css_path gt_string := p_plugin.attribute_10;
        l_custom_css_filename gt_string := p_plugin.attribute_11;
      
        l_select_list_type gt_string := p_item.attribute_01;
        l_min_results_for_search gt_string := p_item.attribute_02;
        l_min_input_length gt_string := p_item.attribute_03;
        l_max_input_length gt_string := p_item.attribute_04;
        l_max_selection_size gt_string := p_item.attribute_05;
        l_rapid_selection gt_string := p_item.attribute_06;
        l_select_on_blur gt_string := p_item.attribute_07;
        l_search_logic gt_string := p_item.attribute_08;
        l_null_optgroup_label_cmp gt_string := p_item.attribute_09;
        l_width gt_string := p_item.attribute_10;
        l_drag_and_drop_sorting gt_string := p_item.attribute_11;
        l_token_separators gt_string := p_item.attribute_12;
        l_extra_options gt_string := p_item.attribute_13;
        l_lazy_loading gt_string := p_item.attribute_14;
        l_lazy_append_row_count gt_string := p_item.attribute_15;
      
        l_display_values apex_application_global.vc_arr2;
        l_multiselect gt_string;
      
        l_item_jq gt_string := apex_plugin_util.page_item_names_to_jquery(p_item.name);
        l_cascade_parent_items_jq gt_string := apex_plugin_util.page_item_names_to_jquery(p_item.lov_cascade_parent_items);
        l_cascade_items_to_submit_jq gt_string := apex_plugin_util.page_item_names_to_jquery(p_item.ajax_items_to_submit);
        l_items_for_session_state_jq gt_string;
        l_cascade_parent_items apex_application_global.vc_arr2;
        l_optimize_refresh_condition gt_string;
      
        l_apex_version gt_string;
        l_onload_code gt_string;
        l_render_result apex_plugin.t_page_item_render_result;
      
        -- local subprograms
        function get_select2_constructor
        return gt_string is
          l_selected_values apex_application_global.vc_arr2;
          l_display_values apex_application_global.vc_arr2;
          l_json gt_string;
          l_code gt_string;
      
          l_allow_clear_bool boolean;
          l_rapid_selection_bool boolean;
          l_select_on_blur_bool boolean;
        begin
          if p_item.lov_display_null then
            l_allow_clear_bool := true;
          else
            l_allow_clear_bool := false;
          end if;
      
          if l_rapid_selection is null then
            l_rapid_selection_bool := true;
          else
            l_rapid_selection_bool := false;
          end if;
      
          if l_select_on_blur is null then
            l_select_on_blur_bool := false;
          else
            l_select_on_blur_bool := true;
          end if;
      
          -- make sure the last character of l_extra_options is a comma
          if trim(l_extra_options) is not null then
            if substr(trim(l_extra_options), -1, 1) != ',' then
              l_extra_options := l_extra_options || ',';
            end if;
          end if;
      
          l_code := '
            $("' || l_item_jq || '").select2({' ||
              apex_javascript.add_attribute('placeholder', p_item.lov_null_text, false) ||
              apex_javascript.add_attribute('allowClear', l_allow_clear_bool) ||
              apex_javascript.add_attribute('minimumInputLength', to_number(l_min_input_length)) ||
              apex_javascript.add_attribute('maximumInputLength', to_number(l_max_input_length)) ||
              apex_javascript.add_attribute('minimumResultsForSearch', to_number(l_min_results_for_search)) ||
              apex_javascript.add_attribute('maximumSelectionLength', to_number(l_max_selection_size)) ||
              apex_javascript.add_attribute('closeOnSelect', l_rapid_selection_bool) ||
              apex_javascript.add_attribute('selectOnClose', l_select_on_blur_bool) ||
              apex_javascript.add_attribute('tokenSeparators', l_token_separators) ||
              l_extra_options;
      
          if l_look_and_feel = 'SELECT2_CLASSIC' then
            l_code := l_code || apex_javascript.add_attribute('theme', 'classic');
          end if;
      
          l_code := l_code || '"language": {';
      
          if l_error_loading_msg is not null then
            l_code := l_code || '
              "errorLoading": function() {
                                return "' || l_error_loading_msg || '";
                              },';
          end if;
          if l_input_too_long_msg is not null then
            l_code := l_code || '
              "inputTooLong": function(args) {
                                var msg = "' || l_input_too_long_msg || '";
                                msg = msg.replace("#TERM#", args.input);
                                msg = msg.replace("#MAXLENGTH#", args.maximum);
                                msg = msg.replace("#OVERCHARS#", args.input.length - args.maximum);
                                return msg;
                              },';
          end if;
          if l_input_too_short_msg is not null then
            l_code := l_code || '
              "inputTooShort": function(args) {
                                 var msg = "' || l_input_too_short_msg || '";
                                 msg = msg.replace("#TERM#", args.input);
                                 msg = msg.replace("#MINLENGTH#", args.minimum);
                                 msg = msg.replace("#REMAININGCHARS#", args.minimum - args.input.length);
                                 return msg;
                               },';
          end if;
          if l_loading_more_results_msg is not null then
            l_code := l_code || '
              "loadingMore": function() {
                               return "' || l_loading_more_results_msg || '";
                             },';
          end if;
          if l_selection_too_big_msg is not null then
            l_code := l_code || '
              "maximumSelected": function(args) {
                                   var msg = "' || l_selection_too_big_msg || '";
                                   msg = msg.replace("#MAXSIZE#", args.maximum);
                                   return msg;
                                 },';
          end if;
          if l_no_matches_msg is not null then
            l_code := l_code || '
              "noResults": function() {
                             return "' || l_no_matches_msg || '";
                           },';
          end if;
          if l_searching_msg is not null then
            l_code := l_code || '
              "searching": function() {
                             return "' || l_searching_msg || '";
                           },';
          end if;
      
          l_code := rtrim(l_code, ',') || '},';
      
          if l_search_logic != gco_contains_ignore_case then
            case l_search_logic
              when gco_contains_ignore_case_diac then l_search_logic := 'return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;';
              when gco_contains_case_sensitive then l_search_logic := 'return text.indexOf(term) >= 0;';
              when gco_exact_ignore_case then l_search_logic := 'return text.toUpperCase() === term.toUpperCase() || term.length === 0;';
              when gco_exact_case_sensitive then l_search_logic := 'return text === term || term.length === 0;';
              when gco_starts_with_ignore_case then l_search_logic := 'return text.toUpperCase().indexOf(term.toUpperCase()) === 0;';
              when gco_starts_with_case_sensitive then l_search_logic := 'return text.indexOf(term) === 0;';
              when gco_multi_word then l_search_logic := '
                var escpTerm = term.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                return new RegExp(escpTerm.replace(/ /g, ".*"), "i").test(text);';
              else l_search_logic := 'return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;';
            end case;
      
            l_code := '$.fn.select2.amd.require([''select2/compat/matcher''], function(oldMatcher) {' ||
              l_code || '
              matcher: oldMatcher(
                         function(term, text) {
                           ' || l_search_logic || '
                         }
                       ),';
          end if;
      
          if l_lazy_loading is not null then
            l_code := l_code || '
              ajax: {
                url: "wwv_flow.show",
                type: "POST",
                dataType: "json",
                delay: 400,
                data: function(params) {
                        return {
                          p_flow_id: $("#pFlowId").val(),
                          p_flow_step_id: $("#pFlowStepId").val(),
                          p_instance: $("#pInstance").val(),
                          x01: params.term,
                          x02: params.page,
                          x03: "LAZY_LOAD",
                          p_request: "PLUGIN=' || apex_plugin.get_ajax_identifier || '"
                        };
                      },
                processResults: function(data, params) {
                                  var select2Data = $.map(data.row, function(obj) {
                                    obj.id = obj.R;
                                    obj.text = obj.D;
                                    return obj;
                                  });
      
                                  return {
                                    results: select2Data,
                                    pagination: { more: data.more }
                                  };
                                },
                cache: true
              },
              escapeMarkup: function(markup) { return markup; },';
          end if;
      
          if l_select_list_type = 'TAG' then
            l_code := l_code || apex_javascript.add_attribute('tags', true);
          end if;
      
          l_code := l_code || apex_javascript.add_attribute('width', nvl(l_width, 'element'), true, false);
          l_code := l_code || '})';
      
          if l_search_logic != gco_contains_ignore_case then
            l_code := l_code || '});';
          else
            l_code := l_code || ';';
          end if;
      
          -- issue #71: fix focus after selection for single-value items
          if l_select_list_type = 'SINGLE' then
            l_code := l_code || '
              $("' || l_item_jq || '").on(
                "select2:select",
                function(){ $(this).focus(); }
              );';
          end if;
      
          return l_code;
        end get_select2_constructor;
      
      
        function get_sortable_constructor
        return gt_string is
          l_code gt_string;
        begin
          l_code := '
            var s2item = $("' || l_item_jq || '");
            var s2ul = s2item.next(".select2-container").find("ul.select2-selection__rendered");
            s2ul.sortable({
              containment: "parent",
              items: "li:not(.select2-search)",
              tolerance: "pointer",
              stop: function() {
                $(s2ul.find(".select2-selection__choice").get().reverse()).each(function() {
                  s2item.prepend(s2item.find(''option[value="'' + $(this).data("data").id + ''"]'')[0]);
                });
              }
            });';
      
            /* prevent automatic tags sorting
               http://stackoverflow.com/questions/31431197/select2-how-to-prevent-tags-sorting
            s2item.on("select2:select", function(e) {
              var $element = $(e.params.data.element);
      
              $element.detach();
              $(this).append($element);
              $(this).trigger("change");
            });';
            */
      
          return l_code;
        end get_sortable_constructor;
      begin
        if apex_application.g_debug then
          apex_plugin_util.debug_page_item(p_plugin, p_item, p_value, p_is_readonly, p_is_printer_friendly);
        end if;
      
        if (p_is_readonly or p_is_printer_friendly) then
          apex_plugin_util.print_hidden_if_readonly(p_item.name, p_value, p_is_readonly, p_is_printer_friendly);
      
          begin
            l_display_values := apex_plugin_util.get_display_data(
                                  p_sql_statement => p_item.lov_definition,
                                  p_min_columns => gco_min_lov_cols,
                                  p_max_columns => gco_max_lov_cols,
                                  p_component_name => p_item.name,
                                  p_search_value_list => apex_util.string_to_table(p_value),
                                  p_display_extra => p_item.lov_display_extra
                                );
          exception
            when no_data_found then
              null; -- https://github.com/nbuytaert1/apex-select2/issues/51
          end;
      
          if l_display_values.count = 1 then
            apex_plugin_util.print_display_only(
              p_item_name => p_item.name,
              p_display_value => l_display_values(1),
              p_show_line_breaks => false,
              p_escape => p_item.escape_output,
              p_attributes => p_item.element_attributes
            );
          elsif l_display_values.count > 1 then
            htp.p('
              <ul id="' || p_item.name || '_DISPLAY"
                class="display_only ' || p_item.element_css_classes || '"' ||
                p_item.element_attributes || '>');
      
            for i in 1 .. l_display_values.count loop
              if p_item.escape_output then
                htp.p('<li>' || htf.escape_sc(l_display_values(i)) || '</li>');
              else
                htp.p('<li>' || l_display_values(i) || '</li>');
              end if;
            end loop;
      
            htp.p('</ul>');
          end if;
      
          return l_render_result;
        end if;
      
        apex_javascript.add_library(
          p_name => 'select2.full.min',
          p_directory => p_plugin.file_prefix,
          p_version => null
        );
        apex_javascript.add_library(
          p_name => 'select2-apex',
          p_directory => p_plugin.file_prefix,
          p_version => null
        );
        apex_css.add_file(
          p_name => 'select2.min',
          p_directory => p_plugin.file_prefix,
          p_version => null
        );
        if l_look_and_feel = 'SELECT2_CLASSIC' then
          apex_css.add_file(
            p_name => 'select2-classic',
            p_directory => p_plugin.file_prefix,
            p_version => null
          );
        elsif l_look_and_feel = 'CUSTOM' then
          apex_css.add_file(
            p_name => apex_plugin_util.replace_substitutions(l_custom_css_filename),
            p_directory => apex_plugin_util.replace_substitutions(l_custom_css_path),
            p_version => null
          );
        end if;
      
        if l_select_list_type in ('MULTI', 'TAG') then
          l_multiselect := 'multiple="multiple"';
        end if;
      
        htp.p('
          <select ' || l_multiselect || '
            id="' || p_item.name || '"
            name="' || apex_plugin.get_input_name_for_page_item(true) || '"
            class="selectlist ' || p_item.element_css_classes || '"' ||
            p_item.element_attributes || '>');
      
        if (l_select_list_type = 'SINGLE' and p_item.lov_display_null) then
          apex_plugin_util.print_option(
            p_display_value => p_item.lov_null_text,
            p_return_value => p_item.lov_null_value,
            p_is_selected => false,
            p_attributes => p_item.element_option_attributes,
            p_escape => p_item.escape_output
          );
        end if;
      
        print_lov_options(p_item, p_plugin, p_value);
      
        htp.p('</select>');
      
        l_onload_code := get_select2_constructor;
      
        if l_drag_and_drop_sorting is not null then
          select substr(version_no, 1, 3)
          into l_apex_version
          from apex_release;
      
          if l_apex_version = '4.2' then
            apex_javascript.add_library(
              p_name => 'jquery.ui.sortable.min',
              p_directory => '#JQUERYUI_DIRECTORY#ui/minified/',
              p_version => null
            );
          else
            apex_javascript.add_library(
              p_name => 'jquery.ui.sortable.min',
              p_directory => '#IMAGE_PREFIX#libraries/jquery-ui/1.10.4/ui/minified/',
              p_version => null
            );
          end if;
      
          l_onload_code := l_onload_code || get_sortable_constructor();
        end if;
      
        if p_item.lov_cascade_parent_items is not null then
          l_items_for_session_state_jq := l_cascade_parent_items_jq;
      
          if l_cascade_items_to_submit_jq is not null then
            l_items_for_session_state_jq := l_items_for_session_state_jq || ',' || l_cascade_items_to_submit_jq;
          end if;
      
          l_onload_code := l_onload_code || '
            $("' || l_cascade_parent_items_jq || '").on("change", function(e) {';
      
          if p_item.ajax_optimize_refresh then
            l_cascade_parent_items := apex_util.string_to_table(l_cascade_parent_items_jq, ',');
      
            l_optimize_refresh_condition := '$("' || l_cascade_parent_items(1) || '").val() === ""';
      
            for i in 2 .. l_cascade_parent_items.count loop
              l_optimize_refresh_condition := l_optimize_refresh_condition || ' || $("' || l_cascade_parent_items(i) || '").val() === ""';
            end loop;
      
            l_onload_code := l_onload_code || '
              var item = $("' || l_item_jq || '");
              if (' || l_optimize_refresh_condition || ') {
                item.val("").trigger("change");
              } else {';
          end if;
      
          l_onload_code := l_onload_code || '
                apex.server.plugin(
                  "' || apex_plugin.get_ajax_identifier || '",
                  { pageItems: "' || l_items_for_session_state_jq || '" },
                  { refreshObject: "' || l_item_jq || '",
                    loadingIndicator: "' || l_item_jq || '",
                    loadingIndicatorPosition: "after",
                    dataType: "text",
                    success: function(pData) {
                               var item = $("' || l_item_jq || '");
                               item.html(pData);
                               item.val("").trigger("change");
                             }
                  });';
      
          if p_item.ajax_optimize_refresh then
            l_onload_code := l_onload_code || '}';
          end if;
      
          l_onload_code := l_onload_code || '});';
        end if;
      
        l_onload_code := l_onload_code || '
            beCtbSelect2.events.bind("' || l_item_jq || '");';
      
        apex_javascript.add_onload_code(l_onload_code);
        l_render_result.is_navigable := true;
        return l_render_result;
      end render;
      
      
      function ajax(
                 p_item in apex_plugin.t_page_item,
                 p_plugin in apex_plugin.t_plugin
               ) return apex_plugin.t_page_item_ajax_result is
        l_select_list_type gt_string := p_item.attribute_01;
        l_search_logic gt_string := p_item.attribute_08;
        l_lazy_append_row_count gt_string := p_item.attribute_15;
      
        l_lov apex_plugin_util.t_column_value_list;
        l_json gt_string;
        l_apex_plugin_search_logic gt_string;
        l_search_string gt_string;
        l_search_page number;
        l_first_row number;
        l_loop_count number;
        l_more_rows_boolean boolean;
      
        l_result apex_plugin.t_page_item_ajax_result;
      begin
        if apex_application.g_x03 = 'LAZY_LOAD' then
          l_search_string := nvl(apex_application.g_x01, '%');
          l_search_page := nvl(apex_application.g_x02, 1);
          l_first_row := ((l_search_page - 1) * nvl(l_lazy_append_row_count, 0)) + 1;
      
          -- translate Select2 search logic into APEX_PLUGIN_UTIL search logic
          -- the percentage wildcard returns all rows whenever the search string is null
          case l_search_logic
            when gco_contains_case_sensitive then
              l_apex_plugin_search_logic := apex_plugin_util.c_search_like_case; -- uses LIKE %value%
            when gco_exact_ignore_case then
              l_apex_plugin_search_logic := apex_plugin_util.c_search_exact_ignore; -- uses LIKE VALUE% with UPPER (not completely correct)
            when gco_exact_case_sensitive then
              l_apex_plugin_search_logic := apex_plugin_util.c_search_lookup; -- uses = value
            when gco_starts_with_ignore_case then
              l_apex_plugin_search_logic := apex_plugin_util.c_search_exact_ignore; -- uses LIKE VALUE% with UPPER
            when gco_starts_with_case_sensitive then
              l_apex_plugin_search_logic := apex_plugin_util.c_search_exact_case; -- uses LIKE value%
            else
              l_apex_plugin_search_logic := apex_plugin_util.c_search_like_ignore; -- uses LIKE %VALUE% with UPPER
          end case;
      
          if l_search_logic = gco_multi_word then
            l_search_string := replace(l_search_string, ' ', '%');
          end if;
      
          l_lov := apex_plugin_util.get_data(
                     p_sql_statement => p_item.lov_definition,
                     p_min_columns => gco_min_lov_cols,
                     p_max_columns => gco_max_lov_cols,
                     p_component_name => p_item.name,
                     p_search_type => l_apex_plugin_search_logic,
                     p_search_column_no => gco_lov_display_col,
                     p_search_string => apex_plugin_util.get_search_string(
                                          p_search_type => l_apex_plugin_search_logic,
                                          p_search_string => l_search_string
                                        ),
                     p_first_row => l_first_row,
                     p_max_rows => l_lazy_append_row_count + 1
                   );
      
          if l_lov(gco_lov_return_col).count = l_lazy_append_row_count + 1 then
            l_loop_count := l_lov(gco_lov_return_col).count - 1;
          else
            l_loop_count := l_lov(gco_lov_return_col).count;
          end if;
      
          l_json := '{"row":[';
      
          if p_item.escape_output then
            for i in 1 .. l_loop_count loop
              l_json := l_json || '{' ||
                apex_javascript.add_attribute('R', htf.escape_sc(l_lov(gco_lov_return_col)(i)), false, true) ||
                apex_javascript.add_attribute('D', htf.escape_sc(l_lov(gco_lov_display_col)(i)), false, false) ||
              '},';
            end loop;
          else
            for i in 1 .. l_loop_count loop
              l_json := l_json || '{' ||
                apex_javascript.add_attribute('R', l_lov(gco_lov_return_col)(i), false, true) ||
                apex_javascript.add_attribute('D', l_lov(gco_lov_display_col)(i), false, false) ||
              '},';
            end loop;
          end if;
      
          l_json := rtrim(l_json, ',');
      
          if l_lov(gco_lov_return_col).exists(l_lazy_append_row_count + 1) then
            l_more_rows_boolean := true;
          else
            l_more_rows_boolean := false;
          end if;
      
          l_json := l_json || '],' || apex_javascript.add_attribute('more', l_more_rows_boolean, true, false) || '}';
      
          htp.p(l_json);
        else
          print_lov_options(p_item, p_plugin);
        end if;
      
        return l_result;
      end ajax;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render
    ajax-procedure/function-name: ajax

  supported-for: 
    component-type: 
    - Page Items

  standard-attributes: 
    attributes: 
    - Is Visible Widget
    - Session State Changeable
    - Has Read Only Attribute
    - Has Escape Special Characters Attribute
    - Has Quick Pick Attributes
    - Has Source Attributes
    - Has Element Attributes
    - Has Element Option Attribute
    - Has Encrypt Session State Attribute
    - Has List of Values
    - Has LOV Display Null Attributes
    - Has Cascading LOV Attributes

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 3.0.3
    about-url: 'http://apex.oracle.com/pls/apex/f?p=64237:20'
    help-text: |
      <div>
      	The Select2 plugin is a jQuery based replacement for select lists in Oracle Application Express. It supports searching, multiselection, tagging, lazy loading and infinite scrolling of results.</div>
      

  standard-attributes: 
  - # ====== Standard Attribute: LOV =============================
    id: 2198741171123927
    identification: 
      name: LOV

    value: 
      required: true

    settings: 
      minimum-columns: 2
      maximum-columns: 3

    examples: 
      examples: |
        1. Dynamic LOV
        <pre>
        SELECT ename,
               empno
        FROM emp
        ORDER by ename
        </pre>
        
        2. Dynamic LOV with Option Grouping
        <pre>
        SELECT e.ename d,
               e.empno r,
               d.dname grp
        FROM emp e
        LEFT JOIN dept d ON d.deptno = e.deptno
        ORDER BY grp, d
        </pre>

  custom-attributes: 
  - # ====== Custom Attribute: No Results Found Message ==========
    id: 2176185751123884
    identification: 
      attribute: 1
      name: No Results Found Message
      scope: Application

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: The default message is "No results found".

  - # ====== Custom Attribute: Input Too Short Message ===========
    id: 2176608990123887
    identification: 
      attribute: 2
      name: Input Too Short Message
      scope: Application

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: 'The default message is "Please enter x or more characters". It is possible to reference the substitution variables #TERM#, #MINLENGTH# and #REMAININGCHARS#.'

  - # ====== Custom Attribute: Selection Too Big Message =========
    id: 2177011324123888
    identification: 
      attribute: 3
      name: Selection Too Big Message
      scope: Application

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: 'The default message is "You can only select x item(s)". It is possible to reference the substitution variable #MAXSIZE#.'

  - # ====== Custom Attribute: Searching Message =================
    id: 2177409226123888
    identification: 
      attribute: 4
      name: Searching Message
      scope: Application

    layout: 
      sequence: 40

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: The default message is "Searching...".

  - # ====== Custom Attribute: Label for Null Option Group =======
    id: 2177745727123888
    identification: 
      attribute: 5
      name: Label for Null Option Group
      scope: Application

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: The name of the option group for records whose grouping column value is null.

  - # ====== Custom Attribute: Loading More Results Message ======
    id: 2178181858123889
    identification: 
      attribute: 6
      name: Loading More Results Message
      scope: Application

    layout: 
      sequence: 45

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: The default message is "Loading more results...".

  - # ====== Custom Attribute: Look and Feel =====================
    id: 2178548780123889
    identification: 
      attribute: 7
      name: Look and Feel
      scope: Application

    layout: 
      sequence: 5

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: SELECT2

    help: 
      help-text: Choose how Select2 items should look like.

    entries: 
    - # ====== Entry: Select2 ======================================
      id: 2178973122123891
      entry: 
        sequence: 10
        display: Select2
        return: SELECT2

      advanced: 
        quick-pick: false

    - # ====== Entry: Select2 Classic ==============================
      id: 2179497983123892
      entry: 
        sequence: 20
        display: Select2 Classic
        return: SELECT2_CLASSIC

      advanced: 
        quick-pick: false

    - # ====== Entry: Custom =======================================
      id: 2180016656123892
      entry: 
        sequence: 30
        display: Custom
        return: CUSTOM

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Error Loading Message =============
    id: 2180499078123893
    identification: 
      attribute: 8
      name: Error Loading Message
      scope: Application

    layout: 
      sequence: 60

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: The default message is "The results could not be loaded".

  - # ====== Custom Attribute: Input Too Long Message ============
    id: 2180863710123893
    identification: 
      attribute: 9
      name: Input Too Long Message
      scope: Application

    layout: 
      sequence: 25

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: 'The default message is "Please delete x characters". It is possible to reference the substitution variables #TERM#, #MAXLENGTH# and #OVERCHARS#.'

  - # ====== Custom Attribute: Path to Custom CSS File ===========
    id: 2181284299123894
    identification: 
      attribute: 10
      name: Path to Custom CSS File
      scope: Application

    layout: 
      sequence: 6

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Look and Feel # 2178548780123889
      depending-on-condition-type: in list
      expression: CUSTOM
      always-evaluate: true

    help: 
      help-text: The path to the custom CSS file to style the Select2 items. You are allowed to use substitution strings here.

  - # ====== Custom Attribute: Custom CSS Filename (no extension) 
    id: 2181722451123895
    identification: 
      attribute: 11
      name: Custom CSS Filename (no extension)
      scope: Application

    layout: 
      sequence: 7

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Look and Feel # 2178548780123889
      depending-on-condition-type: in list
      expression: CUSTOM
      always-evaluate: true

    help: 
      help-text: The name of the custom CSS file to style the Select2 items. Do not add the .css extension in this field. You are allowed to use substitution strings here.

  - # ====== Custom Attribute: Select List Type ==================
    id: 2182072928123896
    identification: 
      attribute: 1
      name: Select List Type
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: SINGLE

    help: 
      help-text: A single-value select list allows the user to select one option, while the multi-value select list makes it possible to select multiple items. When tagging support is enabled, the user can select from pre-existing options or create new options on the fly.

    entries: 
    - # ====== Entry: Single-value Select List =====================
      id: 2182435329123896
      entry: 
        sequence: 10
        display: Single-value Select List
        return: SINGLE

      advanced: 
        quick-pick: false

    - # ====== Entry: Multi-value Select List ======================
      id: 2182956100123897
      entry: 
        sequence: 20
        display: Multi-value Select List
        return: MULTI

      advanced: 
        quick-pick: false

    - # ====== Entry: Tagging Support ==============================
      id: 2183464517123897
      entry: 
        sequence: 30
        display: Tagging Support
        return: TAG

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Minimum Results for Search Field ==
    id: 2184030257123898
    identification: 
      attribute: 2
      name: Minimum Results for Search Field
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 8

    condition: 
      depending-on-custom-attribute: Select List Type # 2182072928123896
      depending-on-condition-type: in list
      expression: SINGLE
      always-evaluate: true

    help: 
      help-text: The minimum number of results that must be populated in order to display the search field. A negative value will always hide the search field.

  - # ====== Custom Attribute: Minimum Input Length ==============
    id: 2184388056123898
    identification: 
      attribute: 3
      name: Minimum Input Length
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 8

    help: 
      help-text: The minimum length for a search term or a new option entered by the user.

  - # ====== Custom Attribute: Maximum Input Length ==============
    id: 2184797548123899
    identification: 
      attribute: 4
      name: Maximum Input Length
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 8

    help: 
      help-text: Maximum number of characters that can be entered for a search term or new option while tagging.

  - # ====== Custom Attribute: Maximum Selection Size ============
    id: 2185173898123899
    identification: 
      attribute: 5
      name: Maximum Selection Size
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 8

    condition: 
      depending-on-custom-attribute: Select List Type # 2182072928123896
      depending-on-condition-type: in list
      expression: MULTI,TAG
      always-evaluate: true

    help: 
      help-text: The maximum number of items that can be selected.

  - # ====== Custom Attribute: Rapid Selection ===================
    id: 2185622305123900
    identification: 
      attribute: 6
      name: Rapid Selection
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Select List Type # 2182072928123896
      depending-on-condition-type: in list
      expression: MULTI,TAG
      always-evaluate: true

    help: 
      help-text: Prevent the dropdown from closing when an item is selected, allowing for rapid selection of multiple items.

    entries: 
    - # ====== Entry:   ============================================
      id: 2186030377123901
      entry: 
        sequence: 10
        display: ' '
        return: Y

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Select on Blur ====================
    id: 2186526934123901
    identification: 
      attribute: 7
      name: Select on Blur
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Determines whether the currently highlighted option is selected when the select list loses focus.

    entries: 
    - # ====== Entry:   ============================================
      id: 2186874514123901
      entry: 
        sequence: 10
        display: ' '
        return: Y

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Search Logic ======================
    id: 2187361797123902
    identification: 
      attribute: 8
      name: Search Logic
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: CIC

    help: 
      help-text: Defines how the search with the entered value should be performed.

    entries: 
    - # ====== Entry: Contains & Ignore Case =======================
      id: 2187810479123902
      entry: 
        sequence: 10
        display: Contains & Ignore Case
        return: CIC

      advanced: 
        quick-pick: false

    - # ====== Entry: Contains & Ignore Case, with Diacritics ======
      id: 2188285864123903
      entry: 
        sequence: 15
        display: Contains & Ignore Case, with Diacritics
        return: CICD

      advanced: 
        quick-pick: false

    - # ====== Entry: Contains & Case Sensitive ====================
      id: 2188742067123903
      entry: 
        sequence: 20
        display: Contains & Case Sensitive
        return: CCS

      advanced: 
        quick-pick: false

    - # ====== Entry: Exact & Ignore Case ==========================
      id: 2189290772123904
      entry: 
        sequence: 30
        display: Exact & Ignore Case
        return: EIC

      advanced: 
        quick-pick: false

    - # ====== Entry: Exact & Case Sensitive =======================
      id: 2189747741123904
      entry: 
        sequence: 40
        display: Exact & Case Sensitive
        return: ECS

      advanced: 
        quick-pick: false

    - # ====== Entry: Starts With & Ignore Case ====================
      id: 2190275298123905
      entry: 
        sequence: 50
        display: Starts With & Ignore Case
        return: SIC

      advanced: 
        quick-pick: false

    - # ====== Entry: Starts With & Case Sensitive =================
      id: 2190807564123906
      entry: 
        sequence: 60
        display: Starts With & Case Sensitive
        return: SCS

      advanced: 
        quick-pick: false

    - # ====== Entry: Multi-word Search ============================
      id: 2191282076123906
      entry: 
        sequence: 70
        display: Multi-word Search
        return: MW

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Label for Null Option Group =======
    id: 2191743799123907
    identification: 
      attribute: 9
      name: Label for Null Option Group
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      display-width: 40

    help: 
      help-text: The name of the option group for records whose grouping column value is null. Overwrites the "Label for Null Option Group" attribute in component settings if filled in.

  - # ====== Custom Attribute: Width =============================
    id: 2192187928123907
    identification: 
      attribute: 10
      name: Width
      scope: Component

    layout: 
      sequence: 15

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 10

    help: 
      help-text: |
        Controls the width style attribute of the Select2 item. The following values are supported:
        
        <ul>
          <li><b>element</b> (default): Uses JavaScript to calculate the width of the source element.</li>
          <li><b>off</b>: No width attribute will be set. Keep in mind that the Select2 item copies classes from the source element so setting the width attribute may not always be necessary.</li>
          <li><b>copy</b>: Copies the value of the width style attribute set on the source element.</li>
          <li><b>resolve</b>: First attempts to copy than falls back on element.</li>
          <li><b>other values</b>: Any valid CSS style width value (e.g. 400px or 100%).</li>
        </ul>

  - # ====== Custom Attribute: Drag and Drop Sorting =============
    id: 2192626109123908
    identification: 
      attribute: 11
      name: Drag and Drop Sorting
      scope: Component

    layout: 
      sequence: 65

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Select List Type # 2182072928123896
      depending-on-condition-type: in list
      expression: MULTI,TAG
      always-evaluate: true

    help: 
      help-text: Allow drag and drop sorting of selected choices.

    entries: 
    - # ====== Entry:   ============================================
      id: 2193024275123908
      entry: 
        sequence: 10
        display: ' '
        return: Y

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Token Separators ==================
    id: 2193503057123909
    identification: 
      attribute: 12
      name: Token Separators
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 20

    condition: 
      depending-on-custom-attribute: Select List Type # 2182072928123896
      depending-on-condition-type: in list
      expression: TAG
      always-evaluate: true

    help: 
      help-text: |
        Select2 supports the ability to add choices automatically as the user is typing into the search field. Use the JavaScript array notation to specify one or more token separators.
        
        The following example defines the comma and space characters as token separators: [',', ' ']

  - # ====== Custom Attribute: Extra Options =====================
    id: 2193847028123909
    identification: 
      attribute: 13
      name: Extra Options
      scope: Component

    layout: 
      sequence: 130

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 60

    help: 
      help-text: |
        Enter any extra Select2 jQuery plugin options. For example:<br><br>
        
        dir: "rtl",<br>
        dropdownParent: $('.ui-dialog'),

  - # ====== Custom Attribute: Lazy Loading ======================
    id: 2194323933123910
    identification: 
      attribute: 14
      name: Lazy Loading
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Decide whether you want to enable lazy loading. Lazy loading is an AJAX-driven technique that improves page performance by not executing the LOV query until the point at which it is actually needed.

    entries: 
    - # ====== Entry:   ============================================
      id: 2194684292123910
      entry: 
        sequence: 10
        display: ' '
        return: Y

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Lazy-append Row Count =============
    id: 2195152787123910
    identification: 
      attribute: 15
      name: Lazy-append Row Count
      scope: Component

    layout: 
      sequence: 120

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 8

    condition: 
      depending-on-custom-attribute: Lazy Loading # 2194323933123910
      depending-on-condition-type: in list
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select2 supports lazy-appending of results when the result list is scrolled to the end. This setting allows you to determine the amount of rows that get appended to the item's result list. Leave empty to disable lazy-appending, which means that all rows will get populated immediately.

  events: 
  - # ====== Event: slctchange ===================================
    id: 2199191005123932
    identification: 
      name: Change
      internal-name: slctchange

  - # ====== Event: slctclose ====================================
    id: 2199535348123932
    identification: 
      name: Close
      internal-name: slctclose

  - # ====== Event: slctclosing ==================================
    id: 2200007964123932
    identification: 
      name: Closing
      internal-name: slctclosing

  - # ====== Event: slctopen =====================================
    id: 2200405168123933
    identification: 
      name: Open
      internal-name: slctopen

  - # ====== Event: slctopening ==================================
    id: 2200804588123933
    identification: 
      name: Opening
      internal-name: slctopening

  - # ====== Event: slctselect ===================================
    id: 2201227539123934
    identification: 
      name: Select
      internal-name: slctselect

  - # ====== Event: slctselecting ================================
    id: 2201593301123934
    identification: 
      name: Selecting
      internal-name: slctselecting

  - # ====== Event: slctunselect =================================
    id: 2202027637123934
    identification: 
      name: Unselect
      internal-name: slctunselect

  - # ====== Event: slctunselecting ==============================
    id: 2202372476123935
    identification: 
      name: Unselecting
      internal-name: slctunselecting

  files: 
  - # ====== File: select2-classic.css ===========================
    id: 2202804045123940
    identification: 
      file-name: select2-classic.css

    attributes: 
      mime-type: text/css

  - # ====== File: select2.min.css ===============================
    id: 2203219396123941
    identification: 
      file-name: select2.min.css

    attributes: 
      mime-type: text/css

  - # ====== File: select2.full.min.js ===========================
    id: 2203564923123944
    identification: 
      file-name: select2.full.min.js

    attributes: 
      mime-type: application/javascript

  - # ====== File: select2-apex.js ===============================
    id: 2204017944123946
    identification: 
      file-name: select2-apex.js

    attributes: 
      mime-type: application/javascript

- # ====== Plugin: QR Code Item ================================
  id: 4621131500628777
  identification: 
    name: QR Code Item
    internal-name: COM.JANNAVRATIL.APEX.QR.ITEM
    type: Item

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 23609193298644907

    subscribe-component-settings: true

  source: 
    pl/sql-code: |
      function render_qr_item (
          p_item                in apex_plugin.t_page_item,
          p_plugin              in apex_plugin.t_plugin,
          p_value               in varchar2,
          p_is_readonly         in boolean,
          p_is_printer_friendly in boolean )
          return apex_plugin.t_page_item_render_result
      is
          l_size          apex_application_page_items.attribute_01%type := p_item.attribute_01;
          l_color         apex_application_page_items.attribute_01%type := p_item.attribute_02;
          l_background    apex_application_page_items.attribute_01%type := p_item.attribute_03;
      begin
      
        if apex_application.g_debug then
          apex_plugin_util.debug_page_item(
            p_plugin        => p_plugin,
            p_page_item     => p_item
          );
        end if;
         
        apex_javascript.add_library(
           p_name      => 'qrcode.min',
           p_directory => p_plugin.file_prefix,
           p_version   => NULL
        );
      
        sys.htp.p('<div id="QR-'||p_item.id||'" style="width:'||l_size||'px; height:'||l_size||'px;"></div>');
      
        apex_javascript.add_inline_code (
          p_code => 'function renderQR_'||p_item.name||'(value) 
      { $("#QR-'||p_item.id||'").html(" ");
        new QRCode(document.getElementById("QR-'||p_item.id||'"), {
        text:   value, 
        width:  "'||l_size||'" , 
        height: "'||l_size||'" ,
        colorDark:  "'||l_color||'" , 
        colorLight: "'||l_background||'"
        } );
      }',
          p_key  => 'renderQR_'||p_item.name
        );
      
        apex_javascript.add_onload_code (
          p_code => 'renderQR_'||p_item.name||'("'||p_value||'");', 
          p_key  => 'renderQR_'||p_item.name
        );
        
        return null;
      end;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_qr_item

  supported-for: 
    component-type: 
    - Page Items

  standard-attributes: 
    attributes: 
    - Is Visible Widget
    - Has Source Attributes
    - Has Element Attributes
    - Has Encrypt Session State Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0.0
    about-url: 'https://github.com/navratil/apex-qr-code'
    help-text: |
      <div>
      	<span style="font-size:11px;"><span style="font-family:courier new,courier,monospace;">&nbsp;__ &nbsp; &nbsp;__ &nbsp; &nbsp; ____ &nbsp; &nbsp;__ &nbsp; &nbsp;__ &nbsp; _________ &nbsp; &nbsp; ____ &nbsp; ________ &nbsp; __ &nbsp; __</span></span></div>
      <div>
      	<span style="font-size:11px;"><span style="font-family: 'courier new', courier, monospace;">| &nbsp;\ &nbsp;| &nbsp;| &nbsp; / &nbsp; &nbsp;\ &nbsp;| &nbsp;| &nbsp;| &nbsp;| | &nbsp; ___ &nbsp; \ &nbsp; / &nbsp; &nbsp;\ |__ &nbsp; &nbsp;__| | &nbsp;| | &nbsp;|</span></span></div>
      <div>
      	<span style="font-size:11px;"><span style="font-family:courier new,courier,monospace;">| &nbsp; \_| &nbsp;| &nbsp;/ &nbsp;/\ &nbsp;\ | &nbsp;| &nbsp;| &nbsp;| | &nbsp;|___| &nbsp;/ &nbsp;/ &nbsp;/\ &nbsp;\ &nbsp; | &nbsp;| &nbsp; &nbsp;| &nbsp;| | &nbsp;|</span></span></div>
      <div>
      	<span style="font-size:11px;"><span style="font-family:courier new,courier,monospace;">| &nbsp; _ &nbsp; &nbsp;| | &nbsp;|__| &nbsp;| \ &nbsp;\/ &nbsp;/ &nbsp;| &nbsp; __ &nbsp; / &nbsp;| &nbsp;|__| &nbsp;| &nbsp;| &nbsp;| &nbsp; &nbsp;| &nbsp;| | &nbsp;|</span></span></div>
      <div>
      	<span style="font-size:11px;"><span style="font-family:courier new,courier,monospace;">| &nbsp;| \ &nbsp; | | &nbsp; __ &nbsp; | &nbsp;\ &nbsp; &nbsp;/ &nbsp; | &nbsp;| &nbsp;\ &nbsp;\ &nbsp;| &nbsp; __ &nbsp; | &nbsp;| &nbsp;| &nbsp; &nbsp;| &nbsp;| | &nbsp;|____</span></span></div>
      <div>
      	<span style="font-size:11px;"><span style="font-family:courier new,courier,monospace;">|__| &nbsp;\__| |__| &nbsp;|__| &nbsp; \__/ &nbsp; &nbsp;|__| &nbsp; \__\ |__| &nbsp;|__| &nbsp;|__| &nbsp; &nbsp;|__| |_______|</span></span></div>
      <div>
      	&nbsp;</div>
      <div>
      	<span style="font-size:16px;">github.com/navratil/apex-qr-plugin</span></div>
      

  comments: 
    comments: |
      The MIT License (MIT)
      
      QR code plugin for Oracle Application Express
      
      Copyright (c) 2014 Jan Navratil    (github.com/navratil/apex-qr-plugin)
      Copyright (c) 2012 davidshimjs     (github.com/davidshimjs/qrcodejs)
      
      Permission is hereby granted, free of charge, to any person obtaining a copy of
      this software and associated documentation files (the "Software"), to deal in
      the Software without restriction, including without limitation the rights to
      use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
      the Software, and to permit persons to whom the Software is furnished to do so,
      subject to the following conditions:
      
      The above copyright notice and this permission notice shall be included in all
      copies or substantial portions of the Software.
      
      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
      FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
      COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
      IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
      

  custom-attributes: 
  - # ====== Custom Attribute: Size ==============================
    id: 4621308113628816
    identification: 
      attribute: 1
      name: Size
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 10
      maximum-length: 30

    default: 
      value: 200

    help: 
      help-text: Height and Width of the QR code in pixels

  - # ====== Custom Attribute: Color =============================
    id: 4621676364628819
    identification: 
      attribute: 2
      name: Color
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 10
      maximum-length: 30

    default: 
      value: '#000000'

    help: 
      help-text: QR code color (dark)

  - # ====== Custom Attribute: Background ========================
    id: 4622071391628819
    identification: 
      attribute: 3
      name: Background
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 10
      maximum-length: 30

    default: 
      value: '#FFFFFF'

    help: 
      help-text: QR code background color

  files: 
  - # ====== File: qrcode.min.js =================================
    id: 4622814695628846
    identification: 
      file-name: qrcode.min.js

    attributes: 
      mime-type: application/javascript

- # ====== Plugin: Avatar ======================================
  id: 13169653939189849
  identification: 
    name: Avatar
    internal-name: THEME_142$AVATAR
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3030479391465376 # Avatar

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <span class="t-Avatar is-placeholder{if ?SHAPE/} #SHAPE!ATTR#{endif/}{if ?SIZE/} #SIZE!ATTR#{endif/}{if ?CSS_CLASSES/} #CSS_CLASSES!ATTR#{endif/}"></span>
      {else/}
        {if ?LINK/}<a href="#LINK!ATTR#" #LINK_ATTR!RAW#{else/}<span{endif/} class="t-Avatar{if ?TYPE/} t-Avatar--{if ?IMAGE/}image{else/}{if ?INITIALS/}initials{else/}icon{endif/}{endif/}{endif/}{if ?SHAPE/} #SHAPE!ATTR#{endif/}{if ?SIZE/} #SIZE!ATTR#{endif/}{if ?ICON/} #ICON!ATTR#{else/} fa fa-user{endif/}{if ?CSS_CLASSES/} #CSS_CLASSES!ATTR#{endif/} u-color">{if IMAGE/}<img src="#IMAGE!ATTR#" alt="#IMAGE_ALT!ATTR#"{if ?IMAGE_ALT/} title="#IMAGE_ALT!ATTR#"{endif/} loading="lazy" />{else/}{if ?INITIALS/}#INITIALS!RAW#{endif/}{endif/}{if ?LINK/}</a>{else/}</span>{endif/}
      {endif/}
      
    translate-templates: false
    default-escape-mode: HTML

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0
    help-text: Display an image, icon, or initials. Available as a partial template to display a single row.

  custom-attributes: 
  - # ====== Custom Attribute: Type ==============================
    id: 14086132955195190
    identification: 
      static-id: TYPE
      attribute: 1
      name: Type
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: IMAGE

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: IMAGE

    entries: 
    - # ====== Entry: Image ========================================
      id: 14086607975195191
      entry: 
        sequence: 10
        display: Image
        return: IMAGE

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 14087146627195193
      entry: 
        sequence: 20
        display: Initials
        return: INITIALS

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 14087738722195194
      entry: 
        sequence: 30
        display: Icon
        return: ICON

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 14088376617195195
    identification: 
      static-id: IMAGE
      attribute: 2
      name: Image
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 14086132955195190
      depending-on-condition-type: equal to
      expression: IMAGE
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

    examples: 
      demo-value: '#APEX_FILES#apex_ui/img/favicons/app-artwork-catalog.png'

  - # ====== Custom Attribute: Image Description =================
    id: 14088908196195196
    identification: 
      static-id: IMAGE_ALT
      attribute: 3
      name: Image Description
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Image # 14088376617195195
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image or select a source column from the quick pick options. This will be used as alt text for the avatar image.

  - # ====== Custom Attribute: Initials ==========================
    id: 14089357596195197
    identification: 
      static-id: INITIALS
      attribute: 4
      name: Initials
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Type # 14086132955195190
      depending-on-condition-type: equal to
      expression: INITIALS
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 14089865956195198
    identification: 
      static-id: ICON
      attribute: 5
      name: Icon
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 14086132955195190
      depending-on-condition-type: equal to
      expression: ICON
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 14090421346195199
    identification: 
      static-id: SHAPE
      attribute: 6
      name: Shape
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14090920248195200
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14091532617195201
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 14092088783195202
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

  - # ====== Custom Attribute: Size ==============================
    id: 14092668103195204
    identification: 
      static-id: SIZE
      attribute: 7
      name: Size
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Set the size of the avatar. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Extra Extra Small ============================
      id: 14093135294195205
      entry: 
        sequence: 10
        display: Extra Extra Small
        return: t-Avatar--xs

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Small ==================================
      id: 14093744968195206
      entry: 
        sequence: 20
        display: Extra Small
        return: t-Avatar--xs

      advanced: 
        quick-pick: false

    - # ====== Entry: Small ========================================
      id: 14094389579195207
      entry: 
        sequence: 30
        display: Small
        return: t-Avatar--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 14094936499195208
      entry: 
        sequence: 40
        display: Medium
        return: t-Avatar--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 14095561933195209
      entry: 
        sequence: 50
        display: Large
        return: t-Avatar--lg

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Large ==================================
      id: 14096160387195211
      entry: 
        sequence: 60
        display: Extra Large
        return: t-Avatar--xl

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Extra Large ============================
      id: 14096825191195212
      entry: 
        sequence: 70
        display: Extra Extra Large
        return: t-Avatar--xxl

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: CSS Classes =======================
    id: 14097402527195213
    identification: 
      static-id: CSS_CLASSES
      attribute: 8
      name: CSS Classes
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Text
      common: false
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    help: 
      help-text: Enter classes to add to this component. You may add multiple classes by separating them with a space.

  action-positions: 
  - # ====== Action Position: Link ===============================
    id: 1816251334273768977
    identification: 
      name: Link
      static-id: LINK
      sequence: 10

    advanced: 
      quick-pick: true

    settings: 
      type: Link

- # ====== Plugin: Badge =======================================
  id: 13178624389189876
  identification: 
    name: Badge
    internal-name: THEME_142$BADGE
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3044797667465457 # Badge

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <span class="t-Badge is-placeholder{if ?SIZE/} #SIZE!ATTR#{endif/}{if ?SHAPE/} #SHAPE!ATTR#{endif/}"></span>
      {else/}
        <span class="t-Badge {if ?STATE/}t-Badge--#STATE!ATTR#{endif/} {if ?STYLE/}#STYLE!ATTR#{endif/} {if ?SIZE/}#SIZE!ATTR#{endif/} {if ?SHAPE/}#SHAPE!ATTR#{endif/}" role="status" aria-label="#LABEL!ATTR# #VALUE!ATTR#" title="#LABEL!ATTR# #VALUE!ATTR#">
          {if ?ICON/}<span class="t-Badge-icon #ICON!ATTR#" aria-hidden="true"></span>{endif/}
          {if LABEL_DISPLAY/}<span class="t-Badge-label">#LABEL!RAW#</span>{endif/}
          <span class="t-Badge-value">#VALUE!RAW#</span>
        </span>
      {endif/}
      
    report-body: |
      {if !APEX$HAS_MESSAGE/}
        <ul class="t-Badges #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>
      {endif/}
    report-row: |
      <li class="t-Badges-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>
      
    translate-templates: true
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 1

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0
    help-text: Display content within a badge. Available for multiple report rows or a single row.

  custom-attributes: 
  - # ====== Custom Attribute: Label =============================
    id: 14100308852195225
    identification: 
      static-id: LABEL
      attribute: 1
      name: Label
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: Strip HTML

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 14100763389195226
    identification: 
      static-id: VALUE
      attribute: 2
      name: Value
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: Strip HTML

    help: 
      help-text: Select a source column for the badge value.

  - # ====== Custom Attribute: State =============================
    id: 14101273834195227
    identification: 
      static-id: STATE
      attribute: 3
      name: State
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

  - # ====== Custom Attribute: Icon ==============================
    id: 14101797163195228
    identification: 
      static-id: ICON
      attribute: 4
      name: Icon
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

  - # ====== Custom Attribute: Display Label =====================
    id: 14102253502195229
    identification: 
      static-id: LABEL_DISPLAY
      attribute: 5
      name: Display Label
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 14102778404195231
    identification: 
      static-id: STYLE
      attribute: 6
      name: Style
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 14103257126195232
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 14103898945195233
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 14104521162195235
    identification: 
      static-id: SHAPE
      attribute: 7
      name: Shape
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14104990638195236
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14105547565195237
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 14106145637195238
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Size ==============================
    id: 14106752327195239
    identification: 
      static-id: SIZE
      attribute: 8
      name: Size
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Set the size of the badge. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Small ========================================
      id: 14107312054195240
      entry: 
        sequence: 10
        display: Small
        return: t-Badge--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 14107905655195241
      entry: 
        sequence: 20
        display: Medium
        return: t-Badge--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 14108508790195242
      entry: 
        sequence: 30
        display: Large
        return: t-Badge--lg

      advanced: 
        quick-pick: false

- # ====== Plugin: Button ======================================
  id: 13184463180189891
  identification: 
    name: Button
    internal-name: THEME_142$BUTTON
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3070717973465528 # Button

    subscribe-component-settings: true

  templates: 
    partial: |
      {if MENU_ID/}<button type="button" data-menu="#MENU_ID!ATTR#"{else/}<a href="#LINK_URL!ATTR#" #LINK_ATTR!RAW#{endif/} class="t-Button{if IS_HOT/} t-Button--hot{endif/}{if IS_ICON_ONLY/} t-Button--noLabel t-Button--icon{else/}{if ICON_CLASSES/} t-Button--iconLeft{endif/}{endif/} #CSS_CLASSES!ATTR#" title="#LABEL!ATTR#" {if IS_DISABLED/} disabled{endif/}>
        {if ?ICON_CLASSES/}<span class="t-Icon t-Icon--left #ICON_CLASSES!ATTR#" aria-hidden="true"></span>{endif/}<span class="t-Button-label">#LABEL!RAW#</span>
      {if MENU_ID/}</button>{else/}</a>{endif/}
      
    translate-templates: false
    default-escape-mode: HTML

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  custom-attributes: 
  - # ====== Custom Attribute: Label =============================
    id: 14109492699195247
    identification: 
      static-id: LABEL
      attribute: 1
      name: Label
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: Raw

  - # ====== Custom Attribute: Link URL ==========================
    id: 14109992335195248
    identification: 
      static-id: LINK_URL
      attribute: 2
      name: Link URL
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Link to Target Page/URL
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

  - # ====== Custom Attribute: Link Attribute ====================
    id: 14110446897195249
    identification: 
      static-id: LINK_ATTR
      attribute: 3
      name: Link Attribute
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: Raw

  - # ====== Custom Attribute: Icon Classes ======================
    id: 14110967532195250
    identification: 
      static-id: ICON_CLASSES
      attribute: 4
      name: Icon Classes
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

  - # ====== Custom Attribute: CSS Classes =======================
    id: 14111443886195251
    identification: 
      static-id: CSS_CLASSES
      attribute: 5
      name: CSS Classes
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

  - # ====== Custom Attribute: Is Disabled =======================
    id: 14111945800195252
    identification: 
      static-id: IS_DISABLED
      attribute: 6
      name: Is Disabled
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: N

  - # ====== Custom Attribute: Is Hot ============================
    id: 14112514192195253
    identification: 
      static-id: IS_HOT
      attribute: 7
      name: Is Hot
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: N

  - # ====== Custom Attribute: Is Icon Only ======================
    id: 14112978583195254
    identification: 
      static-id: IS_ICON_ONLY
      attribute: 8
      name: Is Icon Only
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: N

- # ====== Plugin: Comments ====================================
  id: 13187147225189899
  identification: 
    name: Comments
    internal-name: THEME_142$COMMENTS
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3053992695465483 # Comments

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div class="t-Comments-item">
          {if DISPLAY_AVATAR%assigned/}
            <div class="t-Comments-icon">
              {with/}
                SIZE:=t-Avatar--xs
                SHAPE:=#AVATAR_SHAPE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-Comments-body">
            <div class="t-Comments-info">
              <span class="t-Comments-user is-placeholder"></span>
            </div>
            <div class="t-Comments-comment is-placeholder"></div>
          </div>
        </div>
      {else/}
        <div class="t-Comments-item">
          {if DISPLAY_AVATAR/}
            <div class="t-Comments-icon">
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                IMAGE_ALT:=#AVATAR_IMAGE_ALT#
                ICON:=#AVATAR_ICON#
                INITIALS:=#AVATAR_INITIALS#
                SIZE:=t-Avatar--xs
                SHAPE:=#AVATAR_SHAPE#
                CSS_CLASSES:=u-color
                LINK:=#AVATAR_LINK#
                LINK_ATTR:=#AVATAR_LINK_ATTR!RAW#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-Comments-body">
            <div class="t-Comments-info">
              <span class="t-Comments-user">{if USER_NAME_LINK/}<a href="#USER_NAME_LINK!ATTR#" #USER_NAME_LINK_ATTR!RAW#>{endif/}#USER_NAME!RAW#{if USER_NAME_LINK/}</a>{endif/}</span>
              {if COMMENT_DATE/}<span class="t-Comments-date">#COMMENT_DATE!RAW#</span>{endif/}
              {if ACTIONS/}<span class="t-Comments-actions">#ACTIONS!RAW#</span>{endif/}
            </div>
            <div class="t-Comments-comment">
              #COMMENT_TEXT!RAW#
              {if ATTRIBUTES/}<div class="t-Comments-attributes">#ATTRIBUTES!RAW#</div>{endif/}
            </div>
          </div>
        </div>
      {endif/}
    report-body: |
      <ul class="t-Comments{if ?STYLE/} #STYLE!ATTR#{endif/} {if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>
      
    report-row: |
      <li class="t-Comments-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>
      
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display user comments and status updates. Supports avatars. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Avatar =============================
    id: 1818867132738671400
    identification: 
      name: Avatar
      sequence: 20

  custom-attributes: 
  - # ====== Custom Attribute: Comment Text ======================
    id: 14114294693195260
    identification: 
      static-id: COMMENT_TEXT
      attribute: 1
      name: Comment Text
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column containing text for user comments.

    examples: 
      demo-value: Praesent vel felis rutrum erat elementum viverra sit amet non odio. Cras vel auctor eros, in malesuada dolor. Nulla tellus magna, ornare consectetur purus id, volutpat egestas felis. Proin lobortis risus massa, nec faucibus arcu malesuada a. Nunc sed gravida urna. Fusce at ligula sed erat consequat pharetra.

  - # ====== Custom Attribute: User Name =========================
    id: 14114734552195261
    identification: 
      static-id: USER_NAME
      attribute: 2
      name: User Name
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be displayed as the user name associated with a comment.

    examples: 
      demo-value: Joel

  - # ====== Custom Attribute: Date ==============================
    id: 14115263317195262
    identification: 
      static-id: COMMENT_DATE
      attribute: 3
      name: Date
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      - Date
      escape-mode: HTML

    help: 
      help-text: Select a source column containing a date, date range, or time.

    examples: 
      demo-value: 5 minutes ago

  - # ====== Custom Attribute: Attributes ========================
    id: 14115822607195264
    identification: 
      static-id: ATTRIBUTES
      attribute: 4
      name: Attributes
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML

    help: 
      help-text: Enter some text and/or column substitution strings to be used as the comment attributes.

  - # ====== Custom Attribute: Type ==============================
    id: 14116258038195265
    identification: 
      static-id: AVATAR_TYPE
      attribute: 5
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 1818867132738671400
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 14123370376195279
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: initials

    entries: 
    - # ====== Entry: Image ========================================
      id: 14116727725195265
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 14117290777195267
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 14117894199195268
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 14118516898195269
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 6
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 1818867132738671400
      sequence: 60

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 14116258038195265
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Image Description =================
    id: 14119007746195270
    identification: 
      static-id: AVATAR_IMAGE_ALT
      attribute: 7
      name: Image Description
      scope: Component

    layout: 
      attribute-group: Avatar # 1818867132738671400
      sequence: 70

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Image # 14118516898195269
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image or select a source column from the quick pick options. This will be used as alt text for the avatar image.

  - # ====== Custom Attribute: Initials ==========================
    id: 14119490611195271
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 8
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 1818867132738671400
      sequence: 80

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 14116258038195265
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

    examples: 
      demo-value: JK

  - # ====== Custom Attribute: Icon ==============================
    id: 14120013159195272
    identification: 
      static-id: AVATAR_ICON
      attribute: 9
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 1818867132738671400
      sequence: 90

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 14116258038195265
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 14120494802195273
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 10
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 1818867132738671400
      sequence: 100

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--rounded

    condition: 
      depending-on-custom-attribute: Display Avatar # 14123370376195279
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14121025700195274
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14121581073195275
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 14122147233195276
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 14122766810195278
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 14123370376195279
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 11
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

    examples: 
      demo-value: Y

  - # ====== Custom Attribute: Style =============================
    id: 14123906617195280
    identification: 
      static-id: STYLE
      attribute: 12
      name: Style
      scope: Report

    layout: 
      sequence: 120

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Comments--basic

    help: 
      help-text: Set the style of the comments.

    examples: 
      demo-value: t-Comments--chat

    entries: 
    - # ====== Entry: Basic ========================================
      id: 14124365700195281
      entry: 
        sequence: 10
        display: Basic
        return: t-Comments--basic

      advanced: 
        quick-pick: false

    - # ====== Entry: Chat (Speech Bubbles) ========================
      id: 14124988179195282
      entry: 
        sequence: 20
        display: Chat (Speech Bubbles)
        return: t-Comments--chat

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 14125616280195284
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 13
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 130

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

  action-positions: 
  - # ====== Action Position: Actions ============================
    id: 1816259010081781145
    identification: 
      name: Actions
      static-id: ACTIONS
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Template

  - # ====== Action Position: Avatar Link ========================
    id: 1816314633751763024
    identification: 
      name: Avatar Link
      static-id: AVATAR_LINK
      sequence: 20

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: User Name Link =====================
    id: 1816466851464633795
    identification: 
      name: User Name Link
      static-id: USER_NAME_LINK
      sequence: 30

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  action-templates: 
  - # ====== Action Template: Link ===============================
    id: 1816259601586788602
    identification: 
      name: Link
      type: Button

    template: 
      action-template: '{if !IS_DISABLED/}<a {if CSS_CLASSES/}class="#CSS_CLASSES#"{endif/} href="#LINK_URL#" #LINK_ATTR!RAW#>#LABEL!RAW#</a>{endif/}'

    advanced: 
      translatable: false

- # ====== Plugin: Content Row =================================
  id: 13197152631189925
  identification: 
    name: Content Row
    internal-name: THEME_142$CONTENT_ROW
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3101281341465609 # Content Row

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div class="t-ContentRow-wrap" aria-hidden="true">
          {if ?SELECTION%assigned/}<div class="t-ContentRow-selection is-placeholder"></div>{endif/}
          {if DISPLAY_BADGE/}
            <div class="t-ContentRow-badge #BADGE_COL_WIDTH!ATTR#">
              {with/}
                LABEL:=
                VALUE:=
                SIZE:=#BADGE_SIZE#
                SHAPE:=#BADGE_SHAPE#
              {apply THEME$BADGE/}
            </div>
          {endif/}
          {if DISPLAY_AVATAR/}
            <div class="t-ContentRow-avatar">
              {with/}
                SHAPE:=#AVATAR_SHAPE#
                SIZE:=#AVATAR_SIZE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-ContentRow-body">
            <div class="t-ContentRow-content">
              {if ?OVERLINE%assigned/}<div class="t-ContentRow-overline is-placeholder"></div>{endif/}
              {if ?TITLE%assigned/}<div class="t-ContentRow-title is-placeholder"></div>{endif/}
              {if ?DESCRIPTION%assigned/}<div class="t-ContentRow-description is-placeholder"></div>{endif/}
            </div>
            {if ?MISC%assigned/}<div class="t-ContentRow-misc is-placeholder"></div>{endif/}
            {if ?PRIMARY_ACTIONS%assigned/}<div class="t-ContentRow-actions is-placeholder"></div>{endif/}
          </div>
        </div>
      {else/}
        {if ?FULL_ROW_LINK/}<a class="t-ContentRow-fullLink" href="#FULL_ROW_LINK!ATTR#" #FULL_ROW_LINK_ATTR!RAW#></a>{endif/}
        <div class="t-ContentRow-wrap">
          {if ?SELECTION%assigned/}<div class="t-ContentRow-selection">#SELECTION!RAW#</div>{endif/}
          {if DISPLAY_BADGE/}
            <div class="t-ContentRow-badge #BADGE_COL_WIDTH!ATTR#">
              {with/}
                LABEL_DISPLAY:=#BADGE_LABEL_DISPLAY#
                LABEL:=#BADGE_LABEL#
                VALUE:=#BADGE_VALUE#
                ICON:=#BADGE_ICON#
                STATE:=#BADGE_STATE#
                SIZE:=#BADGE_SIZE#
                STYLE:=#BADGE_STYLE#
                SHAPE:=#BADGE_SHAPE#
              {apply THEME$BADGE/}
            </div>
          {endif/}
          {if DISPLAY_AVATAR/}
            <div class="t-ContentRow-avatar" aria-hidden="true">
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                IMAGE_ALT:=#AVATAR_IMAGE_ALT#
                INITIALS:=#AVATAR_INITIALS#
                ICON:=#AVATAR_ICON#
                SHAPE:=#AVATAR_SHAPE#
                SIZE:=#AVATAR_SIZE#
                LINK:=#AVATAR_LINK#
                LINK_ATTR:=#AVATAR_LINK_ATTR!RAW#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-ContentRow-body">
            <div class="t-ContentRow-content">
              {if ?OVERLINE/}<div class="t-ContentRow-overline">#OVERLINE!RAW#</div>{endif/}
              {if ?TITLE/}<h3 class="t-ContentRow-title">{if ?TITLE_LINK/}<a href="#TITLE_LINK!ATTR#" #TITLE_LINK_ATTR!RAW#>{endif/}#TITLE!RAW#{if ?TITLE_LINK/}</a>{endif/}</h3>{endif/}
              {if ?DESCRIPTION/}<div class="t-ContentRow-description">#DESCRIPTION!RAW#</div>{endif/}
            </div>
            {if ?MISC%assigned/}<div class="t-ContentRow-misc">#MISC!RAW#</div>{endif/}
            {if ?PRIMARY_ACTIONS/}<div class="t-ContentRow-actions">#PRIMARY_ACTIONS#</div>{endif/}
          </div>
        </div>
      {endif/}
      
    report-body: '<ul class="t-ContentRow{if ?STYLE/} #STYLE!ATTR#{endif/}{if ?ALIGN/} #ALIGN!ATTR#{endif/}{if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>'
    report-row: '<li class="t-ContentRow-item{if ?ITEM_CLASSES/} #ITEM_CLASSES#{endif/}" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display content in a formatted row with a title, description, and more. Supports avatars and badges. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Badge ==============================
    id: 1946252129050711462
    identification: 
      name: Badge
      sequence: 20

  - # ====== Attribute Group: Avatar =============================
    id: 1946252684062711463
    identification: 
      name: Avatar
      sequence: 10

  custom-attributes: 
  - # ====== Custom Attribute: Overline ==========================
    id: 14131264974195303
    identification: 
      static-id: OVERLINE
      attribute: 1
      name: Overline
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter some text and/or column substitution strings to display at the top of each row above the title and description.

    examples: 
      demo-value: Category

  - # ====== Custom Attribute: Title =============================
    id: 14131742251195304
    identification: 
      static-id: TITLE
      attribute: 2
      name: Title
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter some text and/or column substitution strings to be used as the title in each row.

    examples: 
      demo-value: Lorem ipsum dolor sit amet

  - # ====== Custom Attribute: Description =======================
    id: 14132257246195305
    identification: 
      static-id: DESCRIPTION
      attribute: 3
      name: Description
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter some text and/or column substitution strings to be used as the description in each row.

    examples: 
      demo-value: Nunc sit amet nunc quis magna ornare suscipit. Etiam aliquet maximus sapien, at sagittis sem gravida nec.

  - # ====== Custom Attribute: Miscellaneous =====================
    id: 14132787789195306
    identification: 
      static-id: MISC
      attribute: 4
      name: Miscellaneous
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter miscellaneous content such as additional text and/or column substitution strings to display in each row.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 14133286119195307
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 5
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

  - # ====== Custom Attribute: Display Badge =====================
    id: 14133821356195308
    identification: 
      static-id: DISPLAY_BADGE
      attribute: 6
      name: Display Badge
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge for each row. When set to Yes, a badge will be displayed in each row. When set to No, no badge will be displayed.

  - # ====== Custom Attribute: Type ==============================
    id: 14134332501195309
    identification: 
      static-id: AVATAR_TYPE
      attribute: 7
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 14133286119195307
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: icon

    entries: 
    - # ====== Entry: Image ========================================
      id: 14134743933195310
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 14135392810195311
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 14135970741195312
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 14136605137195313
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 8
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 80

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 14134332501195309
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Image Description =================
    id: 14137120925195314
    identification: 
      static-id: AVATAR_IMAGE_ALT
      attribute: 9
      name: Image Description
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 90

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Image # 14136605137195313
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image or select a source column from the quick pick options. This will be used as alt text for the avatar image.

  - # ====== Custom Attribute: Initials ==========================
    id: 14137541108195315
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 10
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 100

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 14134332501195309
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 14138114188195317
    identification: 
      static-id: AVATAR_ICON
      attribute: 11
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 110

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 14134332501195309
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 14138622879195318
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 12
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 120

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--rounded

    condition: 
      depending-on-custom-attribute: Display Avatar # 14133286119195307
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14139033920195319
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14139715857195320
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 14140303456195321
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 14140860800195322
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Label =============================
    id: 14141451702195323
    identification: 
      static-id: BADGE_LABEL
      attribute: 13
      name: Label
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 130

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 14141968453195324
    identification: 
      static-id: BADGE_VALUE
      attribute: 14
      name: Value
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 140

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select a source column for the badge value.

  - # ====== Custom Attribute: State =============================
    id: 14142473909195325
    identification: 
      static-id: BADGE_STATE
      attribute: 15
      name: State
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 150

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

  - # ====== Custom Attribute: Icon ==============================
    id: 14143003212195326
    identification: 
      static-id: BADGE_ICON
      attribute: 16
      name: Icon
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 160

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

  - # ====== Custom Attribute: Display Label =====================
    id: 14143494431195328
    identification: 
      static-id: BADGE_LABEL_DISPLAY
      attribute: 17
      name: Display Label
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 170

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 14143959905195329
    identification: 
      static-id: BADGE_STYLE
      attribute: 18
      name: Style
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 180

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 14144475656195330
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 14145131489195331
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 14145659851195332
    identification: 
      static-id: BADGE_SHAPE
      attribute: 19
      name: Shape
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 190

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14146165280195333
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14146775600195334
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 14147372572195335
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Size ==============================
    id: 14147984084195336
    identification: 
      static-id: AVATAR_SIZE
      attribute: 20
      name: Size
      scope: Component

    layout: 
      attribute-group: Avatar # 1946252684062711463
      sequence: 200

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Avatar # 14133286119195307
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Set the size of the avatar. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Extra Extra Small ============================
      id: 14148449231195337
      entry: 
        sequence: 10
        display: Extra Extra Small
        return: t-Avatar--xxs

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Small ==================================
      id: 14149112519195339
      entry: 
        sequence: 20
        display: Extra Small
        return: t-Avatar--xs

      advanced: 
        quick-pick: false

    - # ====== Entry: Small ========================================
      id: 14149678491195340
      entry: 
        sequence: 30
        display: Small
        return: t-Avatar--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 14150268340195341
      entry: 
        sequence: 40
        display: Medium
        return: t-Avatar--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 14150896716195342
      entry: 
        sequence: 50
        display: Large
        return: t-Avatar--lg

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Large ==================================
      id: 14151451261195343
      entry: 
        sequence: 60
        display: Extra Large
        return: t-Avatar--xl

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Extra Large ============================
      id: 14152127986195344
      entry: 
        sequence: 70
        display: Extra Extra Large
        return: t-Avatar--xxl

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Size ==============================
    id: 14152647764195345
    identification: 
      static-id: BADGE_SIZE
      attribute: 21
      name: Size
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 210

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Set the size of the badge. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Small ========================================
      id: 14153149787195346
      entry: 
        sequence: 10
        display: Small
        return: t-Badge--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 14153764914195348
      entry: 
        sequence: 20
        display: Medium
        return: t-Badge--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 14154433038195349
      entry: 
        sequence: 30
        display: Large
        return: t-Badge--lg

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Column Width ======================
    id: 14154964172195350
    identification: 
      static-id: BADGE_COL_WIDTH
      attribute: 22
      name: Column Width
      scope: Component

    layout: 
      attribute-group: Badge # 1946252129050711462
      sequence: 220

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    default: 
      value: t-ContentRow-badge--md

    condition: 
      depending-on-custom-attribute: Display Badge # 14133821356195308
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Set the width of the content row columns. Default width is medium.

    entries: 
    - # ====== Entry: Small ========================================
      id: 14155443079195351
      entry: 
        sequence: 10
        display: Small
        return: t-ContentRow-badge--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 14156079189195352
      entry: 
        sequence: 20
        display: Medium
        return: t-ContentRow-badge--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 14156651042195353
      entry: 
        sequence: 30
        display: Large
        return: t-ContentRow-badge--lg

      advanced: 
        quick-pick: false

    - # ====== Entry: Auto =========================================
      id: 14157315913195354
      entry: 
        sequence: 40
        display: Auto
        return: t-ContentRow-badge--auto

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 14157867936195356
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 23
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 230

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

  action-positions: 
  - # ====== Action Position: Title Link =========================
    id: 1811156800938142122
    identification: 
      name: Title Link
      static-id: TITLE_LINK
      sequence: 30

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Full Row Link ======================
    id: 1811836101668225226
    identification: 
      name: Full Row Link
      static-id: FULL_ROW_LINK
      sequence: 40

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Avatar Link ========================
    id: 1824748494545503869
    identification: 
      name: Avatar Link
      static-id: AVATAR_LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Primary Actions ====================
    id: 1824749827935517726
    identification: 
      name: Primary Actions
      static-id: PRIMARY_ACTIONS
      sequence: 20

    advanced: 
      quick-pick: false

    settings: 
      type: Template

  action-templates: 
  - # ====== Action Template: Button =============================
    id: 1824750429612548855
    identification: 
      name: Button
      type: Button

    template: 
      action-template: |
        {with/}
        LINK_URL:=#LINK_URL#
        LINK_ATTR:=#LINK_ATTR!RAW#
        LABEL:=#LABEL!RAW#
        ICON_CLASSES:=#ICON_CLASSES#
        CSS_CLASSES:=#CSS_CLASSES#
        IS_HOT:=#IS_HOT#
        IS_ICON_ONLY:=#IS_ICON_ONLY#
        IS_DISABLED:=#IS_DISABLED#
        {apply THEME$BUTTON/}

    advanced: 
      translatable: false

  - # ====== Action Template: Menu ===============================
    id: 1824751689132553003
    identification: 
      name: Menu
      type: Menu

    template: 
      action-template: |
        {with/}
        MENU_ID:=#MENU_ID#
        LABEL:=#LABEL!RAW#
        ICON_CLASSES:=#ICON_CLASSES#
        CSS_CLASSES:=#CSS_CLASSES#
        IS_HOT:=#IS_HOT#
        IS_DISABLED:=#IS_DISABLED#
        IS_ICON_ONLY:=#IS_ICON_ONLY#
        {apply THEME$BUTTON/}
        #MENU#

    advanced: 
      translatable: false

- # ====== Plugin: Media List ==================================
  id: 13219535136189981
  identification: 
    name: Media List
    internal-name: THEME_142$MEDIA_LIST
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3138317413465710 # Media List

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div class="t-MediaList-itemWrap">
          {if DISPLAY_AVATAR/}
            <div class="t-MediaList-iconWrap" aria-hidden="true">
              {with/}
                SIZE:=t-Avatar--xs
                SHAPE:=#AVATAR_SHAPE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-MediaList-body">
            {if ?TITLE%assigned/}<div class="t-MediaList-title is-placeholder"></div>{endif/}
            {if ?DESCRIPTION%assigned/}<div class="t-MediaList-desc is-placeholder"></div>{endif/}
          </div>
          {if DISPLAY_BADGE%assigned/}
            {with/}
              LABEL:=
              VALUE:=
              SHAPE:=#BADGE_SHAPE#
              STYLE:=#BADGE_STYLE#
            {apply THEME$BADGE/}
          {endif/}
        </div>
      {else/}
        {if LINK/}<a href="#LINK!ATTR#" #LINK_ATTR!RAW#{else/}<div{endif/} class="t-MediaList-itemWrap{if ?DESCRIPTION/} t-MediaList-itemWrap--showDesc{endif/}">
          {if DISPLAY_AVATAR/}
            <div class="t-MediaList-iconWrap" aria-hidden="true">
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                IMAGE_ALT:=#AVATAR_IMAGE_ALT#
                ICON:=#AVATAR_ICON#
                INITIALS:=#AVATAR_INITIALS#
                CSS_CLASSES:=u-color
                SHAPE:=#AVATAR_SHAPE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-MediaList-body">
            {if ?TITLE/}<h3 class="t-MediaList-title">#TITLE!RAW#</h3>{endif/}
            {if ?DESCRIPTION/}<p class="t-MediaList-desc">#DESCRIPTION!RAW#</p>{endif/}
          </div>
          {if DISPLAY_BADGE/}
            {with/}
              LABEL_DISPLAY:=#BADGE_LABEL_DISPLAY#
              LABEL:=#BADGE_LABEL#
              VALUE:=#BADGE_VALUE#
              ICON:=#BADGE_ICON#
              STATE:=#BADGE_STATE#
              SIZE:=t-Badge--md
              STYLE:=#BADGE_STYLE#
              SHAPE:=#BADGE_SHAPE#
            {apply THEME$BADGE/}
          {endif/}
        {if LINK/}</a>{else/}</div>{endif/}
      {endif/}
    report-body: '<ul class="t-MediaList t-MediaList--showIcons{if ?LAYOUT/} #LAYOUT!ATTR#{endif/}{if ?SIZE/} #SIZE!ATTR#{endif/}{if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>'
    report-row: '<li class="t-MediaList-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display report content in a formatted media list. Supports avatars and badges. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Badge ==============================
    id: 1819106765238523583
    identification: 
      name: Badge
      sequence: 20

  - # ====== Attribute Group: Avatar =============================
    id: 1819107320250523584
    identification: 
      name: Avatar
      sequence: 10

  custom-attributes: 
  - # ====== Custom Attribute: Title =============================
    id: 14168246690195384
    identification: 
      static-id: TITLE
      attribute: 1
      name: Title
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used as the title.

    examples: 
      demo-value: Lorem ipsum dolor sit amet

  - # ====== Custom Attribute: Description =======================
    id: 14168810603195385
    identification: 
      static-id: DESCRIPTION
      attribute: 2
      name: Description
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used for the row description.

    examples: 
      demo-value: Nunc sit amet nunc quis magna ornare suscipit. Etiam aliquet maximus sapien, at sagittis sem gravida nec.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 14169317077195386
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 3
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

  - # ====== Custom Attribute: Display Badge =====================
    id: 14169811390195387
    identification: 
      static-id: DISPLAY_BADGE
      attribute: 4
      name: Display Badge
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge for each row. When set to Yes, a badge will be displayed in each row. When set to No, no badge will be displayed.

  - # ====== Custom Attribute: Type ==============================
    id: 14170258333195388
    identification: 
      static-id: AVATAR_TYPE
      attribute: 5
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 1819107320250523584
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 14169317077195386
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: icon

    entries: 
    - # ====== Entry: Image ========================================
      id: 14170780317195389
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 14171428318195391
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 14171978381195392
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 14172630035195393
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 6
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 1819107320250523584
      sequence: 60

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 14170258333195388
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Image Description =================
    id: 14173080653195394
    identification: 
      static-id: AVATAR_IMAGE_ALT
      attribute: 7
      name: Image Description
      scope: Component

    layout: 
      attribute-group: Avatar # 1819107320250523584
      sequence: 70

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Image # 14172630035195393
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image or select a source column from the quick pick options. This will be used as alt text for the avatar image.

  - # ====== Custom Attribute: Initials ==========================
    id: 14173557656195395
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 8
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 1819107320250523584
      sequence: 80

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 14170258333195388
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 14174042209195396
    identification: 
      static-id: AVATAR_ICON
      attribute: 9
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 1819107320250523584
      sequence: 90

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 14170258333195388
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 14174582334195397
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 10
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 1819107320250523584
      sequence: 100

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--rounded

    condition: 
      depending-on-custom-attribute: Display Avatar # 14169317077195386
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14175088979195398
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14175701379195399
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 14176260145195400
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 14176914090195401
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Label =============================
    id: 14177526755195403
    identification: 
      static-id: BADGE_LABEL
      attribute: 11
      name: Label
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 110

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 14177987449195404
    identification: 
      static-id: BADGE_VALUE
      attribute: 12
      name: Value
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 120

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select a source column for the badge value.

  - # ====== Custom Attribute: State =============================
    id: 14178532385195405
    identification: 
      static-id: BADGE_STATE
      attribute: 13
      name: State
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 130

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

  - # ====== Custom Attribute: Icon ==============================
    id: 14178981565195406
    identification: 
      static-id: BADGE_ICON
      attribute: 14
      name: Icon
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 140

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

  - # ====== Custom Attribute: Display Label =====================
    id: 14179457740195407
    identification: 
      static-id: BADGE_LABEL_DISPLAY
      attribute: 15
      name: Display Label
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 150

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 14180027802195408
    identification: 
      static-id: BADGE_STYLE
      attribute: 16
      name: Style
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 160

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 14180481787195409
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 14181037065195410
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 14181693701195411
    identification: 
      static-id: BADGE_SHAPE
      attribute: 17
      name: Shape
      scope: Component

    layout: 
      attribute-group: Badge # 1819106765238523583
      sequence: 170

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 14169811390195387
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14182162144195412
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14182789890195414
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 14183383986195415
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Layout ============================
    id: 14183959049195416
    identification: 
      static-id: LAYOUT
      attribute: 18
      name: Layout
      scope: Report

    layout: 
      sequence: 180

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the number of grid columns the media list content will display in. Horizontal Span will display all columns in a single horizontal row.

    entries: 
    - # ====== Entry: 2 Column Grid ================================
      id: 14184483301195417
      entry: 
        sequence: 10
        display: 2 Column Grid
        return: t-MediaList--cols t-MediaList--2cols

      advanced: 
        quick-pick: false

    - # ====== Entry: 3 Column Grid ================================
      id: 14185090077195418
      entry: 
        sequence: 20
        display: 3 Column Grid
        return: t-MediaList--cols t-MediaList--3cols

      advanced: 
        quick-pick: false

    - # ====== Entry: 4 Column Grid ================================
      id: 14185667673195419
      entry: 
        sequence: 30
        display: 4 Column Grid
        return: t-MediaList--cols t-MediaList--4cols

      advanced: 
        quick-pick: false

    - # ====== Entry: 5 Column Grid ================================
      id: 14186269295195420
      entry: 
        sequence: 40
        display: 5 Column Grid
        return: t-MediaList--cols t-MediaList--5cols

      advanced: 
        quick-pick: false

    - # ====== Entry: Horizontal Span ==============================
      id: 14186887414195422
      entry: 
        sequence: 50
        display: Horizontal Span
        return: t-MediaList--horizontal

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Size ==============================
    id: 14187445197195423
    identification: 
      static-id: SIZE
      attribute: 19
      name: Size
      scope: Report

    layout: 
      sequence: 190

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    help: 
      help-text: Set the size of media list items.

    entries: 
    - # ====== Entry: Large ========================================
      id: 14187969188195424
      entry: 
        sequence: 10
        display: Large
        return: t-MediaList--large force-fa-lg

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 14188610263195425
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 20
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 200

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

  action-positions: 
  - # ====== Action Position: Link ===============================
    id: 1816579713859685968
    identification: 
      name: Link
      static-id: LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

- # ====== Plugin: Timeline ====================================
  id: 13236290889190022
  identification: 
    name: Timeline
    internal-name: THEME_142$TIMELINE
    theme: Universal Theme # 142
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      app: 102 # APP
      referenced-id: 3075244491465543 # Timeline

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      <div{if ?CSS_CLASSES/} class="#CSS_CLASSES#"{endif/}{if ?ATTRIBUTES/}#ATTRIBUTES!RAW#{endif/}>
        <div class="t-Timeline-wrap">
          <div class="t-Timeline-user">
            {if DISPLAY_AVATAR/}
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                IMAGE_ALT:=#AVATAR_IMAGE_ALT#
                INITIALS:=#AVATAR_INITIALS#
                ICON:=#AVATAR_ICON#
                SHAPE:=#AVATAR_SHAPE#
                SIZE:=
                LINK:=#AVATAR_LINK#
                LINK_ATTR:=#AVATAR_LINK_ATTR!RAW#
              {apply THEME$AVATAR/}
            {endif/}
            <div class="t-Timeline-userinfo">
              <span class="t-Timeline-username">{if ?USER_NAME_LINK/}<a href="#USER_NAME_LINK!ATTR#" #USER_NAME_LINK_ATTR!RAW#>{endif/}#USER_NAME!RAW#{if ?USER_NAME_LINK/}</a>{endif/}</span>
              <span class="t-Timeline-date">#DATE!RAW#</span>
            </div>
          </div>
          <div class="t-Timeline-content">
            {if DISPLAY_BADGE/}
              <div class="t-Timeline-typeWrap">
                {with/}
                  LABEL_DISPLAY:=#BADGE_LABEL_DISPLAY#
                  LABEL:=#BADGE_LABEL#
                  VALUE:=#BADGE_VALUE#
                  ICON:=#BADGE_ICON#
                  STATE:=#BADGE_STATE#
                {apply THEME$BADGE/}
              </div>
            {endif/}
            <div class="t-Timeline-body">
              <h3 class="t-Timeline-title">{if ?TITLE_LINK/}<a href="#TITLE_LINK!ATTR#" #TITLE_LINK_ATTR!RAW#>{endif/}#TITLE!RAW#{if ?TITLE_LINK/}</a>{endif/}</h3>
              {if ?DESCRIPTION/}<p class="t-Timeline-desc">#DESCRIPTION!RAW#</p>{endif/}
            </div>
          </div>
        </div>
      </div>
    report-body: |
      <ul class="t-Timeline{if ?STYLE/} #STYLE#{endif/}{if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>
      
    report-row: '<li class="t-Timeline-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display a series of events. Supports avatars and badges. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Badge ==============================
    id: 2166226984017747012
    identification: 
      name: Badge
      sequence: 20

  - # ====== Attribute Group: Avatar =============================
    id: 2166227539029747013
    identification: 
      name: Avatar
      sequence: 10

  custom-attributes: 
  - # ====== Custom Attribute: User Name =========================
    id: 14195839104195446
    identification: 
      static-id: USER_NAME
      attribute: 1
      name: User Name
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be displayed as the user name associated with a timeline event.

    examples: 
      demo-value: User

  - # ====== Custom Attribute: Date ==============================
    id: 14196336378195447
    identification: 
      static-id: DATE
      attribute: 2
      name: Date
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML

    help: 
      help-text: Select a source column containing a date, date range, or time.

    examples: 
      demo-value: 1 hour ago

  - # ====== Custom Attribute: Title =============================
    id: 14196897356195448
    identification: 
      static-id: TITLE
      attribute: 3
      name: Title
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used as the title.

    examples: 
      demo-value: Lorem ipsum dolor sit amet

  - # ====== Custom Attribute: Description =======================
    id: 14197392268195449
    identification: 
      static-id: DESCRIPTION
      attribute: 4
      name: Description
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used for the row description.

    examples: 
      demo-value: Nunc sit amet nunc quis magna ornare suscipit. Etiam aliquet maximus sapien, at sagittis sem gravida nec.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 14197891591195450
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 5
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

    examples: 
      demo-value: Y

  - # ====== Custom Attribute: Display Badge =====================
    id: 14198346696195451
    identification: 
      static-id: DISPLAY_BADGE
      attribute: 6
      name: Display Badge
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge for each row. When set to Yes, a badge will be displayed in each row. When set to No, no badge will be displayed.

    examples: 
      demo-value: Y

  - # ====== Custom Attribute: Type ==============================
    id: 14198900749195452
    identification: 
      static-id: AVATAR_TYPE
      attribute: 7
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 2166227539029747013
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 14197891591195450
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: icon

    entries: 
    - # ====== Entry: Image ========================================
      id: 14199352437195453
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 14199949728195454
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 14200572687195456
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 14201232165195457
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 8
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 2166227539029747013
      sequence: 80

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 14198900749195452
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Image Description =================
    id: 14201663762195458
    identification: 
      static-id: AVATAR_IMAGE_ALT
      attribute: 9
      name: Image Description
      scope: Component

    layout: 
      attribute-group: Avatar # 2166227539029747013
      sequence: 90

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Image # 14201232165195457
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image or select a source column from the quick pick options. This will be used as alt text for the avatar image.

  - # ====== Custom Attribute: Initials ==========================
    id: 14202179761195459
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 10
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 2166227539029747013
      sequence: 100

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 14198900749195452
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 14202687913195460
    identification: 
      static-id: AVATAR_ICON
      attribute: 11
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 2166227539029747013
      sequence: 110

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 14198900749195452
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 14203220703195461
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 12
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 2166227539029747013
      sequence: 120

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--circle

    condition: 
      depending-on-custom-attribute: Display Avatar # 14197891591195450
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14203694853195462
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14204285341195463
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 14204918754195464
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 14205340650195465
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Label =============================
    id: 14205936359195466
    identification: 
      static-id: BADGE_LABEL
      attribute: 13
      name: Label
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 130

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 14206463397195467
    identification: 
      static-id: BADGE_VALUE
      attribute: 14
      name: Value
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 140

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select a source column for the badge value.

    examples: 
      demo-value: Closed

  - # ====== Custom Attribute: State =============================
    id: 14206973159195468
    identification: 
      static-id: BADGE_STATE
      attribute: 15
      name: State
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 150

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

    examples: 
      demo-value: is-removed

  - # ====== Custom Attribute: Icon ==============================
    id: 14207482339195470
    identification: 
      static-id: BADGE_ICON
      attribute: 16
      name: Icon
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 160

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

    examples: 
      demo-value: fa-check-circle-o

  - # ====== Custom Attribute: Display Label =====================
    id: 14207951965195471
    identification: 
      static-id: BADGE_LABEL_DISPLAY
      attribute: 17
      name: Display Label
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 170

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 14208495913195472
    identification: 
      static-id: BADGE_STYLE
      attribute: 18
      name: Style
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 180

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 14208978384195473
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 14209561754195474
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 14210171248195475
    identification: 
      static-id: BADGE_SHAPE
      attribute: 19
      name: Shape
      scope: Component

    layout: 
      attribute-group: Badge # 2166226984017747012
      sequence: 190

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 14198346696195451
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 14210687912195476
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 14211316487195477
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 14211888853195478
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Style =============================
    id: 14212516511195479
    identification: 
      static-id: STYLE
      attribute: 20
      name: Style
      scope: Report

    layout: 
      sequence: 200

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Set the style of timeline items.

    entries: 
    - # ====== Entry: Compact ======================================
      id: 14212954647195480
      entry: 
        sequence: 10
        display: Compact
        return: t-Timeline--compact

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 14213575782195482
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 21
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 210

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

    examples: 
      demo-value: Y

  action-positions: 
  - # ====== Action Position: Title Link =========================
    id: 1811164633743971104
    identification: 
      name: Title Link
      static-id: TITLE_LINK
      sequence: 25

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: User Name Link =====================
    id: 1925575996732234705
    identification: 
      name: User Name Link
      static-id: USER_NAME_LINK
      sequence: 15

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Avatar Link ========================
    id: 2044607243706539146
    identification: 
      name: Avatar Link
      static-id: AVATAR_LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

- # ====== Plugin: Slide Tooltip ===============================
  id: 20567306175585643
  identification: 
    name: Slide Tooltip
    internal-name: COM_ORACLE_APEX_SLIDETOOLTIP
    type: Region

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 1404214017789313351

    subscribe-component-settings: true

  source: 
    pl/sql-code: |
      function render_slide_tooltip (
          p_region              in apex_plugin.t_region,
          p_plugin              in apex_plugin.t_plugin,
          p_is_printer_friendly in boolean )
          return apex_plugin.t_region_render_result
      is
          c_slide_tooltip constant varchar2(255) := p_region.attribute_04;
      begin
          if apex_application.g_debug then
              apex_plugin_util.debug_region (
                  p_plugin => p_plugin,
                  p_region => p_region );
          end if;
      
          sys.htp.p( '<div' || apex_plugin_util.get_html_attr( 'id', p_region.static_id || '_slideTooltip' ) || '></div>' );
      
          apex_javascript.add_onload_code (
              p_code =>
                  'com_oracle_apex_slide_tooltip(' ||
                  apex_javascript.add_value( p_region.static_id ) ||
                  '{' ||
                  apex_javascript.add_attribute( 'pageitems',       apex_plugin_util.page_item_names_to_jquery( p_region.ajax_items_to_submit )) ||
                  apex_javascript.add_attribute( 'slideTooltipOpt', c_slide_tooltip ) ||
                  apex_javascript.add_attribute( 'ajaxIdentifier',  apex_plugin.get_ajax_identifier, false, false ) ||
                  '});' );
      
          return null;
      end render_slide_tooltip;
      
      function ajax_slide_tooltip (
          p_region in apex_plugin.t_region,
          p_plugin in apex_plugin.t_plugin )
          return apex_plugin.t_region_ajax_result
      is
          c_item_icon  constant varchar2(255) := p_region.attribute_01;
          c_item_title constant varchar2(255) := p_region.attribute_02;
          c_item_badge constant varchar2(255) := p_region.attribute_03;
          c_label_link constant varchar2(255) := p_region.attribute_05;
      
          l_column_value_list apex_plugin_util.t_column_value_list2;
          l_link    varchar2(4000);
          l_icon    varchar2(4000);
          l_title   varchar2(4000);
          l_badge   varchar2(4000);
          l_content varchar2(4000);
      begin
          if apex_application.g_debug then
              apex_plugin_util.debug_region (
                  p_plugin => p_plugin,
                  p_region => p_region
              );
          end if;
      
          l_column_value_list := apex_plugin_util.get_data2(
                                     p_sql_statement => p_region.source,
                                     p_region        => p_region );
      
          apex_json.initialize_output( p_http_cache => false );
          apex_json.open_array;
      
          for l_row_number in 1 .. l_column_value_list( 1 ).value_list.count
          loop
              begin
                  apex_plugin_util.set_component_values (
                      p_column_value_list => l_column_value_list,
                      p_row_num           => l_row_number );
      
                  l_link :=
                      case when c_label_link is not null then
                          apex_util.prepare_url (
                              apex_plugin_util.replace_substitutions (
                                  p_value  => c_label_link,
                                  p_escape => false )
                              )
                      end;
      
                  l_icon  := apex_escape.html( v( c_item_icon ));
                  l_title := apex_escape.html( v( c_item_title ));
                  l_badge := apex_escape.html( v( c_item_badge ));
      
                  apex_json.open_object;
                  apex_json.  write( 'icon',  l_icon );
                  apex_json.  write( 'title', l_title );
                  apex_json.  write( 'badge', l_badge );
                  apex_json.  write( 'link',  l_link );
                  apex_json.  open_array( 'content' );
      
                  for l_column_no in 1 .. p_region.region_columns.count
                  loop
                      if p_region.region_columns( l_column_no ).is_displayed then
                          if p_region.region_columns( l_column_no ).name not in ( c_item_icon, c_item_title, c_item_badge ) then
                              l_content := apex_escape.html( v( p_region.region_columns( l_column_no ).name ));
                              apex_json.open_object;
                              apex_json.  write( 'content', l_content );
                              apex_json.  write( 'label',   p_region.region_columns( l_column_no ).heading );
                              apex_json.close_object;
                          end if;
                      end if;
                  end loop;
      
                  apex_json.  close_array;
                  apex_json.close_object;
                  wwv_flow_plugin_util.clear_component_values;
              exception when others then
                  wwv_flow_plugin_util.clear_component_values;
                  raise;
              end;
          end loop;
          apex_json.close_array;
      
          return null;
      end ajax_slide_tooltip;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_slide_tooltip
    ajax-procedure/function-name: ajax_slide_tooltip

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Region Columns"
    - Has "Heading" Column Attribute

  custom-attributes: 
    substitute-attribute-values: false

  files: 
    file-prefix: '#IMAGE_PREFIX#plugins/com.oracle.apex.slidetooltip/'

  css: 
    file-urls: 
    - '#PLUGIN_FILES#a-DetailedContentList.css'

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#slideTooltipList.js'
    - '#PLUGIN_FILES#com_oracle_apex_slide_tooltip.js'
    - null

  information: 
    version: 5.0.1
    help-text: This region plug-in is useful for displaying a report with additional fields either inline or in an expanded tooltip.

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 4618607975216995
    identification: 
      name: SOURCE_SQL

    value: 
      required: false

    settings: 
      minimum-columns: 1

  custom-attributes: 
  - # ====== Custom Attribute: Icon Column =======================
    id: 20567638731585644
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Icon Column
      scope: Component

    layout: 
      sequence: 2

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query that holds the icon displayed before the title.

  - # ====== Custom Attribute: Title Column ======================
    id: 20568017945585644
    identification: 
      static-id: attribute_02
      attribute: 2
      name: Title Column
      scope: Component

    layout: 
      sequence: 3

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Timestamp
      - Timestamp with Time Zone
      - Timestamp with Local Time Zone
      - Interval Year to Month
      - Interval Day to Second
      - Blob
      - Clob
      - Bfile
      - Rowid

    help: 
      help-text: Select the column from the region SQL Query that holds the values displayed in the report.

  - # ====== Custom Attribute: Badge Column ======================
    id: 20568459354585644
    identification: 
      static-id: attribute_03
      attribute: 3
      name: Badge Column
      scope: Component

    layout: 
      sequence: 5

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Timestamp
      - Timestamp with Time Zone
      - Timestamp with Local Time Zone
      - Interval Year to Month
      - Interval Day to Second
      - Blob
      - Clob
      - Bfile
      - Rowid

    help: 
      help-text: Select the column from the region SQL Query that holds the value displayed at the end of each row displayed.

  - # ====== Custom Attribute: Mode ==============================
    id: 20568777561585644
    identification: 
      static-id: attribute_04
      attribute: 4
      name: Mode
      scope: Component

    layout: 
      sequence: 1

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: slide

    help: 
      help-text: Select how the report fields are displayed.

    entries: 
    - # ====== Entry: Slide ========================================
      id: 20569183710585644
      entry: 
        sequence: 10
        display: Slide
        return: slide

      advanced: 
        quick-pick: false

      help: 
        help-text: A dropdown indicator is included at end of each record. Pressing this indicator displays the additional fields inline within the report, pushing additional records down.

    - # ====== Entry: Tooltip ======================================
      id: 20569761146585644
      entry: 
        sequence: 20
        display: Tooltip
        return: tooltip

      advanced: 
        quick-pick: false

      help: 
        help-text: The additional fields are displayed as a tooltip next to the record. The tooltip is displayed when you hover over the record.

  - # ====== Custom Attribute: Link Target =======================
    id: 20570234413585645
    identification: 
      static-id: attribute_05
      attribute: 5
      name: Link Target
      scope: Component

    layout: 
      sequence: 4

    settings: 
      type: Link to Target Page/URL
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: '#&ENAME.'

    help: 
      help-text: <p>Enter a target page to be called when the user clicks a record.</p>

- # ====== Plugin: Badge List ==================================
  id: 28671582162764291
  identification: 
    name: Badge List
    internal-name: COM.ORACLE.APEX.BADGE_LIST
    type: Region

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 2176333589259008901

    subscribe-component-settings: true

  source: 
    pl/sql-code: |
      function render (
          p_region              in apex_plugin.t_region,
          p_plugin              in apex_plugin.t_plugin,
          p_is_printer_friendly in boolean )
          return apex_plugin.t_region_render_result is
      begin
          apex_javascript.add_onload_code (
              p_code => 'com_oracle_apex_badgelist('||
                  apex_javascript.add_value(p_region.static_id)||
                  '{'||
                      -- why is this attribute needed if is not used?
                      apex_javascript.add_attribute(
                          'pageItems', 
                          apex_plugin_util.page_item_names_to_jquery(p_region.ajax_items_to_submit)
                      )||
                      apex_javascript.add_attribute(
                          'ajaxIdentifier', 
                          apex_plugin.get_ajax_identifier, 
                          false, 
                          false
                      )||
                  '}'||
              ');'
          );
      --    CSS for Big Value List
      --    apex_css.add_file (
      --        p_name      => 'com_oracle_apex_badge_list',
      --        p_directory => p_plugin.file_prefix );
          -- Start the list
      
      
          -- It's time to emit the selected rows
      
      
          return null;
      
      end render;
      
      function ajax (
          p_region in apex_plugin.t_region,
          p_plugin in apex_plugin.t_plugin
      ) return apex_plugin.t_region_ajax_result 
      is
          -- It's better to have named variables instead of using the generic ones,
          -- makes the code more readable. We are using the same defaults for the
          -- required attributes as in the plug-in attribute configuration, because
          -- they can still be null. Keep them in sync!
          c_label_column      constant varchar2(255) := p_region.attribute_01;
          c_value_column      constant varchar2(255) := p_region.attribute_02;
          c_percent_column    constant varchar2(255) := p_region.attribute_03;
          c_link_target       constant varchar2(255) := p_region.attribute_04;
          
          c_layout            constant varchar2(1)   := p_region.attribute_05;
          c_chart_size        constant varchar2(3)   := p_region.attribute_06;
          c_chart_type        constant varchar2(3)   := p_region.attribute_07;
          c_colored           constant varchar2(1)   := p_region.attribute_08;
      
          l_label_column_no   pls_integer;
          l_value_column_no   pls_integer;
          l_percent_column_no pls_integer;
          l_column_value_list apex_plugin_util.t_column_value_list2;
          
          l_label             varchar2(4000);
          l_value             varchar2(4000);
          l_percent           number;
          l_url               varchar2(4000);
          l_class             varchar2(255);
      
      begin
          apex_json.initialize_output (
              p_http_cache => false );
              -- Read the data based on the region source query
          l_column_value_list := apex_plugin_util.get_data2 (
                                     p_sql_statement  => p_region.source,
                                     p_min_columns    => 2,
                                     p_max_columns    => null,
                                     p_component_name => p_region.name );
      
          -- Get the actual column# for faster access and also verify that the data type
          -- of the column matches with what we are looking for
          l_label_column_no   := apex_plugin_util.get_column_no (
                                     p_attribute_label   => 'Label Column',
                                     p_column_alias      => c_label_column,
                                     p_column_value_list => l_column_value_list,
                                     p_is_required       => true,
                                     p_data_type         => apex_plugin_util.c_data_type_varchar2 );
                                            
          l_value_column_no   := apex_plugin_util.get_column_no (
                                     p_attribute_label   => 'Value Column',
                                     p_column_alias      => c_value_column,
                                     p_column_value_list => l_column_value_list,
                                     p_is_required       => true,
                                     p_data_type         => apex_plugin_util.c_data_type_varchar2 );
                                            
          l_percent_column_no := apex_plugin_util.get_column_no (
                                   p_attribute_label   => 'Percent Column',
                                   p_column_alias      => c_percent_column,
                                   p_column_value_list => l_column_value_list,
                                   p_is_required       => false,
                                   p_data_type         => apex_plugin_util.c_data_type_number );
          
          -- begin output as json
          owa_util.mime_header('application/json', false);
          htp.p('cache-control: no-cache');
          htp.p('pragma: no-cache');
          owa_util.http_header_close;
       --   l_message_when_no_data_found := apex_escape.html_whitelist(
        --      apex_plugin_util.replace_substitutions (
         --             p_value  => c_message_when_no_data_found,
         --             p_escape => false
          --        )
          --    );
          apex_json.open_object();
          apex_json.write('layout', c_layout); 
          apex_json.write('chart_size', c_chart_size); 
          apex_json.write('chart_type', c_chart_type); 
          apex_json.write('colored', c_colored); 
          apex_json.open_array('data');
          for l_row_num in 1 .. l_column_value_list(1).value_list.count loop
              begin
                  apex_json.open_object(); 
                  -- Set the column values of our current row so that apex_plugin_util.replace_substitutions
                  -- can do substitutions for columns contained in the region source query.
                  apex_plugin_util.set_component_values (
                      p_column_value_list => l_column_value_list,
                      p_row_num           => l_row_num );
      
                  -- get the label
                  l_label := 
                                 apex_plugin_util.get_value_as_varchar2 (
                                     p_data_type => l_column_value_list(l_label_column_no).data_type,
                                     p_value     => l_column_value_list(l_label_column_no).value_list(l_row_num) );
                               --  p_region.escape_output );apex_plugin_util.escape (
      
                  apex_json.    write('label', l_label); 
                  
                  -- get the value
                  l_value := apex_plugin_util.get_value_as_varchar2 (
                                     p_data_type => l_column_value_list(l_value_column_no).data_type,
                                     p_value     => l_column_value_list(l_value_column_no).value_list(l_row_num) );
      
                  apex_json.    write('value', l_value); 
      
                  -- get percent
                  if l_percent_column_no is not null then
                      l_percent := l_column_value_list(l_percent_column_no).value_list(l_row_num).number_value;
                      apex_json.    write('percent', l_percent); 
                  end if;
      
                  -- get the link target if it does exist
                  if c_link_target is not null then
                      l_url := apex_util.prepare_url (
                                   apex_plugin_util.replace_substitutions (
                                       p_value  => c_link_target,
                                       p_escape => false ));
                      apex_json.    write('url', l_url);                
                  end if;
                  
                  apex_json.close_object();        
      
      
                  apex_plugin_util.clear_component_values;
              exception when others then
                  apex_plugin_util.clear_component_values;
                  raise;
              end;
          end loop;
          apex_json.close_all();
          
          return null;
      exception when others then
          htp.p('error: '||apex_escape.html(sqlerrm));
          return null;
      end ajax;
      
      

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render
    ajax-procedure/function-name: ajax

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Page Items to Submit" Attribute
    - Has "Escape Special Characters" Region Attribute

  custom-attributes: 
    substitute-attribute-values: false

  files: 
    file-prefix: '#IMAGE_PREFIX#plugins/com.oracle.apex.badgelist/'

  css: 
    file-urls: 
    - '#PLUGIN_FILES#com_oracle_apex_badgelist.css'

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#com_oracle_apex_badgelist.js'

  information: 
    version: 5.0.2
    about-url: 'http://apex.oracle.com/plugins'
    help-text: |
      <p>Badge lists are useful for displaying a region with a small number of counts for important statistics. For example, in Bug Tracker, this plug-in is used to show the total bugs, open bugs, open high priority bugs, and open critical severity bugs.</p>
      <p>This plug-in is suitable for adding to the Home page to show important summary information.</p>

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 12757832982395615
    identification: 
      name: SOURCE_SQL

    value: 
      required: true

    settings: 
      minimum-columns: 2

    examples: 
      examples: |
        <pre>
        select 'Open'               as label,
               to_char(320,'9G990') as value,
               13                   as percent
          from dual
         union all
        select 'Closed'             as label,
               to_char(87,'9G990')  as value,
               70                   as percent
          from dual
        </pre>

  custom-attributes: 
  - # ====== Custom Attribute: Label Column ======================
    id: 28671874188764298
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Label Column
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query that holds the labels for the badges.

  - # ====== Custom Attribute: Value Column ======================
    id: 28672348458764299
    identification: 
      static-id: attribute_02
      attribute: 2
      name: Value Column
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query that holds the values for the badges.

  - # ====== Custom Attribute: Percent Column ====================
    id: 28672669565764300
    identification: 
      static-id: attribute_03
      attribute: 3
      name: Percent Column
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Number

    help: 
      help-text: Select the column from the region SQL Query that holds the percentage values for the badges. Percentages will be displayed together with the value within the badge.

  - # ====== Custom Attribute: Link Target =======================
    id: 28673150990764301
    identification: 
      static-id: attribute_04
      attribute: 4
      name: Link Target
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Link to Target Page/URL
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: <p>Enter a target page to be called when the user clicks a badge entry.</p>

    examples: 
      examples: |
        <p>Example 1: URL to navigate to page 10 and set P10_EMPNO to the EMPNO value of the clicked entry.
        <pre>f?p=&amp;APP_ID.:10:&amp;APP_SESSION.::&amp;DEBUG.:RP,10:P10_EMPNO:&amp;EMPNO.</pre>
        </p>
        <p>Example 2: Display the EMPNO value of the clicked entry in a JavaScript alert
        <pre>javascript:alert('current empno: &amp;EMPNO.');</pre>
        </p>

  - # ====== Custom Attribute: Layout ============================
    id: 28673488350764301
    identification: 
      static-id: attribute_05
      attribute: 5
      name: Layout
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: false
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: 0

    help: 
      help-text: <p>Select the layout to determine how the badge list is displayed.</p>

    entries: 
    - # ====== Entry: Fit to Page ==================================
      id: 28673855918764302
      entry: 
        sequence: 5
        display: Fit to Page
        return: 0

      advanced: 
        quick-pick: false

      help: 
        help-text: |
          <p>Sizes the badges to stretch across the page. The width of each badge will be determined by the number of badges and the display width.</p>
          <p>Note: Badges will not wrap when displayed on smaller devices.</p>

    - # ====== Entry: Float to Left ================================
      id: 28674442201764302
      entry: 
        sequence: 7
        display: Float to Left
        return: F

      advanced: 
        quick-pick: false

      help: 
        help-text: <p>Sizes the badges based on the width of the label for each badge. All badges will be displayed to the left of the region.</p>

    - # ====== Entry: 1 column =====================================
      id: 28674866090764302
      entry: 
        sequence: 10
        display: 1 column
        return: 1

      advanced: 
        quick-pick: false

      help: 
        help-text: Displays only one badge per row. Therefore, if there are three badges they are displayed on three rows.

    - # ====== Entry: 2 columns ====================================
      id: 28675440978764302
      entry: 
        sequence: 20
        display: 2 columns
        return: 2

      advanced: 
        quick-pick: false

      help: 
        help-text: Displays only two badges per row. Therefore, if there are three badges they are displayed on two rows.

    - # ====== Entry: 3 columns ====================================
      id: 28675948113764302
      entry: 
        sequence: 30
        display: 3 columns
        return: 3

      advanced: 
        quick-pick: false

      help: 
        help-text: <p>Displays a maximum of three badges per row. Therefore, if there are four badges they are displayed on two rows.</p>

    - # ====== Entry: 4 columns ====================================
      id: 28676420134764302
      entry: 
        sequence: 40
        display: 4 columns
        return: 4

      advanced: 
        quick-pick: false

      help: 
        help-text: <p>Displays a maximum of four badges per row. Therefore, if there are six badges they are displayed on two rows.</p>

    - # ====== Entry: 5 columns ====================================
      id: 28676939238764302
      entry: 
        sequence: 50
        display: 5 columns
        return: 5

      advanced: 
        quick-pick: false

      help: 
        help-text: |
          <p>Displays a maximum of fix badges per row. Therefore, if there are seven badges they are displayed on two rows.</p>
          <p>Note: on smaller displays where the badges cannot be displayed appropriately, the responsive region will revert to less column and additional rows. For example, seven badges may be displayed as three columns on three rows, instead of five columns on two rows.</p>

  - # ====== Custom Attribute: Chart Size ========================
    id: 28677435525764304
    identification: 
      static-id: attribute_06
      attribute: 6
      name: Chart Size
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: false
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: L

    condition: 
      depending-on-custom-attribute: Chart Type # 28680337651764304
      depending-on-condition-type: not equal to
      expression: BOX
      always-evaluate: true

    help: 
      help-text: Select the size of badge to display.

    entries: 
    - # ====== Entry: Small ========================================
      id: 28677803164764304
      entry: 
        sequence: 0
        display: Small
        return: S

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 28678346812764304
      entry: 
        sequence: 10
        display: Medium
        return: M

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 28678780787764304
      entry: 
        sequence: 20
        display: Large
        return: L

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Large ==================================
      id: 28679282042764304
      entry: 
        sequence: 30
        display: Extra Large
        return: B

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Extra Large ============================
      id: 28679813978764304
      entry: 
        sequence: 40
        display: Extra Extra Large
        return: XXL

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Chart Type ========================
    id: 28680337651764304
    identification: 
      static-id: attribute_07
      attribute: 7
      name: Chart Type
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: BOX

    help: 
      help-text: Select the shape of the badges to display.

    entries: 
    - # ====== Entry: Rectangular ==================================
      id: 28680741837764304
      entry: 
        sequence: 10
        display: Rectangular
        return: BOX

      advanced: 
        quick-pick: false

    - # ====== Entry: Circular =====================================
      id: 28681194304764305
      entry: 
        sequence: 20
        display: Circular
        return: DOT

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Color =============================
    id: 28681719626764305
    identification: 
      static-id: attribute_08
      attribute: 8
      name: Color
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: N

    help: 
      help-text: Select if the badges should be displayed in different colors, or without colors.

    entries: 
    - # ====== Entry: Yes ==========================================
      id: 28682094718764305
      entry: 
        sequence: 10
        display: Yes
        return: Y

      advanced: 
        quick-pick: false

    - # ====== Entry: No ===========================================
      id: 28682621265764305
      entry: 
        sequence: 20
        display: No
        return: N

      advanced: 
        quick-pick: false

- # ====== Plugin: GeoHeatMap ==================================
  id: 76811225131104219
  identification: 
    name: GeoHeatMap
    internal-name: COM.JK64.HEATMAP
    type: Region

  advanced: 
    quick-pick: false

  subscription: 
    version-number: 1

  source: 
    pl/sql-code: |
      PROCEDURE set_map_extents
          (p_lat     IN NUMBER
          ,p_lng     IN NUMBER
          ,p_lat_min IN OUT NUMBER
          ,p_lat_max IN OUT NUMBER
          ,p_lng_min IN OUT NUMBER
          ,p_lng_max IN OUT NUMBER
          ) IS
      BEGIN
          p_lat_min := LEAST   (NVL(p_lat_min, p_lat), p_lat);
          p_lat_max := GREATEST(NVL(p_lat_max, p_lat), p_lat);
          p_lng_min := LEAST   (NVL(p_lng_min, p_lng), p_lng);
          p_lng_max := GREATEST(NVL(p_lng_max, p_lng), p_lng);
      END set_map_extents;
      
      FUNCTION latlng2ch (lat IN NUMBER, lng IN NUMBER) RETURN VARCHAR2 IS
      BEGIN
        RETURN '"lat":'
            || TO_CHAR(lat, 'fm990.0999999999999999')
            || ',"lng":'
            || TO_CHAR(lng, 'fm990.0999999999999999');
      END latlng2ch;
      
      FUNCTION get_data
          (p_region  IN APEX_PLUGIN.t_region
          ,p_lat_min IN OUT NUMBER
          ,p_lat_max IN OUT NUMBER
          ,p_lng_min IN OUT NUMBER
          ,p_lng_max IN OUT NUMBER
          ) RETURN APEX_APPLICATION_GLOBAL.VC_ARR2 IS
      
          l_data   APEX_APPLICATION_GLOBAL.VC_ARR2;
          l_lat    NUMBER;
          l_lng    NUMBER;
          l_count  NUMBER;
          
          l_column_value_list  APEX_PLUGIN_UTIL.t_column_value_list;
      
      BEGIN
      
          l_column_value_list := APEX_PLUGIN_UTIL.get_data
              (p_sql_statement  => p_region.source
              ,p_min_columns    => 3
              ,p_max_columns    => 3
              ,p_component_name => p_region.name
              ,p_max_rows       => p_region.fetched_rows);
        
          FOR i IN 1..l_column_value_list(1).count LOOP
        
              l_lat   := TO_NUMBER(l_column_value_list(1)(i));
              l_lng   := TO_NUMBER(l_column_value_list(2)(i));
              l_count := TO_NUMBER(l_column_value_list(3)(i));
              
              -- minimise size of data to be sent
              l_data(NVL(l_data.LAST,0)+1) :=
                   '{"a":' || TO_CHAR(l_lat, 'fm990.0999999999999999')
                || ',"b":' || TO_CHAR(l_lng, 'fm990.0999999999999999')
                || ',"c":'  || TO_CHAR(l_count, 'fm9999990')
                || '}';
          
              set_map_extents
                (p_lat     => l_lat
                ,p_lng     => l_lng
                ,p_lat_min => p_lat_min
                ,p_lat_max => p_lat_max
                ,p_lng_min => p_lng_min
                ,p_lng_max => p_lng_max
                );
            
          END LOOP;
      
          RETURN l_data;
      END get_data;
      
      PROCEDURE htp_arr (arr IN APEX_APPLICATION_GLOBAL.VC_ARR2) IS
      BEGIN
          FOR i IN 1..arr.COUNT LOOP
              -- use prn to avoid loading a whole lot of unnecessary \n characters
              sys.htp.prn(CASE WHEN i > 1 THEN ',' END || arr(i));
          END LOOP;
      END htp_arr;
      
      FUNCTION render_map
          (p_region IN APEX_PLUGIN.t_region
          ,p_plugin IN APEX_PLUGIN.t_plugin
          ,p_is_printer_friendly IN BOOLEAN
          ) RETURN APEX_PLUGIN.t_region_render_result IS
      
          SUBTYPE plugin_attr is VARCHAR2(32767);
          
          l_result       APEX_PLUGIN.t_region_render_result;
      
          l_region       VARCHAR2(100);
          l_script       VARCHAR2(32767);
          l_data         APEX_APPLICATION_GLOBAL.VC_ARR2;
          l_lat_min      NUMBER;
          l_lat_max      NUMBER;
          l_lng_min      NUMBER;
          l_lng_max      NUMBER;
      
          -- Plugin attributes (application level)
          l_api_key       plugin_attr := p_plugin.attribute_01;
      
          -- Component attributes
          l_map_height    plugin_attr := p_region.attribute_01;
          l_sign_in       plugin_attr := p_region.attribute_02;
          l_dissipating   plugin_attr := p_region.attribute_03;
          l_opacity       plugin_attr := p_region.attribute_04;
          l_radius        plugin_attr := p_region.attribute_05;
          l_mapstyle      plugin_attr := p_region.attribute_06;
          
          FUNCTION js_params RETURN VARCHAR2 IS
              buf VARCHAR2(1000);
          BEGIN
          
              IF l_api_key IS NOT NULL THEN
                  buf := 'key=' || l_api_key;
                  IF l_sign_in = 'Y' THEN
                      buf := buf || '&'||'signed_in=true';
                  END IF;
              END IF;
            
              -- load library required for heatmap feature
              buf := buf || CASE WHEN buf IS NOT NULL THEN '&' END
                || 'libraries=visualization';
          
              RETURN '?' || buf;
          END js_params;
          
      BEGIN
          -- debug information will be included
          IF APEX_APPLICATION.g_debug then
              APEX_PLUGIN_UTIL.debug_region
                (p_plugin => p_plugin
                ,p_region => p_region
                ,p_is_printer_friendly => p_is_printer_friendly);
          END IF;
      
          APEX_JAVASCRIPT.add_library
            (p_name           => 'js' || js_params
            ,p_directory      => 'https://maps.googleapis.com/maps/api/'
            ,p_skip_extension => true);
      
          APEX_JAVASCRIPT.add_library
            (p_name           => 'jk64plugin.min'
            ,p_directory      => p_plugin.file_prefix);
      
          l_region := CASE
                      WHEN p_region.static_id IS NOT NULL
                      THEN p_region.static_id
                      ELSE 'R'||p_region.id
                      END;
      
          IF p_region.source IS NOT NULL THEN
      
            l_data := get_data
              (p_region  => p_region
              ,p_lat_min => l_lat_min
              ,p_lat_max => l_lat_max
              ,p_lng_min => l_lng_min
              ,p_lng_max => l_lng_max
              );
              
          END IF;
      
          -- show entire map if no points to show
          IF l_data.COUNT = 0 THEN
            l_lat_min := -90;
            l_lat_max := 90;
            l_lng_min := -180;
            l_lng_max := 180;
          END IF;
          
          l_script := '<script>
      var opt_#REGION# = {
         container:      "map_#REGION#_container"
        ,regionId:       "#REGION#"
        ,ajaxIdentifier: "'||APEX_PLUGIN.get_ajax_identifier||'"
        ,southwest:      {'||latlng2ch(l_lat_min,l_lng_min)||'}
        ,northeast:      {'||latlng2ch(l_lat_max,l_lng_max)||'}
        ,dissipating:    '||CASE WHEN l_dissipating = 'Y' THEN 'true' ELSE 'false' END||'
        ,opacity:        '||l_opacity||'
        ,radius:         '||l_radius ||
        CASE WHEN l_mapstyle IS NOT NULL THEN '
        ,mapstyle:       '||l_mapstyle END || '
        ,ajaxItems:      "'||APEX_PLUGIN_UTIL.page_item_names_to_jquery(p_region.ajax_items_to_submit)||'"
        ,noDataMessage:  "'||p_region.no_data_found_message||'"
      };
      function r_#REGION#(f){/in/.test(document.readyState)?setTimeout("r_#REGION#("+f+")",9):f()}
      r_#REGION#(function(){
        opt_#REGION#.mapdata = [';
          sys.htp.p(REPLACE(l_script,'#REGION#',l_region));
          htp_arr(l_data);
          l_script := '];
        jk64plugin_initMap(opt_#REGION#);
        apex.jQuery("##REGION#").bind("apexrefresh", function(){jk64plugin_refreshMap(opt_#REGION#);});
      });
      </script>';
          sys.htp.p(REPLACE(l_script,'#REGION#',l_region));
          sys.htp.p('<div id="map_'||l_region||'_container" style="min-height:'||l_map_height||'px"></div>');
        
          RETURN l_result;
      END render_map;
      
      FUNCTION ajax
          (p_region IN APEX_PLUGIN.t_region
          ,p_plugin IN APEX_PLUGIN.t_plugin
          ) RETURN APEX_PLUGIN.t_region_ajax_result IS
      
          l_result       APEX_PLUGIN.t_region_ajax_result;
      
          l_data         APEX_APPLICATION_GLOBAL.VC_ARR2;
          l_lat_min      NUMBER;
          l_lat_max      NUMBER;
          l_lng_min      NUMBER;
          l_lng_max      NUMBER;
      	
      BEGIN
          -- debug information will be included
          IF APEX_APPLICATION.g_debug then
              APEX_PLUGIN_UTIL.debug_region
                (p_plugin => p_plugin
                ,p_region => p_region);
          END IF;
          APEX_DEBUG.message('ajax');
      
          IF p_region.source IS NOT NULL THEN
      
            l_data := get_data
              (p_region  => p_region
              ,p_lat_min => l_lat_min
              ,p_lat_max => l_lat_max
              ,p_lng_min => l_lng_min
              ,p_lng_max => l_lng_max
              );
              
          END IF;
      
          -- show entire map if no points to show
          IF l_data.COUNT = 0 THEN
            l_lat_min := -90;
            l_lat_max := 90;
            l_lng_min := -180;
            l_lng_max := 180;
          END IF;
      
          sys.owa_util.mime_header('text/plain', false);
          sys.htp.p('Cache-Control: no-cache');
          sys.htp.p('Pragma: no-cache');
          sys.owa_util.http_header_close;
          
          APEX_DEBUG.message('l_lat_min='||l_lat_min||' data='||l_data.COUNT);
          
          sys.htp.p('{"southwest":{'
            || latlng2ch(l_lat_min,l_lng_min)
            || '},"northeast":{'
            || latlng2ch(l_lat_max,l_lng_max)
            || '},"mapdata":[');
          htp_arr(l_data);
          sys.htp.p(']}');
          
          APEX_DEBUG.message('ajax finished');
          RETURN l_result;
      EXCEPTION
          WHEN OTHERS THEN
              APEX_DEBUG.error(SQLERRM);
              sys.htp.p('{"error":"'||sqlerrm||'"}');
      END ajax;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_map
    ajax-procedure/function-name: ajax

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Page Items to Submit" Attribute
    - Has "Number of Fetched Rows" Attribute
    - Has "No Data Found Message" Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 0.2
    about-url: 'https://github.com/jeffreykemp/jk64-plugin-heatmap'
    help-text: |
      This plugin takes a SQL query with nothing but a whole lot of lat,lng pairs, along with a weighting value, and plots them on a Google Map using the "Heatmap" visualisation. If you don't have any weighting data, just set that third column to 1 for each record and it'll work fine; however if you have a lot of data points, see if you can reduce the volume of data by grouping them by lat,lng and use count(*) for the weight. You might want to reduce the precision for the latitude and longitude values somewhat so that they are more likely to get grouped together.
      <p>
      <strong>Don't forget to set the <em>Number of Rows</em> attribute on your region to the maximum rows you expect to get from the query, e.g. 1000 or more.</strong>
      <p>
      Play with the dissipating and radius plugin attributes until you're happy with the result.
      <p>
      If you want, you can change the default map style, e.g. to show the map in greyscale (which helps to make the heatmap easier to see) - see help under the <strong>Map Style</strong> attribute for more details.

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 1386996850826863
    identification: 
      name: SOURCE_SQL

    value: 
      required: true

    settings: 
      minimum-columns: 3
      maximum-columns: 3

    examples: 
      examples: SELECT lat, lng, weight FROM mytable;

  custom-attributes: 
  - # ====== Custom Attribute: Map Height ========================
    id: 76812722919130341
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Map Height
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 5
      maximum-length: 22
      unit: pixels

    default: 
      value: 400

    help: 
      help-text: Map Height in pixels

  - # ====== Custom Attribute: Google Sign-in ====================
    id: 76815109974196387
    identification: 
      static-id: attribute_02
      attribute: 2
      name: Google Sign-in
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: N

    help: 
      help-text: Set to Yes to sign-in user to Google (only applicable if Google API Key is provided)

  - # ====== Custom Attribute: Dissipating =======================
    id: 76817540482317107
    identification: 
      static-id: attribute_03
      attribute: 3
      name: Dissipating
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: N

    help: 
      help-text: Specifies whether heatmaps dissipate on zoom. Yes means the radius of influence of a data point is specified by the radius option only. When dissipating is disabled, the radius option is interpreted as a radius at zoom level 0.

  - # ====== Custom Attribute: Opacity ===========================
    id: 76818135660320804
    identification: 
      static-id: attribute_04
      attribute: 4
      name: Opacity
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 5

    default: 
      value: 0.6

    help: 
      help-text: The opacity of the heatmap, expressed as a number between 0 and 1.

  - # ====== Custom Attribute: Radius ============================
    id: 76818780024323230
    identification: 
      static-id: attribute_05
      attribute: 5
      name: Radius
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 5
      unit: pixels

    default: 
      value: 5

    help: 
      help-text: The radius of influence for each data point, in pixels.

  - # ====== Custom Attribute: Map Style =========================
    id: 76822805882527916
    identification: 
      static-id: attribute_06
      attribute: 6
      name: Map Style
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: 'Easiest way is to copy one from a site like https://snazzymaps.com/'

    examples: 
      examples: |
        Here is an example, a light greyscale style map:
        <pre>
        [{"featureType":"water","elementType":"geometry","stylers":[{"color":"#e9e9e9"},{"lightness":17}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#ffffff"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#ffffff"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":16}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":21}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#dedede"},{"lightness":21}]},{"elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#ffffff"},{"lightness":16}]},{"elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#333333"},{"lightness":40}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#f2f2f2"},{"lightness":19}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#fefefe"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#fefefe"},{"lightness":17},{"weight":1.2}]}]
        </pre>

  - # ====== Custom Attribute: Google API Key ====================
    id: 76827889273704599
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Google API Key
      scope: Application

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: "Optional. If you don't set this, you may get a \"Google Maps API warning: NoApiKeys\" warning in the console log. You can add this later if required. Refer: https://developers.google.com/maps/documentation/javascript/get-api-key#get-an-api-key"

  events: 
  - # ====== Event: maploaded ====================================
    id: 76811969459113356
    identification: 
      name: mapLoaded
      internal-name: maploaded

  files: 
  - # ====== File: jk64plugin.min.js =============================
    id: 83410230358205683
    identification: 
      file-name: jk64plugin.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: JK64 Report Google Map R1 ===================
  id: 141825050961006167
  identification: 
    name: JK64 Report Google Map R1
    internal-name: COM.JK64.REPORT_GOOGLE_MAP_R1
    type: Region

  advanced: 
    quick-pick: false

  subscription: 
    version-number: 1

  source: 
    pl/sql-code: |
      /**********************************************************
      create or replace package jk64reportmap_r1_pkg as
      -- jk64 ReportMap v1.1 Jan 2020
      
      function render
          (p_region in apex_plugin.t_region
          ,p_plugin in apex_plugin.t_plugin
          ,p_is_printer_friendly in boolean
          ) return apex_plugin.t_region_render_result;
      
      function ajax
          (p_region in apex_plugin.t_region
          ,p_plugin in apex_plugin.t_plugin
          ) return apex_plugin.t_region_ajax_result;
      
      end jk64reportmap_r1_pkg;
      /
      
      create or replace package body jk64reportmap_r1_pkg as
      **********************************************************/
      -- jk64 ReportMap v1.1 Jan 2020
      
      -- format to use to convert a lat/lng number to string for passing via javascript
      -- 0.0000001 is enough precision for the practical limit of commercial surveying, error up to +/- 11.132 mm at the equator
      g_tochar_format            constant varchar2(100) := 'fm990.0999999';
      g_coord_precision          constant number := 6;
      
      -- if only one row is returned by the query, add this +/- to the latitude extents so it
      -- shows the neighbourhood instead of zooming to the max
      g_single_row_lat_margin    constant number := 0.005;
      
      g_visualisation_pins       constant varchar2(10) := 'PINS'; -- default
      g_visualisation_cluster    constant varchar2(10) := 'CLUSTER';
      g_visualisation_heatmap    constant varchar2(10) := 'HEATMAP';
      g_visualisation_directions constant varchar2(10) := 'DIRECTIONS';
      
      g_maptype_roadmap          constant varchar2(10) := 'ROADMAP'; -- default
      g_maptype_satellite	       constant varchar2(10) := 'SATELLITE';
      g_maptype_hybrid           constant varchar2(10) := 'HYBRID';
      g_maptype_terrain          constant varchar2(10) := 'TERRAIN';
      
      g_travelmode_driving       constant varchar2(10) := 'DRIVING'; -- default
      g_travelmode_walking       constant varchar2(10) := 'WALKING';
      g_travelmode_bicycling     constant varchar2(10) := 'BICYCLING';
      g_travelmode_transit       constant varchar2(10) := 'TRANSIT';
      
      subtype plugin_attr is varchar2(32767);
      
      procedure get_map_bounds
          (p_lat     in number
          ,p_lng     in number
          ,p_lat_min in out number
          ,p_lat_max in out number
          ,p_lng_min in out number
          ,p_lng_max in out number
          ) is
      begin
          p_lat_min := least   (nvl(p_lat_min, p_lat), p_lat);
          p_lat_max := greatest(nvl(p_lat_max, p_lat), p_lat);
          p_lng_min := least   (nvl(p_lng_min, p_lng), p_lng);
          p_lng_max := greatest(nvl(p_lng_max, p_lng), p_lng);
      end get_map_bounds;
      
      function latlng_literal (lat in number, lng in number) return varchar2 is
      begin
          return case when lat is not null and lng is not null then
              '{'
              || apex_javascript.add_attribute('lat', round(lat,g_coord_precision))
              || apex_javascript.add_attribute('lng', round(lng,g_coord_precision)
                 , false, false)
              || '}'
              end;
      end latlng_literal;
      
      procedure parse_latlng (p_val in varchar2, p_label in varchar2, p_lat out number, p_lng out number) is
          delim_pos number;
      begin
          -- allow space as the delimiter; this should be used in locales which use comma (,) as decimal separator
          if instr(trim(p_val),' ') > 0 then
              delim_pos := instr(p_val,' ');
          else
              delim_pos := instr(p_val,',');
          end if;
          p_lat := apex_plugin_util.get_attribute_as_number(substr(p_val,1,delim_pos-1), p_label || ' latitude');
          p_lng := apex_plugin_util.get_attribute_as_number(substr(p_val,delim_pos+1), p_label || ' longitude');
      end parse_latlng;
      
      function valid_zoom_level (p_attr in varchar2, p_label in varchar2) return number is
          n number;
      begin
          n := apex_plugin_util.get_attribute_as_number(p_attr, p_label);
          if not n between 0 and 23 then
              raise_application_error(-20000, p_label || ': must be in range 0..23 ("' || p_attr || '")');
          end if;
          return n;
      end valid_zoom_level;
      
      procedure get_lat_lng_attr
          (lat_val   in varchar2
          ,lng_val   in varchar2
          ,record_no in number
          ,p_lat     out number
          ,p_lng     out number
          ) is
      begin
          p_lat := round(apex_plugin_util.get_attribute_as_number(lat_val,'Latitude (#'||record_no||')')
                        ,g_coord_precision);
          p_lng := round(apex_plugin_util.get_attribute_as_number(lng_val,'Longitude (#'||record_no||')')
                        ,g_coord_precision);
      end get_lat_lng_attr;
      
      function get_markers
          (p_plugin  in apex_plugin.t_plugin
          ,p_region  in apex_plugin.t_region
          ,p_lat_min in out number
          ,p_lat_max in out number
          ,p_lng_min in out number
          ,p_lng_max in out number
          ) return apex_application_global.vc_arr2 is
          
          l_data                  apex_application_global.vc_arr2;
          l_flex                  varchar2(32767);
          l_buf                   varchar2(32767);
          l_lat                   number;
          l_lng                   number;
          l_weight                number;     
          l_column_value_list     apex_plugin_util.t_column_value_list;
          l_max_rows              number; --p_plugin.attribute_07;
          l_visualisation         plugin_attr := p_region.attribute_02;
          l_escape_special_chars  plugin_attr := p_region.attribute_24;
      
          function flex_field (attr_no in number, i in number) return varchar2 is
            d varchar2(4000);
          begin
            if l_column_value_list.exists(attr_no+7) then
              d := l_column_value_list(attr_no+7)(i);
              if l_escape_special_chars='Y' then
                d := sys.htf.escape_sc(d);
              end if;
            end if;
            return apex_javascript.add_attribute('a'||attr_no,d);
          end flex_field;
          
          function varchar2_field (attr_no in number, i in number) return varchar2 is
            r varchar2(4000);
          begin
            if l_column_value_list.exists(attr_no) then
              r := sys.htf.escape_sc(l_column_value_list(attr_no)(i));
            end if;
            return r;
          end varchar2_field;
              
      begin
      
          /*
             For most cases, column list is as follows:
          
             1.     lat,   - required
             2.     lng,   - required
             3.     name,  - required
             4.     id,    - required
             5.     info,  - optional
             6.     icon,  - optional
             7.     label  - optional
             8-17.  col01..col10 - optional flex fields
             
             If the "Heatmap" option is chosen, the column list is as follows:
             
             1.  lat,   - required
             2.  lng,   - required
             3.  weight - required
          
          */
          
          l_max_rows := apex_plugin_util.get_attribute_as_number(p_plugin.attribute_07, 'Maximum Records');
          
          if l_visualisation = g_visualisation_heatmap then
      
              l_column_value_list := apex_plugin_util.get_data
                  (p_sql_statement  => p_region.source
                  ,p_min_columns    => 3
                  ,p_max_columns    => 3
                  ,p_component_name => p_region.name
                  ,p_max_rows       => l_max_rows);
        
              for i in 1..l_column_value_list(1).count loop
              
                  get_lat_lng_attr
                      (lat_val   => l_column_value_list(1)(i)
                      ,lng_val   => l_column_value_list(2)(i)
                      ,record_no => i
                      ,p_lat     => l_lat
                      ,p_lng     => l_lng);
      
                  l_weight := nvl(round(
                                apex_plugin_util.get_attribute_as_number(l_column_value_list(3)(i),'Weight (#'||i||')')
                                ),1);
                  
                  -- minimise size of data to be sent by encoding it as an array of arrays
                  l_buf := '[' || to_char(l_lat,g_tochar_format)
                        || ',' || to_char(l_lng,g_tochar_format)
                        || ',' || to_char(greatest(l_weight,1))
                        || ']';
                  if i < 8 /*don't send the whole dataset to debug log*/ then
                      apex_debug.message('#' || i || ': ' || l_buf);
                  end if;
                  l_data(nvl(l_data.last,0)+1) := l_buf;
      
                  get_map_bounds
                      (p_lat     => l_lat
                      ,p_lng     => l_lng
                      ,p_lat_min => p_lat_min
                      ,p_lat_max => p_lat_max
                      ,p_lng_min => p_lng_min
                      ,p_lng_max => p_lng_max
                      );
                
              end loop;
          
          else
        
              l_column_value_list := apex_plugin_util.get_data
                  (p_sql_statement  => p_region.source
                  ,p_min_columns    => 4
                  ,p_max_columns    => 17
                  ,p_component_name => p_region.name
                  ,p_max_rows       => l_max_rows);
          
              for i in 1..l_column_value_list(1).count loop
      
                  get_lat_lng_attr
                      (lat_val   => l_column_value_list(1)(i)
                      ,lng_val   => l_column_value_list(2)(i)
                      ,record_no => i
                      ,p_lat     => l_lat
                      ,p_lng     => l_lng);
              
                  -- get flex fields, if any
                  l_flex := null;
                  for attr_no in 1..10 loop
                      l_flex := l_flex || flex_field(attr_no,i);
                  end loop;
      
                  l_buf := apex_javascript.add_attribute('x',l_lat)
                        || apex_javascript.add_attribute('y',l_lng)
                        || apex_javascript.add_attribute('n',varchar2_field(3,i))
                        || apex_javascript.add_attribute('d',varchar2_field(4,i))
                        || apex_javascript.add_attribute('i',varchar2_field(5,i))
                        || apex_javascript.add_attribute('c',varchar2_field(6,i))
                        || apex_javascript.add_attribute('l',substr(varchar2_field(7,i),1,1))
                        || case when l_flex is not null then
                             '"f":{' || rtrim(l_flex,',') || '}'
                           end;
                  
                  if i < 8 /*don't send the whole dataset to debug log*/ then
                      apex_debug.message('#' || i || ': ' || l_buf);
                  end if;
                  l_data(nvl(l_data.last,0)+1) := '{' || rtrim(l_buf,',') || '}';
      
                  get_map_bounds
                      (p_lat     => l_lat
                      ,p_lng     => l_lng
                      ,p_lat_min => p_lat_min
                      ,p_lat_max => p_lat_max
                      ,p_lng_min => p_lng_min
                      ,p_lng_max => p_lng_max
                      );
                
              end loop;
      
          end if;
          
          apex_debug.message('data.count='||l_data.count);
      
          -- handle edge case when there is exactly one row from query
          -- (otherwise the map zooms to maximum)
          if l_data.count = 1 then
              p_lat_min := p_lat_min - g_single_row_lat_margin;
              p_lat_max := p_lat_max + g_single_row_lat_margin;
          end if;
              
          return l_data;
      end get_markers;
      
      function render
          (p_region in apex_plugin.t_region
          ,p_plugin in apex_plugin.t_plugin
          ,p_is_printer_friendly in boolean
          ) return apex_plugin.t_region_render_result is
          
          l_result     apex_plugin.t_region_render_result;
          l_lat        number;
          l_lng        number;
          l_region_id  varchar2(100);
          l_lat_min    number;
          l_lat_max    number;
          l_lng_min    number;
          l_lng_max    number;
      
          -- Component settings
          l_api_key                      plugin_attr := p_plugin.attribute_01;
          l_no_address_results_msg       plugin_attr := p_plugin.attribute_02;
          l_directions_not_found_msg     plugin_attr := p_plugin.attribute_03;
          l_directions_zero_results_msg  plugin_attr := p_plugin.attribute_04;
          l_min_zoom                     number;      --p_plugin.attribute_05;
          l_max_zoom                     number;      --p_plugin.attribute_06;
      
          -- Plugin attributes
          l_map_height           plugin_attr := p_region.attribute_01;
          l_visualisation        plugin_attr := p_region.attribute_02;
          l_click_zoom_level     number;      --p_region.attribute_03;
          l_options              plugin_attr := p_region.attribute_04;
          l_initial_zoom_level   number;      --p_region.attribute_05;
          l_initial_center       plugin_attr := p_region.attribute_06;
          l_restrict_country     plugin_attr := p_region.attribute_10;
          l_mapstyle             plugin_attr := p_region.attribute_11;
          l_heatmap_dissipating  plugin_attr := p_region.attribute_12;
          l_heatmap_opacity      number;      --p_region.attribute_13;
          l_heatmap_radius       number;      --p_region.attribute_14;
          l_travel_mode          plugin_attr := p_region.attribute_15;
          l_drawing_modes        plugin_attr := p_region.attribute_16;
          l_optimizewaypoints    plugin_attr := p_region.attribute_21;
          l_maptype              plugin_attr := p_region.attribute_22;
          l_gesture_handling     plugin_attr := p_region.attribute_25;
          
          l_opt                  varchar2(32767);
          l_dragdrop_geojson     boolean;
          
      begin
          -- debug information will be included
          if apex_application.g_debug then
              apex_plugin_util.debug_region
                  (p_plugin => p_plugin
                  ,p_region => p_region
                  ,p_is_printer_friendly => p_is_printer_friendly);
          end if;
          
          if l_api_key is null then
            raise_application_error(-20000, 'Google Maps API Key is required (set in Component Settings)');
          end if;
          
          l_region_id := case
                         when p_region.static_id is not null
                         then p_region.static_id
                         else 'R'||p_region.id
                         end;
          apex_debug.message('map region: ' || l_region_id);
      
          l_min_zoom           := valid_zoom_level(p_plugin.attribute_05, 'Min. Zoom');
          l_max_zoom           := valid_zoom_level(p_plugin.attribute_06, 'Max. Zoom');
          l_click_zoom_level   := valid_zoom_level(p_region.attribute_03, 'Zoom Level on Click');
          l_initial_zoom_level := valid_zoom_level(p_region.attribute_05, 'Initial Zoom Level');
          l_heatmap_opacity    := apex_plugin_util.get_attribute_as_number(p_region.attribute_13, 'Heatmap Opacity');
          l_heatmap_radius     := apex_plugin_util.get_attribute_as_number(p_region.attribute_14, 'Heatmap Radius');
          l_dragdrop_geojson   := instr(':'||l_options||':',':GEOJSON_DRAGDROP:')>0;
      
          apex_javascript.add_library
              (p_name           => 'js?key=' || l_api_key
                                || case
                                   when l_visualisation = g_visualisation_heatmap then
                                     '&libraries=visualization'
                                   when l_drawing_modes is not null then
                                     '&libraries=drawing'
                                   end
              ,p_directory      => 'https://maps.googleapis.com/maps/api/'
              ,p_skip_extension => true);
          
          apex_javascript.add_library
              (p_name                  => 'jk64reportmap_r1'
              ,p_directory             => p_plugin.file_prefix
              ,p_check_to_add_minified => true );
      
          if l_visualisation = g_visualisation_cluster then
              apex_javascript.add_library
                  (p_name                  => 'markerclusterer'
                  ,p_directory             => p_plugin.file_prefix
                  ,p_check_to_add_minified => true);
          end if;
          
          if l_dragdrop_geojson then
              apex_css.add_file
                  (p_name      => 'jk64reportmap_r1'
                  ,p_directory => p_plugin.file_prefix);
          end if;
          
          if l_initial_center is not null then
              parse_latlng(l_initial_center, p_label=>'Initial Map Center', p_lat=>l_lat, p_lng=>l_lng);
          end if;
          
          if l_drawing_modes is not null then
              -- convert colon-delimited list "marker:polygon:polyline:rectangle:circle"
              -- to a javascript array "'marker','polygon','polyline','rectangle','circle'"
              l_drawing_modes := '''' || replace(l_drawing_modes,':',''',''') || '''';
          end if;
          
          -- use nullif to convert default values to null; this reduces the footprint of the generated code
          l_opt := '{'
            || apex_javascript.add_attribute('regionId', l_region_id)
            || apex_javascript.add_attribute('expectData', nullif(p_region.source is not null,true))
            || apex_javascript.add_attribute('visualisation', lower(nullif(l_visualisation,g_visualisation_pins)))
            || apex_javascript.add_attribute('mapType', lower(nullif(l_maptype,g_maptype_roadmap)))
            || apex_javascript.add_attribute('minZoom', nullif(l_min_zoom,1))
            || apex_javascript.add_attribute('maxZoom', l_max_zoom)
            || apex_javascript.add_attribute('initialZoom', nullif(l_initial_zoom_level,2))
            || case when l_lat!=0 or l_lng!=0 then
                  '"initialCenter":' || latlng_literal(l_lat,l_lng) || ','
               end
            || apex_javascript.add_attribute('clickZoomLevel', l_click_zoom_level)
            || apex_javascript.add_attribute('isDraggable', nullif(instr(':'||l_options||':',':DRAGGABLE:')>0,false))
            || case when l_visualisation = g_visualisation_heatmap then
                  apex_javascript.add_attribute('heatmapDissipating', nullif(l_heatmap_dissipating='Y',false))
               || apex_javascript.add_attribute('heatmapOpacity', nullif(l_heatmap_opacity,0.6))
               || apex_javascript.add_attribute('heatmapRadius', nullif(l_heatmap_radius,5))
               end
            || apex_javascript.add_attribute('panOnClick', nullif(instr(':'||l_options||':',':PAN_ON_CLICK:')>0,true))
            || apex_javascript.add_attribute('restrictCountry', l_restrict_country)
            || case when l_lat_min is not null and l_lng_min is not null
                     and l_lat_max is not null and l_lng_max is not null then
                    '"southwest":' || latlng_literal(l_lat_min,l_lng_min) || ','
                 || '"northeast":' || latlng_literal(l_lat_max,l_lng_max) || ','
               end
            || case when l_mapstyle is not null then
               '"mapStyle":' || l_mapstyle || ','
               end
            || case when l_visualisation = g_visualisation_directions then
                  apex_javascript.add_attribute('travelMode', nullif(l_travel_mode,g_travelmode_driving))
               || apex_javascript.add_attribute('optimizeWaypoints', nullif(l_optimizewaypoints='Y',false))
               end
            || apex_javascript.add_attribute('allowZoom', nullif(instr(':'||l_options||':',':ZOOM_ALLOWED:')>0,true))
            || apex_javascript.add_attribute('allowPan', nullif(instr(':'||l_options||':',':PAN_ALLOWED:')>0,true))
            || apex_javascript.add_attribute('gestureHandling', nullif(l_gesture_handling,'auto'))
            || case when p_region.init_javascript_code is not null then
               '"initFn":function(){' || p_region.init_javascript_code || '},'
               end
            || case when l_drawing_modes is not null then
               '"drawingModes":[' || l_drawing_modes || '],'
               end
            || apex_javascript.add_attribute('dragDropGeoJSON', nullif(l_dragdrop_geojson,false))
      	  || apex_javascript.add_attribute('autoFitBounds', nullif(instr(':'||l_options||':',':DISABLEFITBOUNDS:')=0,true))
            || apex_javascript.add_attribute('noDataMessage', p_region.no_data_found_message)
            || apex_javascript.add_attribute('noAddressResults', l_no_address_results_msg)
            || apex_javascript.add_attribute('directionsNotFound', l_directions_not_found_msg)
            || apex_javascript.add_attribute('directionsZeroResults', l_directions_zero_results_msg)
            || apex_javascript.add_attribute('ajaxIdentifier', apex_plugin.get_ajax_identifier)
            || apex_javascript.add_attribute('ajaxItems', apex_plugin_util.page_item_names_to_jquery(p_region.ajax_items_to_submit))
            || apex_javascript.add_attribute('pluginFilePrefix', p_plugin.file_prefix
               ,false,false)
            || '}';
      
          apex_debug.message('map options: ' || l_opt);
        
          apex_javascript.add_onload_code(p_code =>
            '$("#map_' || l_region_id || '").reportmap(' || l_opt || ');'
            );
        
          sys.htp.p('<div id="map_' || l_region_id || '" class="reportmap" style="min-height:' || l_map_height || 'px"></div>');
          
          if l_dragdrop_geojson then
              sys.htp.p('<div id="drop_' || l_region_id || '" class="reportmap-drop-container"><div class="reportmap-drop-silhouette"></div></div>');
          end if;
          
          return l_result;
      exception
          when others then
              apex_debug.error(sqlerrm);
              apex_debug.message(dbms_utility.format_error_stack);
              apex_debug.message(dbms_utility.format_call_stack);
              raise;
      end render;
      
      function ajax
          (p_region in apex_plugin.t_region
          ,p_plugin in apex_plugin.t_plugin
          ) return apex_plugin.t_region_ajax_result is
      
          l_result   apex_plugin.t_region_ajax_result;
          l_lat      number;
          l_lng      number;
          l_data     apex_application_global.vc_arr2;
          l_lat_min  number;
          l_lat_max  number;
          l_lng_min  number;
          l_lng_max  number;
      
          -- Plugin attributes
          l_initial_center plugin_attr := p_region.attribute_06;
      
      begin
          -- debug information will be included
          if apex_application.g_debug then
              apex_plugin_util.debug_region
                  (p_plugin => p_plugin
                  ,p_region => p_region);
          end if;
          apex_debug.message('ajax');
      
          if p_region.source is not null then
      
              l_data := get_markers
                  (p_plugin  => p_plugin
                  ,p_region  => p_region
                  ,p_lat_min => l_lat_min
                  ,p_lat_max => l_lat_max
                  ,p_lng_min => l_lng_min
                  ,p_lng_max => l_lng_max
                  );
      
          end if;
              
          if l_initial_center is not null then
              parse_latlng(l_initial_center, p_label=>'Initial Map Center', p_lat=>l_lat, p_lng=>l_lng);
          end if;
          
          if l_lat is not null and l_data.count > 0 then
              get_map_bounds
                  (p_lat     => l_lat
                  ,p_lng     => l_lng
                  ,p_lat_min => l_lat_min
                  ,p_lat_max => l_lat_max
                  ,p_lng_min => l_lng_min
                  ,p_lng_max => l_lng_max);
          end if;
      
          sys.owa_util.mime_header('text/plain', false);
          sys.htp.p('Cache-Control: no-cache');
          sys.htp.p('Pragma: no-cache');
          sys.owa_util.http_header_close;
          
          sys.htp.p('{'
            || case when l_lat_min is not null then
                  '"southwest":' || latlng_literal(l_lat_min,l_lng_min) || ','
               || '"northeast":' || latlng_literal(l_lat_max,l_lng_max) || ','
               end
            || '"mapdata":[');
      
          for i in 1..l_data.count loop
              -- use prn to avoid downloading a whole lot of unnecessary \n characters
              sys.htp.prn(case when i>1 then ',' end || l_data(i));
          end loop;
      
          sys.htp.p(']}');
      
          apex_debug.message('ajax finished');
          return l_result;
      exception
          when others then
              apex_debug.error(sqlerrm);
              apex_debug.message(dbms_utility.format_error_stack);
              apex_debug.message(dbms_utility.format_call_stack);
              sys.htp.p('{"error":' || apex_escape.js_literal(sqlerrm,'"') || '}');
              return l_result;
      end ajax;
      
      /**********************************************************
      end jk64reportmap_r1_pkg;
      **********************************************************/
      

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render
    ajax-procedure/function-name: ajax

  standard-attributes: 
    attributes: 
    - Region Source supports different Data Sources
    - Has "Page Items to Submit" Attribute
    - Has "No Data Found Message" Attribute
    - Has "Initialization JavaScript Code" Attribute
    - Has "Order By" Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.1
    about-url: 'https://jeffreykemp.github.io/jk64-plugin-reportmap/'
    help-text: |
      This plugin renders a Google Map, showing a number of pins based on a query you supply with Latitude, Longitude, Name (pin hovertext), id, and Info.
      <p>
      Refer to the wiki for documentation and examples:
      <p>
      <strong><a href="https://github.com/jeffreykemp/jk64-plugin-reportmap/wiki" target=_blank>https://github.com/jeffreykemp/jk64-plugin-reportmap/wiki</a></strong>

  standard-attributes: 
  - # ====== Standard Attribute: INIT_JAVASCRIPT_CODE ============
    id: 153435931030954965
    identification: 
      name: INIT_JAVASCRIPT_CODE

    value: 
      required: false

  - # ====== Standard Attribute: SOURCE_LOCATION =================
    id: 153436394193954965
    identification: 
      name: SOURCE_LOCATION

    value: 
      required: false

    examples: 
      examples: |
        <p>
        <pre>SELECT lat, lng, name, id FROM mydata;</pre>
        </p><p>
        <em>Show a popup info window when a marker is clicked:</em>
        </p><p>
        <pre>SELECT lat, lng, name, id, info FROM mydata;</pre>
        </p><p>
        <em>Show each point with a selected icon:</em>
        </p><p>
        <pre>SELECT lat, lng, name, id, info, icon FROM mydata;</pre>
        </p><p>
        <em>Get only the data within a certain distance from a chosen point:</em>
        </p><p>
        <pre>
        SELECT t.lat AS lat
              ,t.lng AS lng
              ,t.name
              ,t.id AS id
              ,t.info
              ,'' AS icon
        FROM   mytable t
        WHERE  t.lat IS NOT NULL
        AND    t.lng IS NOT NULL
        AND    (:P1_LATLNG IS NULL
             OR :P1_RADIUS IS NULL
             OR SDO_GEOM.sdo_distance
                  (geom1 => SDO_GEOMETRY
                    (sdo_gtype     => 2001 /* 2-dimensional point */
                    ,sdo_srid      => 8307 /* Longitude / Latitude (WGS 84) */
                    ,sdo_point     => SDO_POINT_TYPE(t.lng, t.lat, NULL)
                    ,sdo_elem_info => NULL
                    ,sdo_ordinates => NULL)
                  ,geom2 => SDO_GEOMETRY
                    (sdo_gtype     => 2001 /* 2-dimensional point */
                    ,sdo_srid      => 8307 /* Longitude / Latitude (WGS 84) */
                    ,sdo_point     => SDO_POINT_TYPE
                       (TO_NUMBER(SUBSTR(:P1_LATLNG,INSTR(:P1_LATLNG,',')+1))
                       ,TO_NUMBER(SUBSTR(:P1_LATLNG,1,INSTR(:P1_LATLNG,',')-1)), NULL)
                    ,sdo_elem_info => NULL
                    ,sdo_ordinates => NULL)
                  ,tol   => 0.0001 /*metres*/
                  ,unit  => 'unit=KM') < :P1_RADIUS)
        </pre>
        </p><p>
        <em>Marker labels:</em>
        </p><p>
        <pre>
        SELECT lat, lng, name, id, '' AS info, '' AS icon,
               label as lbl
        FROM mydata;
        </pre>
        </p><p>
        <em>Heatmap:</em>
        </p><p>
        <pre>
        SELECT lat, lng, count(*) as weight
        FROM mydata
        group by lat, lng;
        </pre>

  custom-attributes: 
  - # ====== Custom Attribute: Google API Key ====================
    id: 153405114927954993
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Google API Key
      scope: Application

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 60

    help: 
      help-text: 'A Google Maps API Key is required. Refer: https://developers.google.com/maps/documentation/javascript/get-api-key#get-an-api-key'

  - # ====== Custom Attribute: No Address Results message ========
    id: 153405542464954992
    identification: 
      static-id: attribute_02
      attribute: 2
      name: No Address Results message
      scope: Application

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: 'Leave blank for default: "Address not found"'

  - # ====== Custom Attribute: Directions Not Found message ======
    id: 153405945066954992
    identification: 
      static-id: attribute_03
      attribute: 3
      name: Directions Not Found message
      scope: Application

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: 'Leave blank for default: "At least one of the origin, destination, or waypoints could not be geocoded."'

  - # ====== Custom Attribute: Directions Zero Results message ===
    id: 153406367949954992
    identification: 
      static-id: attribute_04
      attribute: 4
      name: Directions Zero Results message
      scope: Application

    layout: 
      sequence: 40

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true

    help: 
      help-text: 'Leave blank for default: "No route could be found between the origin and destination."'

  - # ====== Custom Attribute: Min. Zoom =========================
    id: 153406734058954991
    identification: 
      static-id: attribute_05
      attribute: 5
      name: Min. Zoom
      scope: Application

    layout: 
      sequence: 50

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      unit: 0 .. 23

    default: 
      value: 1

    help: 
      help-text: Minimum Zoom Level - must be 0 to 23. Set to 0 to allow zooming out to entire world map.

  - # ====== Custom Attribute: Max. Zoom =========================
    id: 153407148898954991
    identification: 
      static-id: attribute_06
      attribute: 6
      name: Max. Zoom
      scope: Application

    layout: 
      sequence: 60

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      unit: 0 .. 23

    help: 
      help-text: Maximum Zoom Level - 0 to 23. Set to blank to allow zooming in to show maximum detail.

  - # ====== Custom Attribute: Maximum Records ===================
    id: 153407512462954991
    identification: 
      static-id: attribute_07
      attribute: 7
      name: Maximum Records
      scope: Application

    layout: 
      sequence: 70

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      unit: rows

    default: 
      value: 10000

    help: 
      help-text: Maximum number of records to fetch from the SQL Query. Note that datasets that are very large (e.g. 10,000+) may perform poorly on the client's machine. The Heatmap option is leaner and can support larger datasets.

  - # ====== Custom Attribute: Min. Map Height ===================
    id: 153407972887954990
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Min. Map Height
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Number
      common: true
      show-in-wizard: false
      required: true
      translatable: false
      unit: pixels

    default: 
      value: 400

    help: 
      help-text: 'Desired height (in pixels) of the map region. Note: the width will adjust according to the available area of the containing window.'

  - # ====== Custom Attribute: Visualisation =====================
    id: 153408317172954990
    identification: 
      static-id: attribute_02
      attribute: 2
      name: Visualisation
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: PINS

    help: 
      help-text: Select how to represent the data retrieved from the query on the map.

    entries: 
    - # ====== Entry: Pins =========================================
      id: 153408704752954990
      entry: 
        sequence: 10
        display: Pins
        return: PINS

      advanced: 
        quick-pick: false

      help: 
        help-text: Show a pin for every data point. The pin may optionally use an alternative icon, or show a single-character label. Each pin can also have an information window showing text (most HTML allowed) when the user selects the pin.

    - # ====== Entry: Marker Clustering ============================
      id: 153409257514954990
      entry: 
        sequence: 20
        display: Marker Clustering
        return: CLUSTER

      advanced: 
        quick-pick: false

      help: 
        help-text: Show a pin for every data point. Cluster pins where many pins are very close together.

    - # ====== Entry: Heatmap ======================================
      id: 153409749060954989
      entry: 
        sequence: 30
        display: Heatmap
        return: HEATMAP

      advanced: 
        quick-pick: false

      help: 
        help-text: 'Show the data as a heat map. Suitable for larger volume of data points. Note: a different query structure is required (i.e. no pin labels or icons are used).'

    - # ====== Entry: Directions ===================================
      id: 153410201754954989
      entry: 
        sequence: 40
        display: Directions
        return: DIRECTIONS

      advanced: 
        quick-pick: false

      help: 
        help-text: Show a route using the data points from the query. Directions can be shown for Driving, Walking, Bicycling or Public Transport. A pin will also be shown at each point.

  - # ====== Custom Attribute: Zoom Level on Click ===============
    id: 153410723495954989
    identification: 
      static-id: attribute_03
      attribute: 3
      name: Zoom Level on Click
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Integer
      common: true
      show-in-wizard: false
      required: false
      translatable: false
      unit: 0 .. 23

    default: 
      value: 13

    help: 
      help-text: When the user clicks on a map marker, or adds a new marker, zoom the map to this level. Set to blank to not zoom on click.

  - # ====== Custom Attribute: Options ===========================
    id: 153411118206954988
    identification: 
      static-id: attribute_04
      attribute: 4
      name: Options
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: 'PAN_ON_CLICK:PAN_ALLOWED:ZOOM_ALLOWED'

    entries: 
    - # ====== Entry: Drag & Drop GeoJSON ==========================
      id: 153411408005954987
      entry: 
        sequence: 50
        display: Drag & Drop GeoJSON
        return: GEOJSON_DRAGDROP

      advanced: 
        quick-pick: false

      help: 
        help-text: |
          Allow user to drag and drop a GeoJSON file onto the map. The features in the GeoJSON will be rendered into a data layer on the map.
          <p>
          If you also enable Drawing Mode, the user will also be able to edit these features, and add and remove features.
          <p>
          You can get the resulting set of features as a new GeoJSON document using code like this:
          <pre>
          var map = $("#map_mymap").reportmap("instance").map;
          map.data.toGeoJson(function(o){
              $s("P1_GEOJSON", JSON.stringify(o));
          });
          </pre>

    - # ====== Entry: Pan on click =================================
      id: 153411941408954987
      entry: 
        sequence: 10
        display: Pan on click
        return: PAN_ON_CLICK

      advanced: 
        quick-pick: false

      help: 
        help-text: When the user clicks a point on the map, pan the map to that location.

    - # ====== Entry: Draggable ====================================
      id: 153412455753954987
      entry: 
        sequence: 20
        display: Draggable
        return: DRAGGABLE

      advanced: 
        quick-pick: false

      help: 
        help-text: Allow user to move pins to new locations on the map.

    - # ====== Entry: Pan allowed ==================================
      id: 153412899453954987
      entry: 
        sequence: 30
        display: Pan allowed
        return: PAN_ALLOWED

      advanced: 
        quick-pick: false

      help: 
        help-text: Allow user to pan the map. If unset, the map will be fixed at one location.

    - # ====== Entry: Zoom Allowed =================================
      id: 153413428425954986
      entry: 
        sequence: 40
        display: Zoom Allowed
        return: ZOOM_ALLOWED

      advanced: 
        quick-pick: false

      help: 
        help-text: Allow user to zoom in or out. If unset, the map scale will remain constant.

    - # ====== Entry: Disable Auto Fit Bounds ======================
      id: 157100266411138829
      entry: 
        sequence: 60
        display: Disable Auto Fit Bounds
        return: DISABLEFITBOUNDS

      advanced: 
        quick-pick: false

      help: 
        help-text: Whenever the map data is refreshed, the map will be automatically panned/zoomed to fit the bounds of all the pins. Set this option to stop the map from automatically fitting the bounds.

  - # ====== Custom Attribute: Initial Zoom Level ================
    id: 153413977535954986
    identification: 
      static-id: attribute_05
      attribute: 5
      name: Initial Zoom Level
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Integer
      common: true
      show-in-wizard: false
      required: false
      translatable: false
      unit: 0 .. 23

    help: 
      help-text: Initial zoom level (0..23) if no data is loaded. Default is 2. If data is loaded, this attribute has no effect.

  - # ====== Custom Attribute: Initial Map Center ================
    id: 153414318313954986
    identification: 
      static-id: attribute_06
      attribute: 6
      name: Initial Map Center
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Text
      common: true
      show-in-wizard: false
      required: false
      translatable: false
      unit: lat,long

    help: 
      help-text: 'Set the latitude and longitude as a pair of numbers to be used to position the map on page load, if no data is loaded. Default is 0,0. If data is loaded, this attribute has no effect. NOTE: the numeric values must use the dot (.) as the decimal separator, and comma (,) as the delimiter between the lat and lng values.'

  - # ====== Custom Attribute: Restrict to Country code ==========
    id: 153414778283954986
    identification: 
      static-id: attribute_10
      attribute: 10
      name: Restrict to Country code
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Text
      common: true
      show-in-wizard: false
      required: false
      translatable: false
      display-width: 10
      maximum-length: 40
      set-text-case: Uppercase

    help: 
      help-text: 'Leave blank to allow geocoding to find any place on earth. Set to 2-character country code (see https://developers.google.com/public-data/docs/canonical/countries_csv for valid values) to restrict geocoder to that country. You can set this to a substition variable (e.g. &P1_COUNTRY.) but note that this will only apply if the page is refreshed.'

    examples: 
      examples: AU

  - # ====== Custom Attribute: Radius ============================
    id: 153415174228954985
    identification: 
      static-id: attribute_14
      attribute: 14
      name: Radius
      scope: Component

    layout: 
      sequence: 140

    settings: 
      type: Integer
      common: true
      show-in-wizard: false
      required: false
      translatable: false
      display-width: 5

    default: 
      value: 5

    condition: 
      depending-on-custom-attribute: Visualisation # 153408317172954990
      depending-on-condition-type: equal to
      expression: HEATMAP
      always-evaluate: true

    help: 
      help-text: The radius of influence for each data point, in pixels.

  - # ====== Custom Attribute: Map Style =========================
    id: 153415526879954985
    identification: 
      static-id: attribute_11
      attribute: 11
      name: Map Style
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Textarea
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    help: 
      help-text: 'Easiest way is to copy one from a site like https://snazzymaps.com/'

    examples: 
      examples: |
        Here is an example, a light greyscale style map:
        <pre>
        [{"featureType":"water","elementType":"geometry","stylers":[{"color":"#e9e9e9"},{"lightness":17}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#ffffff"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#ffffff"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":16}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":21}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#dedede"},{"lightness":21}]},{"elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#ffffff"},{"lightness":16}]},{"elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#333333"},{"lightness":40}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#f2f2f2"},{"lightness":19}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#fefefe"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#fefefe"},{"lightness":17},{"weight":1.2}]}]
        </pre>

  - # ====== Custom Attribute: Dissipating =======================
    id: 153415985337954985
    identification: 
      static-id: attribute_12
      attribute: 12
      name: Dissipating
      scope: Component

    layout: 
      sequence: 120

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Visualisation # 153408317172954990
      depending-on-condition-type: equal to
      expression: HEATMAP
      always-evaluate: true

    help: 
      help-text: Specifies whether heatmaps dissipate on zoom. Yes means the radius of influence of a data point is specified by the radius option only. When dissipating is disabled, the radius option is interpreted as a radius at zoom level 0.

  - # ====== Custom Attribute: Opacity ===========================
    id: 153416359990954984
    identification: 
      static-id: attribute_13
      attribute: 13
      name: Opacity
      scope: Component

    layout: 
      sequence: 130

    settings: 
      type: Number
      common: true
      show-in-wizard: false
      required: false
      translatable: false
      display-width: 5
      unit: 0 .. 1

    default: 
      value: 0.6

    condition: 
      depending-on-custom-attribute: Visualisation # 153408317172954990
      depending-on-condition-type: equal to
      expression: HEATMAP
      always-evaluate: true

    help: 
      help-text: The opacity of the heatmap, expressed as a number between 0 and 1.

  - # ====== Custom Attribute: Travel Mode =======================
    id: 153416757677954984
    identification: 
      static-id: attribute_15
      attribute: 15
      name: Travel Mode
      scope: Component

    layout: 
      sequence: 150

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: DRIVING

    condition: 
      depending-on-custom-attribute: Visualisation # 153408317172954990
      depending-on-condition-type: equal to
      expression: DIRECTIONS
      always-evaluate: true

    help: 
      help-text: Type of travel directions to calculate. The locations can be simple - between two locations according to two items on the page - or via the route indicated by waypoints from the report query. Google API Key required.

    entries: 
    - # ====== Entry: Driving ======================================
      id: 153417121773954984
      entry: 
        sequence: 10
        display: Driving
        return: DRIVING

      advanced: 
        quick-pick: false

    - # ====== Entry: Walking ======================================
      id: 153417663579954984
      entry: 
        sequence: 20
        display: Walking
        return: WALKING

      advanced: 
        quick-pick: false

    - # ====== Entry: Bicycling ====================================
      id: 153418170305954984
      entry: 
        sequence: 30
        display: Bicycling
        return: BICYCLING

      advanced: 
        quick-pick: false

    - # ====== Entry: Transit ======================================
      id: 153418617052954983
      entry: 
        sequence: 40
        display: Transit
        return: TRANSIT

      advanced: 
        quick-pick: false

      help: 
        help-text: Public transport

  - # ====== Custom Attribute: Drawing Mode ======================
    id: 153419115006954983
    identification: 
      static-id: attribute_16
      attribute: 16
      name: Drawing Mode
      scope: Component

    layout: 
      sequence: 160

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: |
        Select one or more Drawing Modes to enable the Google Maps Drawing Library. A button will be added to the top of the map for each shape, allowing the user to select a shape to draw.
        <p>
        The shapes the user has drawn can then be retrieved from the plugin as a geoJson document, which can later be re-loaded onto the map.
        <p>
        Note: the shapes drawn, loaded or retrieved are independent of the data that might be shown in the map derived from the report query.

    entries: 
    - # ====== Entry: polyline =====================================
      id: 153419504658954983
      entry: 
        sequence: 30
        display: polyline
        return: polyline

      advanced: 
        quick-pick: false

    - # ====== Entry: rectangle ====================================
      id: 153420011352954983
      entry: 
        sequence: 40
        display: rectangle
        return: rectangle

      advanced: 
        quick-pick: false

    - # ====== Entry: circle =======================================
      id: 153420545786954983
      entry: 
        sequence: 50
        display: circle
        return: circle

      advanced: 
        quick-pick: false

      help: 
        help-text: "Note: when drawn, a circle is currently rendered as just a point (at the circle's center) with a \"radius\" property (not shown)."

    - # ====== Entry: marker =======================================
      id: 153421018810954982
      entry: 
        sequence: 10
        display: marker
        return: marker

      advanced: 
        quick-pick: false

    - # ====== Entry: polygon ======================================
      id: 153421515580954982
      entry: 
        sequence: 20
        display: polygon
        return: polygon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Optimize Waypoints ================
    id: 153422015830954982
    identification: 
      static-id: attribute_21
      attribute: 21
      name: Optimize Waypoints
      scope: Component

    layout: 
      sequence: 210

    settings: 
      type: Yes/No
      common: false
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Visualisation # 153408317172954990
      depending-on-condition-type: equal to
      expression: DIRECTIONS
      always-evaluate: true

    help: 
      help-text: |
        If set to true, the Directions service will attempt to re-order the supplied intermediate waypoints to minimize overall cost of the route.
        
        Note: the first and last points supplied by the report query are always used as the starting and ending points for the journey.

  - # ====== Custom Attribute: Default Map Type ==================
    id: 153422418217954982
    identification: 
      static-id: attribute_22
      attribute: 22
      name: Default Map Type
      scope: Component

    layout: 
      sequence: 220

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: ROADMAP

    help: 
      help-text: Default map type to show on page load. The user may change the map type if they wish to show a different type.

    entries: 
    - # ====== Entry: Roadmap ======================================
      id: 153422823236954981
      entry: 
        sequence: 10
        display: Roadmap
        return: ROADMAP

      advanced: 
        quick-pick: false

      help: 
        help-text: (default) This map type displays a normal street map.

    - # ====== Entry: Satellite ====================================
      id: 153423324749954981
      entry: 
        sequence: 20
        display: Satellite
        return: SATELLITE

      advanced: 
        quick-pick: false

      help: 
        help-text: This map type displays satellite images.

    - # ====== Entry: Hybrid =======================================
      id: 153423825462954981
      entry: 
        sequence: 30
        display: Hybrid
        return: HYBRID

      advanced: 
        quick-pick: false

      help: 
        help-text: This map type displays a transparent layer of major streets on satellite images.

    - # ====== Entry: Terrain ======================================
      id: 153424308038954981
      entry: 
        sequence: 40
        display: Terrain
        return: TERRAIN

      advanced: 
        quick-pick: false

      help: 
        help-text: This map type displays maps with physical features such as terrain and vegetation.

  - # ====== Custom Attribute: Escape special characters =========
    id: 153424814553954980
    identification: 
      static-id: attribute_24
      attribute: 24
      name: Escape special characters
      scope: Component

    layout: 
      sequence: 240

    settings: 
      type: Yes/No
      common: false
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: Y

    help: 
      help-text: This is relevant only to the "flex fields", if supplied in the SQL Query. By default any special characters (such as < and >) will be escaped prior to sending to the client, in order to protect against XSS attacks and to allow the original data to be rendered exactly as entered. To disable this escaping, set this attribute to No.

  - # ====== Custom Attribute: Gesture Handling ==================
    id: 153425232282954980
    identification: 
      static-id: attribute_25
      attribute: 25
      name: Gesture Handling
      scope: Component

    layout: 
      sequence: 250

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: auto

    help: 
      help-text: This attribute allows you to select how the map responds to touch gestures on a mobile device. Mobile web users often get frustrated when trying to scroll the page, but an embedded map captures their swipe and pans the map instead. This can even lead to users getting stuck on the map and having to reload the page in order to get back to the rest of the page. This option allows you to make scrolling more intuitive and less frustrating map interaction experience on mobile browsers.

    entries: 
    - # ====== Entry: cooperative ==================================
      id: 153425614958954980
      entry: 
        sequence: 10
        display: cooperative
        return: cooperative

      advanced: 
        quick-pick: false

      help: 
        help-text: |
          Scroll events and one-finger touch gestures scroll the page, and do not zoom or pan the map. Two-finger touch gestures pan and zoom the map. Scroll events with a ctrl key or ⌘ key pressed zoom the map.
          In this mode the map cooperates with the page.

    - # ====== Entry: greedy =======================================
      id: 153426156807954979
      entry: 
        sequence: 20
        display: greedy
        return: greedy

      advanced: 
        quick-pick: false

      help: 
        help-text: All touch gestures and scroll events pan or zoom the map.

    - # ====== Entry: none =========================================
      id: 153426620916954979
      entry: 
        sequence: 30
        display: none
        return: none

      advanced: 
        quick-pick: false

      help: 
        help-text: The map cannot be panned or zoomed by user gestures.

    - # ====== Entry: auto =========================================
      id: 153427129195954979
      entry: 
        sequence: 40
        display: auto
        return: auto

      advanced: 
        quick-pick: false

      help: 
        help-text: (default) Gesture handling is either cooperative or greedy, depending on whether the page is scrollable.

  events: 
  - # ====== Event: maprefreshed =================================
    id: 60502546220191983
    identification: 
      name: mapRefreshed
      internal-name: maprefreshed

  - # ====== Event: markeradded ==================================
    id: 108854800956632297
    identification: 
      name: markerAdded
      internal-name: markeradded

  - # ====== Event: removefeature ================================
    id: 153438813711954962
    identification: 
      name: removeFeature
      internal-name: removefeature

  - # ====== Event: setgeometry ==================================
    id: 153439260247954962
    identification: 
      name: setGeometry
      internal-name: setgeometry

  - # ====== Event: selectfeature ================================
    id: 153439618311954962
    identification: 
      name: selectFeature
      internal-name: selectfeature

  - # ====== Event: unselectfeature ==============================
    id: 153440064649954961
    identification: 
      name: unselectFeature
      internal-name: unselectfeature

  - # ====== Event: addressfound =================================
    id: 153440419367954961
    identification: 
      name: addressFound
      internal-name: addressfound

  - # ====== Event: directions ===================================
    id: 153440832199954961
    identification: 
      name: directions
      internal-name: directions

  - # ====== Event: geolocate ====================================
    id: 153441270210954961
    identification: 
      name: geolocate
      internal-name: geolocate

  - # ====== Event: mapclick =====================================
    id: 153441658567954961
    identification: 
      name: mapClick
      internal-name: mapclick

  - # ====== Event: maploaded ====================================
    id: 153442018695954960
    identification: 
      name: mapLoaded
      internal-name: maploaded

  - # ====== Event: markerclick ==================================
    id: 153442436224954960
    identification: 
      name: markerClick
      internal-name: markerclick

  - # ====== Event: markerdrag ===================================
    id: 153442819716954960
    identification: 
      name: markerDrag
      internal-name: markerdrag

  - # ====== Event: loadedgeojson ================================
    id: 153443216316954960
    identification: 
      name: loadedGeoJson
      internal-name: loadedgeojson

  - # ====== Event: addfeature ===================================
    id: 153443650388954959
    identification: 
      name: addFeature
      internal-name: addfeature

  files: 
  - # ====== File: markerclusterer.js ============================
    id: 153446740070954956
    identification: 
      file-name: markerclusterer.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: markerclusterer.min.js ========================
    id: 153447140615954955
    identification: 
      file-name: markerclusterer.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: images/m1.png =================================
    id: 153447536496954954
    identification: 
      file-name: images/m1.png

    attributes: 
      mime-type: image/png
      file-character-set: Unicode UTF-8

  - # ====== File: images/m2.png =================================
    id: 153447918120954954
    identification: 
      file-name: images/m2.png

    attributes: 
      mime-type: image/png
      file-character-set: Unicode UTF-8

  - # ====== File: jk64reportmap_r1.css ==========================
    id: 153448387582954954
    identification: 
      file-name: jk64reportmap_r1.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: images/m3.png =================================
    id: 153448734108954954
    identification: 
      file-name: images/m3.png

    attributes: 
      mime-type: image/png
      file-character-set: Unicode UTF-8

  - # ====== File: images/m4.png =================================
    id: 153449154536954954
    identification: 
      file-name: images/m4.png

    attributes: 
      mime-type: image/png
      file-character-set: Unicode UTF-8

  - # ====== File: images/m5.png =================================
    id: 153449537397954953
    identification: 
      file-name: images/m5.png

    attributes: 
      mime-type: image/png
      file-character-set: Unicode UTF-8

  - # ====== File: jk64reportmap_r1.js ===========================
    id: 153449955320954953
    identification: 
      file-name: jk64reportmap_r1.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: jk64reportmap_r1.min.js =======================
    id: 153450337382954952
    identification: 
      file-name: jk64reportmap_r1.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: APEX Tooltip ================================
  id: 210254837103836204
  identification: 
    name: APEX Tooltip
    internal-name: DE.DANIELH.APEXTOOLTIP
    type: Dynamic Action

  advanced: 
    category: Initialize
    quick-pick: false

  subscription: 
    version-number: 1

  source: 
    pl/sql-code: |
      /*-------------------------------------
       * APEX Tooltip functions
       * Version: 1.2 (18.10.2016)
       * Author:  Daniel Hochleitner
       *-------------------------------------
      */
      FUNCTION render_tooltip(p_dynamic_action IN apex_plugin.t_dynamic_action,
                              p_plugin         IN apex_plugin.t_plugin)
        RETURN apex_plugin.t_dynamic_action_render_result IS
        --
        -- plugin attributes
        l_result       apex_plugin.t_dynamic_action_render_result;
        l_theme        VARCHAR2(100) := p_dynamic_action.attribute_01;
        l_text_source  VARCHAR2(100) := p_dynamic_action.attribute_11;
        l_content_text VARCHAR2(1000) := p_dynamic_action.attribute_02;
        l_content_item VARCHAR2(200) := p_dynamic_action.attribute_12;
        l_content_html VARCHAR2(50) := p_dynamic_action.attribute_03;
        l_animation    VARCHAR2(100) := p_dynamic_action.attribute_04;
        l_position     VARCHAR2(100) := p_dynamic_action.attribute_05;
        l_delay        NUMBER := p_dynamic_action.attribute_06;
        l_trigger      VARCHAR2(100) := p_dynamic_action.attribute_07;
        l_min_width    NUMBER := p_dynamic_action.attribute_08;
        l_max_width    NUMBER := p_dynamic_action.attribute_09;
        l_logging      VARCHAR2(50) := p_dynamic_action.attribute_10;
        -- js/css file vars
        l_apextooltip_js  VARCHAR2(50);
        l_tooltipster_js  VARCHAR2(50);
        l_tooltipster_css VARCHAR2(50);
        --
      BEGIN
        -- attribute defaults
        l_theme        := nvl(l_theme,
                              'tooltipster-default');
        l_text_source  := nvl(l_text_source,
                              'TEXT');
        l_content_html := nvl(l_content_html,
                              'false');
        l_animation    := nvl(l_animation,
                              'fade');
        l_position     := nvl(l_position,
                              'top');
        l_delay        := nvl(l_delay,
                              200);
        l_trigger      := nvl(l_trigger,
                              'hover');
        l_min_width    := nvl(l_min_width,
                              0);
        l_logging      := nvl(l_logging,
                              'false');
        -- Debug
        IF apex_application.g_debug THEN
          apex_plugin_util.debug_dynamic_action(p_plugin         => p_plugin,
                                                p_dynamic_action => p_dynamic_action);
          -- set js/css filenames (normal version)
          l_apextooltip_js  := 'apextooltip';
          l_tooltipster_js  := 'tooltipster.bundle';
          l_tooltipster_css := 'tooltipster.bundle';
        ELSE
          -- minified version
          l_apextooltip_js  := 'apextooltip.min';
          l_tooltipster_js  := 'tooltipster.bundle.min';
          l_tooltipster_css := 'tooltipster.bundle.min';
        END IF;
        --
        -- add tooltipster and apextooltip js files
        apex_javascript.add_library(p_name           => l_tooltipster_js,
                                    p_directory      => p_plugin.file_prefix ||
                                                        'js/',
                                    p_version        => NULL,
                                    p_skip_extension => FALSE);
        --
        apex_javascript.add_library(p_name           => l_apextooltip_js,
                                    p_directory      => p_plugin.file_prefix ||
                                                        'js/',
                                    p_version        => NULL,
                                    p_skip_extension => FALSE);
        --
        -- add tooltipster css and theme css files
        apex_css.add_file(p_name      => l_tooltipster_css,
                          p_directory => p_plugin.file_prefix || 'css/');
        -- theme (not default one)
        IF l_theme != 'tooltipster-default' THEN
          apex_css.add_file(p_name      => l_theme || '.min',
                            p_directory => p_plugin.file_prefix || 'css/themes/');
        END IF;
        --
        --
        l_result.javascript_function := 'apexTooltip.showTooltip';
        l_result.attribute_01        := l_theme;
        l_result.attribute_02        := l_content_text;
        l_result.attribute_03        := l_content_html;
        l_result.attribute_04        := l_animation;
        l_result.attribute_05        := l_position;
        l_result.attribute_06        := l_delay;
        l_result.attribute_07        := l_trigger;
        l_result.attribute_08        := l_min_width;
        l_result.attribute_09        := l_max_width;
        l_result.attribute_10        := l_logging;
        l_result.attribute_11        := l_text_source;
        l_result.attribute_12        := l_content_item;
        --
        RETURN l_result;
        --
      END render_tooltip;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_tooltip

  standard-attributes: 
    attributes: 
    - For Item(s)
    - For Button
    - For Region
    - For jQuery Selector
    - Affected Element Required
    - Check "Fire on Initialization"

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.2
    about-url: 'https://github.com/Dani3lSun/apex-plugin-apextooltip'
    help-text: A powerful, flexible APEX plugin enabling you to easily create semantic, modern tooltips.

  custom-attributes: 
  - # ====== Custom Attribute: Logging ===========================
    id: 210260257305836222
    identification: 
      attribute: 10
      name: Logging
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: false

    help: 
      help-text: Whether to log events in the console.

    entries: 
    - # ====== Entry: True =========================================
      id: 210260608384836222
      entry: 
        sequence: 10
        display: True
        return: true

      advanced: 
        quick-pick: false

    - # ====== Entry: False ========================================
      id: 210261081934836222
      entry: 
        sequence: 20
        display: False
        return: false

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Theme =============================
    id: 210283370333877755
    identification: 
      attribute: 1
      name: Theme
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: tooltipster-default

    help: 
      help-text: APEX Tooltip theme

    entries: 
    - # ====== Entry: Default ======================================
      id: 210283704311878969
      entry: 
        sequence: 10
        display: Default
        return: tooltipster-default

      advanced: 
        quick-pick: false

    - # ====== Entry: Light ========================================
      id: 210284108216892104
      entry: 
        sequence: 20
        display: Light
        return: tooltipster-light

      advanced: 
        quick-pick: false

    - # ====== Entry: Noir =========================================
      id: 210284524276893491
      entry: 
        sequence: 30
        display: Noir
        return: tooltipster-noir

      advanced: 
        quick-pick: false

    - # ====== Entry: Punk =========================================
      id: 210284934571895312
      entry: 
        sequence: 40
        display: Punk
        return: tooltipster-punk

      advanced: 
        quick-pick: false

    - # ====== Entry: Shadow =======================================
      id: 210285341578896472
      entry: 
        sequence: 50
        display: Shadow
        return: tooltipster-shadow

      advanced: 
        quick-pick: false

    - # ====== Entry: Borderless ===================================
      id: 212462670422877332
      entry: 
        sequence: 60
        display: Borderless
        return: tooltipster-borderless

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Content Text ======================
    id: 210285940172946159
    identification: 
      attribute: 2
      name: Content Text
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Content Text Source # 212466193136909675
      depending-on-condition-type: equal to
      expression: TEXT
      always-evaluate: true

    help: 
      help-text: Content text of the tooltip

  - # ====== Custom Attribute: Content with HTML =================
    id: 210286166387948277
    identification: 
      attribute: 3
      name: Content with HTML
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: false

    help: 
      help-text: If the content of the tooltip is provided as a string, it is displayed as plain text by default. If this content should actually be interpreted as HTML, set this option to true.

    entries: 
    - # ====== Entry: True =========================================
      id: 210286467453948771
      entry: 
        sequence: 10
        display: True
        return: true

      advanced: 
        quick-pick: false

    - # ====== Entry: False ========================================
      id: 210286926448949331
      entry: 
        sequence: 20
        display: False
        return: false

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Animation =========================
    id: 210287485413960329
    identification: 
      attribute: 4
      name: Animation
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: fade

    help: 
      help-text: Determines how the tooltip will animate in and out.

    entries: 
    - # ====== Entry: Fade =========================================
      id: 210287782810960711
      entry: 
        sequence: 10
        display: Fade
        return: fade

      advanced: 
        quick-pick: false

    - # ====== Entry: Grow =========================================
      id: 210288240812962571
      entry: 
        sequence: 20
        display: Grow
        return: grow

      advanced: 
        quick-pick: false

    - # ====== Entry: Swing ========================================
      id: 210288657458963701
      entry: 
        sequence: 30
        display: Swing
        return: swing

      advanced: 
        quick-pick: false

    - # ====== Entry: Slide ========================================
      id: 210289036740964551
      entry: 
        sequence: 40
        display: Slide
        return: slide

      advanced: 
        quick-pick: false

    - # ====== Entry: Fall =========================================
      id: 210289405929965410
      entry: 
        sequence: 50
        display: Fall
        return: fall

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Position ==========================
    id: 210290195787978716
    identification: 
      attribute: 5
      name: Position
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: top

    help: 
      help-text: Set the position of the tooltip

    entries: 
    - # ====== Entry: Top ==========================================
      id: 210290561559979208
      entry: 
        sequence: 10
        display: Top
        return: top

      advanced: 
        quick-pick: false

    - # ====== Entry: Right ========================================
      id: 210290871073981158
      entry: 
        sequence: 20
        display: Right
        return: right

      advanced: 
        quick-pick: false

    - # ====== Entry: Left =========================================
      id: 210291302443981693
      entry: 
        sequence: 30
        display: Left
        return: left

      advanced: 
        quick-pick: false

    - # ====== Entry: Bottom =======================================
      id: 210291730033983046
      entry: 
        sequence: 40
        display: Bottom
        return: bottom

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Delay =============================
    id: 210293685750996823
    identification: 
      attribute: 6
      name: Delay
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: 200

    help: 
      help-text: Delay how long it takes (in milliseconds) for the tooltip to start animating in. Default 200ms.

  - # ====== Custom Attribute: Trigger ===========================
    id: 210294055271003854
    identification: 
      attribute: 7
      name: Trigger
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: hover

    help: 
      help-text: Set how tooltips should be activated and closed. Default 'hover'

    entries: 
    - # ====== Entry: Hover ========================================
      id: 210294290553004432
      entry: 
        sequence: 10
        display: Hover
        return: hover

      advanced: 
        quick-pick: false

    - # ====== Entry: Click ========================================
      id: 210294751341005035
      entry: 
        sequence: 20
        display: Click
        return: click

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: min Width =========================
    id: 210295078640013903
    identification: 
      attribute: 8
      name: min Width
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: 0

    help: 
      help-text: 'Set a minimum width (in pixels) for the tooltip. Default: 0 (auto width)'

  - # ====== Custom Attribute: max Width =========================
    id: 210295415312018599
    identification: 
      attribute: 9
      name: max Width
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: 'Set a maximum width (in pixels) for the tooltip. Default: null (no max width)'

  - # ====== Custom Attribute: Content Text Source ===============
    id: 212466193136909675
    identification: 
      attribute: 11
      name: Content Text Source
      scope: Component

    layout: 
      sequence: 15

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: TEXT

    help: 
      help-text: Source of the tooltip content text

    examples: 
      examples: |
        Freetext<br>
        Text from item<br>
        Text from HTML title attribute of affected element

    entries: 
    - # ====== Entry: Freetext =====================================
      id: 212469687927916974
      entry: 
        sequence: 10
        display: Freetext
        return: TEXT

      advanced: 
        quick-pick: false

    - # ====== Entry: Text from item ===============================
      id: 212470083183918116
      entry: 
        sequence: 20
        display: Text from item
        return: ITEM

      advanced: 
        quick-pick: false

    - # ====== Entry: Text from title attribute ====================
      id: 212470550604919808
      entry: 
        sequence: 30
        display: Text from title attribute
        return: TITLE

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Content Text Item =================
    id: 212481151538929141
    identification: 
      attribute: 12
      name: Content Text Item
      scope: Component

    layout: 
      sequence: 25

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Content Text Source # 212466193136909675
      depending-on-condition-type: equal to
      expression: ITEM
      always-evaluate: true

    help: 
      help-text: Item which holds the content text of the tooltip

  events: 
  - # ====== Event: apextooltip-show =============================
    id: 210320481732349079
    identification: 
      name: APEX Tooltip - on Show
      internal-name: apextooltip-show

  - # ====== Event: apextooltip-hide =============================
    id: 210320813481349080
    identification: 
      name: APEX Tooltip - on Hide
      internal-name: apextooltip-hide

  files: 
  - # ====== File: css/themes/tooltipster-borderless.min.css =====
    id: 58085433856381977
    identification: 
      file-name: css/themes/tooltipster-borderless.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/themes/tooltipster-light.min.css ==========
    id: 58085703713381978
    identification: 
      file-name: css/themes/tooltipster-light.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/themes/tooltipster-noir.min.css ===========
    id: 58086077131381978
    identification: 
      file-name: css/themes/tooltipster-noir.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/themes/tooltipster-punk.min.css ===========
    id: 58086476257381978
    identification: 
      file-name: css/themes/tooltipster-punk.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/themes/tooltipster-shadow.min.css =========
    id: 58086875980381979
    identification: 
      file-name: css/themes/tooltipster-shadow.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/tooltipster.bundle.css ====================
    id: 58087338119381980
    identification: 
      file-name: css/tooltipster.bundle.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/tooltipster.bundle.min.css ================
    id: 58087659214381983
    identification: 
      file-name: css/tooltipster.bundle.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: js/apextooltip.js =============================
    id: 58088133981381983
    identification: 
      file-name: js/apextooltip.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: js/apextooltip.min.js =========================
    id: 58088479137381984
    identification: 
      file-name: js/apextooltip.min.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: js/tooltipster.bundle.js ======================
    id: 58088854784381985
    identification: 
      file-name: js/tooltipster.bundle.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: js/tooltipster.bundle.min.js ==================
    id: 58089271549381986
    identification: 
      file-name: js/tooltipster.bundle.min.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: Copy to clipboard ===========================
  id: 259673224414352076
  identification: 
    name: Copy to clipboard
    internal-name: NL.DETORA.APEX.COPYTOCLIPBOARD
    type: Dynamic Action

  advanced: 
    category: Effect
    quick-pick: false

  subscription: 
    version-number: 1

  source: 
    pl/sql-code: |
      /*-------------------------------------
       * APEX Resize Dialog
       * Version: 1.0 (05-01-2016)
       * Author:  Dick Dral
       *-------------------------------------
      */
      FUNCTION render_copy_to_clipboard(p_dynamic_action IN apex_plugin.t_dynamic_action,
                                     p_plugin         IN apex_plugin.t_plugin)
        RETURN apex_plugin.t_dynamic_action_render_result IS
        --
        -- plugin attributes
        l_result       apex_plugin.t_dynamic_action_render_result;
        --
      BEGIN
        --
        l_result.javascript_function := 'apexcopytoclipboard.doIt';
        --
        RETURN l_result;
        --
      END render_copy_to_clipboard;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_copy_to_clipboard

  standard-attributes: 
    attributes: 
    - For Item(s)
    - Affected Element Required

  custom-attributes: 
    substitute-attribute-values: true

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#apexcopytoclipboard.js'

  information: 
    version: 1.1
    about-url: 'http://www.speech2form.com/ords/f?p=OPFG:COPY_TO_CLIPBOARD'

  files: 
  - # ====== File: apexcopytoclipboard.js ========================
    id: 229129126817675042
    identification: 
      file-name: apexcopytoclipboard.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: JK64 Report Google Map ======================
  id: 703457167297871098
  identification: 
    name: JK64 Report Google Map
    internal-name: COM.JK64.REPORT_GOOGLE_MAP
    type: Region

  advanced: 
    quick-pick: false

  subscription: 
    version-number: 1

  source: 
    pl/sql-code: |
      -- jk64 ReportMap v0.9
      g_num_format constant varchar2(100) := '99999999999999.999999999999999999999999999999';
      g_tochar_format constant varchar2(100) := 'fm99999999999990.099999999999999999999999999999';
      
      g_attr1_label constant varchar2(10) := 'LABEL';
      
      PROCEDURE set_map_extents
          (p_lat     IN NUMBER
          ,p_lng     IN NUMBER
          ,p_lat_min IN OUT NUMBER
          ,p_lat_max IN OUT NUMBER
          ,p_lng_min IN OUT NUMBER
          ,p_lng_max IN OUT NUMBER
          ) IS
      BEGIN
          p_lat_min := LEAST   (NVL(p_lat_min, p_lat), p_lat);
          p_lat_max := GREATEST(NVL(p_lat_max, p_lat), p_lat);
          p_lng_min := LEAST   (NVL(p_lng_min, p_lng), p_lng);
          p_lng_max := GREATEST(NVL(p_lng_max, p_lng), p_lng);
      END set_map_extents;
      
      FUNCTION latlng2ch (lat IN NUMBER, lng IN NUMBER) RETURN VARCHAR2 IS
      BEGIN
        RETURN '"lat":'
            || TO_CHAR(lat, g_tochar_format)
            || ',"lng":'
            || TO_CHAR(lng, g_tochar_format);
      END latlng2ch;
      
      FUNCTION get_markers
          (p_region     IN APEX_PLUGIN.t_region
          ,p_lat_min    IN OUT NUMBER
          ,p_lat_max    IN OUT NUMBER
          ,p_lng_min    IN OUT NUMBER
          ,p_lng_max    IN OUT NUMBER
          ,p_attribute1 IN VARCHAR2
          ) RETURN APEX_APPLICATION_GLOBAL.VC_ARR2 IS
          
          l_data           APEX_APPLICATION_GLOBAL.VC_ARR2;
          l_lat            NUMBER;
          l_lng            NUMBER;
          l_info           VARCHAR2(4000);
          l_icon           VARCHAR2(4000);
          l_radius_km      NUMBER;
          l_circle_color   VARCHAR2(100);
          l_circle_transp  NUMBER;
          l_flex_fields    VARCHAR2(32767);
          l_marker_label   VARCHAR2(1);
           
          l_column_value_list  APEX_PLUGIN_UTIL.t_column_value_list;
      
      BEGIN
      
          l_column_value_list := APEX_PLUGIN_UTIL.get_data
              (p_sql_statement  => p_region.source
              ,p_min_columns    => 4
              ,p_max_columns    => 19
              ,p_component_name => p_region.name
              ,p_max_rows       => p_region.fetched_rows);
          
          FOR i IN 1..l_column_value_list(1).count LOOP
          
              IF NOT l_column_value_list.EXISTS(1)
              OR NOT l_column_value_list.EXISTS(2)
              OR NOT l_column_value_list.EXISTS(3)
              OR NOT l_column_value_list.EXISTS(4) THEN
                RAISE_APPLICATION_ERROR(-20000, 'Report Map Query must have at least 4 columns (lat, lng, name, id)');
              END IF;
        
              l_lat  := TO_NUMBER(l_column_value_list(1)(i),g_num_format);
              l_lng  := TO_NUMBER(l_column_value_list(2)(i),g_num_format);
              
              -- default values if not supplied in query
              l_icon          := NULL;
              l_radius_km     := NULL;
              l_circle_color  := '#0000cc';
              l_circle_transp := 0.3;
              l_flex_fields   := NULL;
              l_marker_label  := NULL;
              
              IF l_column_value_list.EXISTS(5) THEN
                l_info := l_column_value_list(5)(i);
              IF l_column_value_list.EXISTS(6) THEN
                l_icon := l_column_value_list(6)(i);
              IF l_column_value_list.EXISTS(7) THEN
                l_radius_km := TO_NUMBER(l_column_value_list(7)(i),g_num_format);
              IF l_column_value_list.EXISTS(8) THEN
                l_circle_color := l_column_value_list(8)(i);
              IF l_column_value_list.EXISTS(9) THEN
                l_circle_transp := TO_NUMBER(l_column_value_list(9)(i),g_num_format);
              END IF; END IF; END IF; END IF; END IF;
              
              -- The remaining columns are up to 10 "flex" fields.
              -- If one of them is equal to a special attribute ("label"), the very next
              -- field is interpreted as the label.
              FOR j IN 10..19 LOOP
                IF l_column_value_list.EXISTS(j) THEN
      
                  if j = 10 and UPPER(p_attribute1) = g_attr1_label then
      
                    l_marker_label := substr(l_column_value_list(j)(i), 1, 1);
      
                  else
      
                    l_flex_fields := l_flex_fields
                                  || ',"attr'
                                  || TO_CHAR(j-9,'fm00')
                                  || '":'
                                  || APEX_ESCAPE.js_literal(l_column_value_list(j)(i),'"');
      
                  end if;
      
                END IF;
              END LOOP;
      		
              l_data(NVL(l_data.LAST,0)+1) :=
                   '{"id":'  || APEX_ESCAPE.js_literal(l_column_value_list(4)(i),'"')
                || ',"name":'|| APEX_ESCAPE.js_literal(l_column_value_list(3)(i),'"')
                || ','       || latlng2ch(l_lat,l_lng)
                || CASE WHEN l_info IS NOT NULL THEN
                   ',"info":'|| APEX_ESCAPE.js_literal(l_info,'"')
                   END
                || ',"icon":'|| APEX_ESCAPE.js_literal(l_icon,'"')
                || ',"label":'|| APEX_ESCAPE.js_literal(l_marker_label,'"') 
                || CASE WHEN l_radius_km IS NOT NULL THEN
                   ',"rad":' || TO_CHAR(l_radius_km,g_tochar_format)
      		      || ',"col":' || APEX_ESCAPE.js_literal(l_circle_color,'"')
      		      ||   CASE WHEN l_circle_transp IS NOT NULL THEN
                   ',"trns":'|| TO_CHAR(l_circle_transp,'fm990.099')
                     END
                   END
                || l_flex_fields
                || '}';
          
              set_map_extents
                (p_lat     => l_lat
                ,p_lng     => l_lng
                ,p_lat_min => p_lat_min
                ,p_lat_max => p_lat_max
                ,p_lng_min => p_lng_min
                ,p_lng_max => p_lng_max
                );
            
          END LOOP;
      
          RETURN l_data;
      END get_markers;
      
      PROCEDURE htp_arr (arr IN APEX_APPLICATION_GLOBAL.VC_ARR2) IS
      BEGIN
          FOR i IN 1..arr.COUNT LOOP
              -- use prn to avoid loading a whole lot of unnecessary \n characters
              sys.htp.prn(CASE WHEN i > 1 THEN ',' END || arr(i));
          END LOOP;
      END htp_arr;
      
      FUNCTION render_map
          (p_region IN APEX_PLUGIN.t_region
          ,p_plugin IN APEX_PLUGIN.t_plugin
          ,p_is_printer_friendly IN BOOLEAN
          ) RETURN APEX_PLUGIN.t_region_render_result IS
      
          SUBTYPE plugin_attr is VARCHAR2(32767);
          
          l_result       APEX_PLUGIN.t_region_render_result;
      
          l_lat          number;
          l_lng          number;
          l_region       varchar2(100);
          l_script       varchar2(32767);
          l_data         APEX_APPLICATION_GLOBAL.VC_ARR2;
          l_lat_min      number;
          l_lat_max      number;
          l_lng_min      number;
          l_lng_max      number;
          l_js_params    varchar2(1000);
          l_zoom_enabled varchar2(1000) := 'true';
          l_pan_enabled  varchar2(1000) := 'true';
      
          -- Plugin attributes (application level)
          l_api_key       plugin_attr := p_plugin.attribute_01;
      
          -- Component attributes
          l_map_height        plugin_attr := p_region.attribute_01;
          l_id_item           plugin_attr := p_region.attribute_02;
          l_click_zoom        plugin_attr := p_region.attribute_03;    
          l_sync_item         plugin_attr := p_region.attribute_04;
          l_markericon        plugin_attr := p_region.attribute_05;
          l_latlong           plugin_attr := p_region.attribute_06;
          l_dist_item         plugin_attr := p_region.attribute_07;
          l_pan_on_click      plugin_attr := p_region.attribute_08;
          l_geocode_item      plugin_attr := p_region.attribute_09;
          l_country           plugin_attr := p_region.attribute_10;
          l_mapstyle          plugin_attr := p_region.attribute_11;
          l_address_item      plugin_attr := p_region.attribute_12;
          l_geolocate         plugin_attr := p_region.attribute_13;
          l_geoloc_zoom       plugin_attr := p_region.attribute_14;
          l_directions        plugin_attr := p_region.attribute_15;
          l_origin_item       plugin_attr := p_region.attribute_16;
          l_dest_item         plugin_attr := p_region.attribute_17;
          l_dirdist_item      plugin_attr := p_region.attribute_18;
          l_dirdur_item       plugin_attr := p_region.attribute_19;
          l_attribute1        plugin_attr := p_region.attribute_20;
          l_optimizewaypoints plugin_attr := p_region.attribute_21;
          l_maptype           plugin_attr := p_region.attribute_22;
          l_zoom_expr         plugin_attr := p_region.attribute_23;
          l_pan_expr          plugin_attr := p_region.attribute_24;
          l_gesture_handling  plugin_attr := p_region.attribute_25;
          
      BEGIN
          -- debug information will be included
          IF APEX_APPLICATION.g_debug then
              APEX_PLUGIN_UTIL.debug_region
                (p_plugin => p_plugin
                ,p_region => p_region
                ,p_is_printer_friendly => p_is_printer_friendly);
          END IF;
      
          IF l_api_key IS NULL THEN
              -- these features require a Google API Key to work
              l_geocode_item := NULL;
              l_country      := NULL;
              l_address_item := NULL;
              l_directions   := NULL;
              l_origin_item  := NULL;
              l_dest_item    := NULL;
              l_dirdist_item := NULL;
              l_dirdur_item  := NULL;
          ELSE
              l_js_params := '?key=' || l_api_key;
          END IF;
          
          if l_zoom_expr is not null then
            l_zoom_enabled := apex_plugin_util.get_plsql_expression_result (
              'case when (' || l_zoom_expr
              || ') then ''true'' else ''false'' end');
            if l_zoom_enabled not in ('true','false') then
              raise_application_error(-20000, 'Zoom attribute must evaluate to true or false.');
            end if;
          end if;
      
          if l_pan_expr is not null then
            l_pan_enabled := apex_plugin_util.get_plsql_expression_result (
              'case when (' || l_pan_expr
              || ') then ''true'' else ''false'' end');
            if l_pan_enabled not in ('true','false') then
              raise_application_error(-20000, 'Pan attribute must evaluate to true or false.');
            end if;
          end if;
      
          APEX_JAVASCRIPT.add_library
            (p_name           => 'js' || l_js_params
            ,p_directory      => 'https://maps.googleapis.com/maps/api/'
            ,p_skip_extension => true);
      
          APEX_JAVASCRIPT.add_library
            (p_name                  => 'jk64reportmap'
            ,p_directory             => p_plugin.file_prefix
            ,p_check_to_add_minified => TRUE);
      
          l_region := CASE
                      WHEN p_region.static_id IS NOT NULL
                      THEN p_region.static_id
                      ELSE 'R'||p_region.id
                      END;
          
          IF p_region.source IS NOT NULL THEN
      
            l_data := get_markers
              (p_region     => p_region
              ,p_lat_min    => l_lat_min
              ,p_lat_max    => l_lat_max
              ,p_lng_min    => l_lng_min
              ,p_lng_max    => l_lng_max
              ,p_attribute1 => l_attribute1
              );
              
          END IF;
          
          -- if sync item is set, include its position in the initial map extent
          IF l_sync_item IS NOT NULL THEN
            l_latlong := NVL(v(l_sync_item),l_latlong);
          END IF;
          
          IF l_latlong IS NOT NULL THEN
            l_lat := TO_NUMBER(SUBSTR(l_latlong,1,INSTR(l_latlong,',')-1),g_num_format);
            l_lng := TO_NUMBER(SUBSTR(l_latlong,INSTR(l_latlong,',')+1),g_num_format);
          END IF;
          
          IF l_lat IS NOT NULL AND l_data.COUNT > 0 THEN
            set_map_extents
              (p_lat     => l_lat
              ,p_lng     => l_lng
              ,p_lat_min => l_lat_min
              ,p_lat_max => l_lat_max
              ,p_lng_min => l_lng_min
              ,p_lng_max => l_lng_max
              );
      
          ELSIF l_data.COUNT = 0 AND l_lat IS NOT NULL THEN
            l_lat_min := GREATEST(l_lat - 10, -80);
            l_lat_max := LEAST(l_lat + 10, 80);
            l_lng_min := GREATEST(l_lng - 10, -180);
            l_lng_max := LEAST(l_lng + 10, 180);
      
          -- show entire map if no points to show
          ELSIF l_data.COUNT = 0 THEN
            l_latlong := '0,0';
            l_lat_min := -90;
            l_lat_max := 90;
            l_lng_min := -180;
            l_lng_max := 180;
      
          END IF;
              
          l_script := '<script>
      var opt_#REGION#=
      {container:"map_#REGION#_container"
      ,regionId:"#REGION#"
      ,ajaxIdentifier:"'||APEX_PLUGIN.get_ajax_identifier||'"
      ,ajaxItems:"'||APEX_PLUGIN_UTIL.page_item_names_to_jquery(p_region.ajax_items_to_submit)||'"
      ,maptype:"'||lower(l_maptype)||'"
      ,latlng:"'||l_latlong||'"
      ,markerZoom:'||NVL(l_click_zoom,'null')||'
      ,markerPan:'||case l_pan_on_click when 'N' then 'false' else 'true' end||'
      ,icon:"'||l_markericon||'"
      ,idItem:"'||l_id_item||'"
      ,syncItem:"'||l_sync_item||'"
      ,distItem:"'||l_dist_item||'"
      ,geocodeItem:"'||l_geocode_item||'"
      ,country:"'||l_country||'"
      ,southwest:{'||latlng2ch(l_lat_min,l_lng_min)||'}
      ,northeast:{'||latlng2ch(l_lat_max,l_lng_max)||'}'||
        CASE WHEN l_mapstyle IS NOT NULL THEN '
      ,mapstyle:'||l_mapstyle END || '
      ,addressItem:"'||l_address_item||'"'||
        CASE WHEN l_geolocate = 'Y' THEN '
      ,geolocate:true' ||
          CASE WHEN l_geoloc_zoom IS NOT NULL THEN '
      ,geolocateZoom:'||l_geoloc_zoom
          END
        END || '
      ,noDataMessage:"'||p_region.no_data_found_message||'"'||
        CASE WHEN p_region.source IS NOT NULL THEN '
      ,expectData:true'
        END ||
        CASE WHEN l_directions IS NOT NULL THEN '
      ,directions:"' || l_directions || '"' ||
          CASE WHEN l_origin_item IS NOT NULL THEN '
      ,originItem:"' || l_origin_item || '"'
          END ||
          CASE WHEN l_dest_item IS NOT NULL THEN '
      ,destItem:"' || l_dest_item || '"'
          END ||
          CASE WHEN l_dirdist_item IS NOT NULL THEN '
      ,dirdistItem:"' || l_dirdist_item || '"'
          END ||
          CASE WHEN l_dirdur_item IS NOT NULL THEN '
      ,dirdurItem:"' || l_dirdur_item || '"'
          END || '
      ,optimizeWaypoints:' || case when l_optimizewaypoints = 'Y' then 'true' else 'false' end
        END || '
        ,zoom: '||l_zoom_enabled||'
        ,pan: '||l_pan_enabled||'
        ,gestureHandling: "'||nvl(l_gesture_handling,'auto')||'"
      };
      function click_#REGION#(id){jk64reportmap_click(opt_#REGION#,id);}
      function r_#REGION#(f){/in/.test(document.readyState)?setTimeout("r_#REGION#("+f+")",9):f()}
      r_#REGION#(function(){
      opt_#REGION#.mapdata = [';
          sys.htp.p(REPLACE(l_script,'#REGION#',l_region));
          htp_arr(l_data);
          l_script := '];
      jk64reportmap_initMap(opt_#REGION#);
      apex.jQuery("##REGION#").bind("apexrefresh", function(){jk64reportmap_refreshMap(opt_#REGION#);});
      });</script>';
          sys.htp.p(REPLACE(l_script,'#REGION#',l_region));
          sys.htp.p('<div id="map_'||l_region||'_container" style="min-height:'||l_map_height||'px"></div>');
        
          RETURN l_result;
      END render_map;
      
      FUNCTION ajax
          (p_region IN APEX_PLUGIN.t_region
          ,p_plugin IN APEX_PLUGIN.t_plugin
          ) RETURN APEX_PLUGIN.t_region_ajax_result IS
      
          SUBTYPE plugin_attr is VARCHAR2(32767);
      
          l_result APEX_PLUGIN.t_region_ajax_result;
      
          l_lat          NUMBER;
          l_lng          NUMBER;
          l_data         APEX_APPLICATION_GLOBAL.VC_ARR2;
          l_lat_min      NUMBER;
          l_lat_max      NUMBER;
          l_lng_min      NUMBER;
          l_lng_max      NUMBER;
      
          -- Component attributes
          l_sync_item     plugin_attr := p_region.attribute_04;
          l_latlong       plugin_attr := p_region.attribute_06;
          l_attribute1    plugin_attr := p_region.attribute_20;
      
      BEGIN
          -- debug information will be included
          IF APEX_APPLICATION.g_debug then
              APEX_PLUGIN_UTIL.debug_region
                (p_plugin => p_plugin
                ,p_region => p_region);
          END IF;
          APEX_DEBUG.message('ajax');
      
          IF p_region.source IS NOT NULL THEN
      
            l_data := get_markers
              (p_region     => p_region
              ,p_lat_min    => l_lat_min
              ,p_lat_max    => l_lat_max
              ,p_lng_min    => l_lng_min
              ,p_lng_max    => l_lng_max
              ,p_attribute1 => l_attribute1
              );
              
          END IF;
          
          -- if sync item is set, include its position in the initial map extent
          IF l_sync_item IS NOT NULL THEN
            l_latlong := NVL(v(l_sync_item),l_latlong);
          END IF;
          
          IF l_latlong IS NOT NULL THEN
            l_lat := TO_NUMBER(SUBSTR(l_latlong,1,INSTR(l_latlong,',')-1),g_num_format);
            l_lng := TO_NUMBER(SUBSTR(l_latlong,INSTR(l_latlong,',')+1),g_num_format);
          END IF;
          
          IF l_lat IS NOT NULL AND l_data.COUNT > 0 THEN
            set_map_extents
              (p_lat     => l_lat
              ,p_lng     => l_lng
              ,p_lat_min => l_lat_min
              ,p_lat_max => l_lat_max
              ,p_lng_min => l_lng_min
              ,p_lng_max => l_lng_max
              );
      
          ELSIF l_data.COUNT = 0 AND l_lat IS NOT NULL THEN
            l_lat_min := GREATEST(l_lat - 10, -180);
            l_lat_max := LEAST(l_lat + 10, 80);
            l_lng_min := GREATEST(l_lng - 10, -180);
            l_lng_max := LEAST(l_lng + 10, 180);
      
          -- show entire map if no points to show
          ELSIF l_data.COUNT = 0 THEN
            l_lat_min := -90;
            l_lat_max := 90;
            l_lng_min := -180;
            l_lng_max := 180;
      
          END IF;
      
          sys.owa_util.mime_header('text/plain', false);
          sys.htp.p('Cache-Control: no-cache');
          sys.htp.p('Pragma: no-cache');
          sys.owa_util.http_header_close;
      
          APEX_DEBUG.message('l_lat_min='||l_lat_min||' data='||l_data.COUNT);
          
          sys.htp.p('{"southwest":{'
            || latlng2ch(l_lat_min,l_lng_min)
            || '},"northeast":{'
            || latlng2ch(l_lat_max,l_lng_max)
            || '},"mapdata":[');
          htp_arr(l_data);
          sys.htp.p(']}');
      
          APEX_DEBUG.message('ajax finished');
          RETURN l_result;
      EXCEPTION
          WHEN OTHERS THEN
              APEX_DEBUG.error(SQLERRM);
              sys.htp.p('{"error":"'||sqlerrm||'"}');
      END ajax;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_map
    ajax-procedure/function-name: ajax

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Page Items to Submit" Attribute
    - Has "Number of Fetched Rows" Attribute
    - Has "No Data Found Message" Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 0.9.1
    about-url: 'https://github.com/jeffreykemp/jk64-plugin-reportmap'
    help-text: |
      This plugin renders a Google Map, showing a number of pins based on a query you supply with Latitude, Longitude, Name (pin hovertext), id (returned to an item you specify, if required), and Info.
      <p>
      <strong>Don't forget to set <em>Number of Rows</em> to a larger number than the default, this is the maximum number of records the report will fetch from your query.</strong>
      <p>
      When the user clicks any pin, the map pans to that point, and (optionally) zooms into it. An info window pops up with the Info you supply in the query. This can include HTML code including links, for example. The markerClick event will be fired when this happens (you can create a dynamic action to respond to this if you want).
      <P>
      If you supply a Sync Item and a Distance item, the map will allow the user to click any point on the map, drag out the radius of a circle, and then re-run the query (e.g. to show only those pins within the indicated circle. Look at the SQL Query examples for how to do this.
      <P>
      If the query includes the 6th column (icon), it must refer to an image file that will be used instead of the standard red pin (<img src="http://maps.google.com/mapfiles/ms/icons/red-dot.png">). You can refer to pins like these, or refer to your own images.
      <P>
      If icons are supplied they need to be fully-qualified URIs to an icon image to be used. e.g.
      <P>
      http://maps.google.com/mapfiles/ms/icons/blue-dot.png
      http://maps.google.com/mapfiles/ms/icons/red-dot.png
      http://maps.google.com/mapfiles/ms/icons/purple-dot.png
      http://maps.google.com/mapfiles/ms/icons/yellow-dot.png
      http://maps.google.com/mapfiles/ms/icons/green-dot.png
      http://maps.google.com/mapfiles/ms/icons/ylw-pushpin.png
      http://maps.google.com/mapfiles/ms/icons/blue-pushpin.png
      http://maps.google.com/mapfiles/ms/icons/grn-pushpin.png
      http://maps.google.com/mapfiles/ms/icons/ltblu-pushpin.png
      http://maps.google.com/mapfiles/ms/icons/pink-pushpin.png
      http://maps.google.com/mapfiles/ms/icons/purple-pushpin.png
      http://maps.google.com/mapfiles/ms/icons/red-pushpin.png
      <p>
      To create a Population Map (i.e. draw circles of varying radii instead of pins), supply additional columns in the query to indicate radius (in km), and optionally circle colour and transparency.

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 7838941848932769
    identification: 
      name: SOURCE_SQL

    value: 
      required: false

    settings: 
      minimum-columns: 4
      maximum-columns: 19

    examples: 
      examples: |
        <p>
        <pre>SELECT lat, lng, name, id FROM mydata;</pre>
        </p><p>
        <em>Show a popup info window when a marker is clicked:</em>
        </p><p>
        <pre>SELECT lat, lng, name, id, info FROM mydata;</pre>
        </p><p>
        <em>Show each point with a selected icon:</em>
        </p><p>
        <pre>SELECT lat, lng, name, id, info, icon FROM mydata;</pre>
        </p><p>
        <em>Get only the data within a certain distance from a chosen point:</em>
        </p><p>
        <pre>
        SELECT t.lat AS lat
              ,t.lng AS lng
              ,t.name
              ,t.id AS id
              ,t.info
              ,'' AS icon
        FROM   mytable t
        WHERE  t.lat IS NOT NULL
        AND    t.lng IS NOT NULL
        AND    (:P1_LATLNG IS NULL
             OR :P1_RADIUS IS NULL
             OR SDO_GEOM.sdo_distance
                  (geom1 => SDO_GEOMETRY
                    (sdo_gtype     => 2001 /* 2-dimensional point */
                    ,sdo_srid      => 8307 /* Longitude / Latitude (WGS 84) */
                    ,sdo_point     => SDO_POINT_TYPE(t.lng, t.lat, NULL)
                    ,sdo_elem_info => NULL
                    ,sdo_ordinates => NULL)
                  ,geom2 => SDO_GEOMETRY
                    (sdo_gtype     => 2001 /* 2-dimensional point */
                    ,sdo_srid      => 8307 /* Longitude / Latitude (WGS 84) */
                    ,sdo_point     => SDO_POINT_TYPE
                       (TO_NUMBER(SUBSTR(:P1_LATLNG,INSTR(:P1_LATLNG,',')+1))
                       ,TO_NUMBER(SUBSTR(:P1_LATLNG,1,INSTR(:P1_LATLNG,',')-1)), NULL)
                    ,sdo_elem_info => NULL
                    ,sdo_ordinates => NULL)
                  ,tol   => 0.0001 /*metres*/
                  ,unit  => 'unit=KM') < :P1_RADIUS)
        </pre>
        </p><p>
        <em>Population map (show circles instead of pins):</em>
        </p><p>
        <pre>
        SELECT lat, lng, name, id, '' AS info, '' AS icon,
               radius_km, '#cc0000' AS color, '0.05' as transparency
        FROM mydata;
        </pre>
        </p><p>
        <em>Marker labels:</em>
        </p><p>
        <pre>
        SELECT lat, lng, name, id, '' AS info, '' AS icon,
               '' as radius_km, '' AS color, '' as transparency, label as label
        FROM mydata;
        </pre>
        </p><p>
        <em>Up to 10 additional flex fields may be added:</em>
        </p><p>
        <pre>
        SELECT lat, lng, name, id, '' AS info, '' AS icon, '' AS radius_km, '' AS color, '' as transparency,
               col1, col2, col3, ... col10
        FROM mydata;
        </pre>
        The extra columns will be accessible from Dynamic Actions, e.g. <code>this.data.attr01</code>
        </p>

  custom-attributes: 
  - # ====== Custom Attribute: Attribute1 ========================
    id: 118062034986151651
    identification: 
      static-id: attribute_20
      attribute: 20
      name: Attribute1
      scope: Component

    layout: 
      sequence: 200

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Normally, all flex fields are added as data items attached to each pin. Set Attribute1 to an alternative to change the way it is used by the plugin.

    entries: 
    - # ====== Entry: Label ========================================
      id: 118065605580156985
      entry: 
        sequence: 10
        display: Label
        return: LABEL

      advanced: 
        quick-pick: false

      help: 
        help-text: 'Set to "Label" if flex field #1 should be rendered as a 1-character label on each pin.'

  - # ====== Custom Attribute: Optimize Waypoints ================
    id: 118501284326110654
    identification: 
      static-id: attribute_21
      attribute: 21
      name: Optimize Waypoints
      scope: Component

    layout: 
      sequence: 210

    settings: 
      type: Yes/No
      common: false
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Directions # 416180083818383501
      depending-on-condition-type: in list
      expression: DRIVING-ROUTE,WALKING-ROUTE,BICYCLING-ROUTE,TRANSIT-ROUTE
      always-evaluate: true

    help: 
      help-text: |
        If set to true, the Directions service will attempt to re-order the supplied intermediate waypoints to minimize overall cost of the route.
        
        Note: the first and last points supplied by the report query are always used as the starting and ending points for the journey.

  - # ====== Custom Attribute: Default Map Type ==================
    id: 118512826332285382
    identification: 
      static-id: attribute_22
      attribute: 22
      name: Default Map Type
      scope: Component

    layout: 
      sequence: 220

    settings: 
      type: Select List
      lov-type: Static
      common: false
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: ROADMAP

    help: 
      help-text: Default map type to show on page load. The user may change the map type if they wish to show a different type.

    entries: 
    - # ====== Entry: Roadmap ======================================
      id: 118516682204287540
      entry: 
        sequence: 10
        display: Roadmap
        return: ROADMAP

      advanced: 
        quick-pick: true

      help: 
        help-text: (default) This map type displays a normal street map.

    - # ====== Entry: Satellite ====================================
      id: 118517037332288886
      entry: 
        sequence: 20
        display: Satellite
        return: SATELLITE

      advanced: 
        quick-pick: false

      help: 
        help-text: This map type displays satellite images.

    - # ====== Entry: Hybrid =======================================
      id: 118517439140290251
      entry: 
        sequence: 30
        display: Hybrid
        return: HYBRID

      advanced: 
        quick-pick: false

      help: 
        help-text: This map type displays a transparent layer of major streets on satellite images.

    - # ====== Entry: Terrain ======================================
      id: 118517917230291425
      entry: 
        sequence: 40
        display: Terrain
        return: TERRAIN

      advanced: 
        quick-pick: false

      help: 
        help-text: This map type displays maps with physical features such as terrain and vegetation.

  - # ====== Custom Attribute: Zoom enabled ======================
    id: 144797662353303030
    identification: 
      static-id: attribute_23
      attribute: 23
      name: Zoom enabled
      scope: Component

    layout: 
      sequence: 230

    settings: 
      type: PL/SQL Expression Returning BOOLEAN
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    help: 
      help-text: If this evaluates to true, the Zoom controls will be enabled. If no expression is supplied, the default is true (enabled).

    examples: 
      examples: |
        <code>true</code>
        <p>
        <code>:P1_ITEM IS NOT NULL</code>

  - # ====== Custom Attribute: Pan enabled =======================
    id: 144801470258306215
    identification: 
      static-id: attribute_24
      attribute: 24
      name: Pan enabled
      scope: Component

    layout: 
      sequence: 240

    settings: 
      type: PL/SQL Expression Returning BOOLEAN
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    help: 
      help-text: If this evaluates to true, the Pan controls will be enabled. If no expression is supplied, the default is true (enabled).

    examples: 
      examples: |
        <code>true</code>
        <p>
        <code>:P1_ITEM IS NOT NULL</code>

  - # ====== Custom Attribute: Gesture Handling ==================
    id: 144805246324309106
    identification: 
      static-id: attribute_25
      attribute: 25
      name: Gesture Handling
      scope: Component

    layout: 
      sequence: 250

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: auto

    help: 
      help-text: This attribute allows you to select how the map responds to touch gestures on a mobile device. Mobile web users often get frustrated when trying to scroll the page, but an embedded map captures their swipe and pans the map instead. This can even lead to users getting stuck on the map and having to reload the page in order to get back to the rest of the page. This option allows you to make scrolling more intuitive and less frustrating map interaction experience on mobile browsers.

    entries: 
    - # ====== Entry: cooperative ==================================
      id: 144808959656310997
      entry: 
        sequence: 10
        display: cooperative
        return: cooperative

      advanced: 
        quick-pick: false

      help: 
        help-text: |
          Scroll events and one-finger touch gestures scroll the page, and do not zoom or pan the map. Two-finger touch gestures pan and zoom the map. Scroll events with a ctrl key or ⌘ key pressed zoom the map.
          In this mode the map cooperates with the page.

    - # ====== Entry: greedy =======================================
      id: 144809354410311800
      entry: 
        sequence: 20
        display: greedy
        return: greedy

      advanced: 
        quick-pick: false

      help: 
        help-text: All touch gestures and scroll events pan or zoom the map.

    - # ====== Entry: none =========================================
      id: 144809814570312657
      entry: 
        sequence: 30
        display: none
        return: none

      advanced: 
        quick-pick: false

      help: 
        help-text: The map cannot be panned or zoomed by user gestures.

    - # ====== Entry: auto =========================================
      id: 144810143443313451
      entry: 
        sequence: 40
        display: auto
        return: auto

      advanced: 
        quick-pick: false

      help: 
        help-text: (default) Gesture handling is either cooperative or greedy, depending on whether the page is scrollable.

  - # ====== Custom Attribute: Pan on click ======================
    id: 144817914166543497
    identification: 
      static-id: attribute_08
      attribute: 8
      name: Pan on click
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Yes/No
      common: false
      show-in-wizard: false
      required: false
      translatable: false

    default: 
      value: Y

    help: 
      help-text: 'If set on, when the user clicks on a pin the map will pan so the pin will be visible. Set off to stop this behaviour. NOTE: if you switch this off, you will almost certainly want to clear out Zoom Level on Click - otherwise when the user clicks a pin the map will zoom but not pan.'

  - # ====== Custom Attribute: Map Style =========================
    id: 409575925517437273
    identification: 
      static-id: attribute_11
      attribute: 11
      name: Map Style
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: 'Easiest way is to copy one from a site like https://snazzymaps.com/'

    examples: 
      examples: |
        Here is an example, a light greyscale style map:
        <pre>
        [{"featureType":"water","elementType":"geometry","stylers":[{"color":"#e9e9e9"},{"lightness":17}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#ffffff"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#ffffff"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":16}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":21}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#dedede"},{"lightness":21}]},{"elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#ffffff"},{"lightness":16}]},{"elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#333333"},{"lightness":40}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#f2f2f2"},{"lightness":19}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#fefefe"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#fefefe"},{"lightness":17},{"weight":1.2}]}]
        </pre>

  - # ====== Custom Attribute: Address Item ======================
    id: 409638336714139813
    identification: 
      static-id: attribute_12
      attribute: 12
      name: Address Item
      scope: Component

    layout: 
      sequence: 120

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Google API Key required. When the user clicks a point on the map, a Google Maps reverse geocode will be executed and the first result (usually the address) will be copied to the item you specify here.

  - # ====== Custom Attribute: Geolocate =========================
    id: 416142078696072309
    identification: 
      static-id: attribute_13
      attribute: 13
      name: Geolocate
      scope: Component

    layout: 
      sequence: 130

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: N

    help: 
      help-text: If set to Yes, on load the map will attempt to determine the user's location (it will probably ask the user for permission first) and pan to that location. If successful, the geolocate event will be triggered.

  - # ====== Custom Attribute: Geolocate Zoom ====================
    id: 416144133310077661
    identification: 
      static-id: attribute_14
      attribute: 14
      name: Geolocate Zoom
      scope: Component

    layout: 
      sequence: 140

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 2
      maximum-length: 2
      unit: (0-23)

    default: 
      value: 12

    condition: 
      depending-on-custom-attribute: Geolocate # 416142078696072309
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: If Geolocate is Yes, if the map is able to determine the user's location it will zoom to this level.

  - # ====== Custom Attribute: Directions ========================
    id: 416180083818383501
    identification: 
      static-id: attribute_15
      attribute: 15
      name: Directions
      scope: Component

    layout: 
      sequence: 150

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: (none)

    help: 
      help-text: Show travel directions. The locations can be simple - between two locations according to two items on the page - or via the route indicated by waypoints from the report query. Google API Key required.

    entries: 
    - # ====== Entry: Driving (route) ==============================
      id: 118454524447772514
      entry: 
        sequence: 10
        display: Driving (route)
        return: DRIVING-ROUTE

      advanced: 
        quick-pick: false

      help: 
        help-text: Get driving directions for a route defined by the report query.

    - # ====== Entry: Walking (route) ==============================
      id: 118462111424778641
      entry: 
        sequence: 20
        display: Walking (route)
        return: WALKING-ROUTE

      advanced: 
        quick-pick: false

      help: 
        help-text: Get walking directions for a route defined by the report query.

    - # ====== Entry: Bicycling (route) ============================
      id: 118462493947780050
      entry: 
        sequence: 30
        display: Bicycling (route)
        return: BICYCLING-ROUTE

      advanced: 
        quick-pick: false

      help: 
        help-text: Get bicycling directions for a route defined by the report query.

    - # ====== Entry: Transit (route) ==============================
      id: 118462879145781664
      entry: 
        sequence: 40
        display: Transit (route)
        return: TRANSIT-ROUTE

      advanced: 
        quick-pick: false

      help: 
        help-text: Get public transit directions for a route defined by the report query.

    - # ====== Entry: Driving (simple) =============================
      id: 416182433115384850
      entry: 
        sequence: 50
        display: Driving (simple)
        return: DRIVING

      advanced: 
        quick-pick: true

      help: 
        help-text: Get driving directions between two locations.

    - # ====== Entry: Walking (simple) =============================
      id: 416182825726385624
      entry: 
        sequence: 60
        display: Walking (simple)
        return: WALKING

      advanced: 
        quick-pick: false

      help: 
        help-text: Get walking directions between two locations.

    - # ====== Entry: Bicycling (simple) ===========================
      id: 416183196618386793
      entry: 
        sequence: 70
        display: Bicycling (simple)
        return: BICYCLING

      advanced: 
        quick-pick: false

      help: 
        help-text: Get bicycling directions between two locations.

    - # ====== Entry: Transit (simple) =============================
      id: 416183595373387871
      entry: 
        sequence: 80
        display: Transit (simple)
        return: TRANSIT

      advanced: 
        quick-pick: true

      help: 
        help-text: Get public transit directions between two locations.

  - # ====== Custom Attribute: Directions Origin Item ============
    id: 416186241420413606
    identification: 
      static-id: attribute_16
      attribute: 16
      name: Directions Origin Item
      scope: Component

    layout: 
      sequence: 160

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Directions # 416180083818383501
      depending-on-condition-type: in list
      expression: DRIVING,WALKING,BICYCLING,TRANSIT
      always-evaluate: true

    help: 
      help-text: Item that describes the origin location for directions. May be expressed as a lat,lng pair or as an address or place name.

  - # ====== Custom Attribute: Directions Destination Item =======
    id: 416188473798417944
    identification: 
      static-id: attribute_17
      attribute: 17
      name: Directions Destination Item
      scope: Component

    layout: 
      sequence: 170

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Directions # 416180083818383501
      depending-on-condition-type: in list
      expression: DRIVING,WALKING,BICYCLING,TRANSIT
      always-evaluate: true

    help: 
      help-text: Item that describes the destination location for directions. May be expressed as a lat,lng pair or as an address or place name.

  - # ====== Custom Attribute: Show Calculated Distance ==========
    id: 416203464846775022
    identification: 
      static-id: attribute_18
      attribute: 18
      name: Show Calculated Distance
      scope: Component

    layout: 
      sequence: 180

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Directions # 416180083818383501
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Item to set the calculated Distance, in metres.

  - # ====== Custom Attribute: Show Calculated Duration ==========
    id: 416206262735780871
    identification: 
      static-id: attribute_19
      attribute: 19
      name: Show Calculated Duration
      scope: Component

    layout: 
      sequence: 190

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Directions # 416180083818383501
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Show calculated travel journey duration, in seconds.

  - # ====== Custom Attribute: Google API Key ====================
    id: 560072109698526120
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Google API Key
      scope: Application

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 60

    help: 
      help-text: "Optional. If you don't set this, you may get a \"Google Maps API warning: NoApiKeys\" warning in the console log. You can add this later if required. Refer: https://developers.google.com/maps/documentation/javascript/get-api-key#get-an-api-key"

  - # ====== Custom Attribute: Geocode Item ======================
    id: 560082814137254136
    identification: 
      static-id: attribute_09
      attribute: 9
      name: Geocode Item
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: 'Set to a text item on the page. If the text item contains the name of a location or an address, a Google Maps Geocode search will be done and, if found, the map will be moved to that location and a pin shown. NOTE: requires a Google API key to be set at the application level.'

  - # ====== Custom Attribute: Restrict to Country code ==========
    id: 560084045911424706
    identification: 
      static-id: attribute_10
      attribute: 10
      name: Restrict to Country code
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 10
      maximum-length: 40
      set-text-case: Uppercase

    condition: 
      depending-on-custom-attribute: Geocode Item # 560082814137254136
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: 'Leave blank to allow geocoding to find any place on earth. Set to 2-character country code (see https://developers.google.com/public-data/docs/canonical/countries_csv for valid values) to restrict geocoder to that country. You can set this to a substition variable (e.g. &P1_COUNTRY.) but note that this will only apply if the page is refreshed.'

    examples: 
      examples: AU

  - # ====== Custom Attribute: Min. Map Height ===================
    id: 703457959510878622
    identification: 
      static-id: attribute_01
      attribute: 1
      name: Min. Map Height
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      unit: pixels

    default: 
      value: 400

    help: 
      help-text: 'Desired height (in pixels) of the map region. Note: the width will adjust according to the available area of the containing window.'

  - # ====== Custom Attribute: Set Item Name to ID on Click ======
    id: 703458304381882183
    identification: 
      static-id: attribute_02
      attribute: 2
      name: Set Item Name to ID on Click
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: When the user clicks on a map marker, the corresponding ID from your data will be copied to this page item.

  - # ====== Custom Attribute: Zoom Level on Click ===============
    id: 703458641554887368
    identification: 
      static-id: attribute_03
      attribute: 3
      name: Zoom Level on Click
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      unit: (0-23)

    default: 
      value: 13

    help: 
      help-text: When the user clicks on a map marker, or adds a new marker, zoom the map to this level. Set to blank to not zoom on click.

  - # ====== Custom Attribute: Synchronize with Item =============
    id: 708543067004288802
    identification: 
      static-id: attribute_04
      attribute: 4
      name: Synchronize with Item
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Position of the marker will be retrieved from and stored in this item as a Lat,Long value. Also, if the item value is changed, the marker will be moved on the map.

  - # ====== Custom Attribute: Marker Icon =======================
    id: 708546379016335257
    identification: 
      static-id: attribute_05
      attribute: 5
      name: Marker Icon
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: URL to the icon to show for the marker. Leave blank for the default red Google pin.

    examples: 
      examples: |
        http://maps.google.com/mapfiles/ms/icons/blue-dot.png
        http://maps.google.com/mapfiles/ms/icons/red-dot.png
        http://maps.google.com/mapfiles/ms/icons/purple-dot.png
        http://maps.google.com/mapfiles/ms/icons/yellow-dot.png
        http://maps.google.com/mapfiles/ms/icons/green-dot.png
        http://maps.google.com/mapfiles/ms/icons/ylw-pushpin.png
        http://maps.google.com/mapfiles/ms/icons/blue-pushpin.png
        http://maps.google.com/mapfiles/ms/icons/grn-pushpin.png
        http://maps.google.com/mapfiles/ms/icons/ltblu-pushpin.png
        http://maps.google.com/mapfiles/ms/icons/pink-pushpin.png
        http://maps.google.com/mapfiles/ms/icons/purple-pushpin.png
        http://maps.google.com/mapfiles/ms/icons/red-pushpin.png

  - # ====== Custom Attribute: Initial Map Position ==============
    id: 708553000406124314
    identification: 
      static-id: attribute_06
      attribute: 6
      name: Initial Map Position
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      unit: lat,long

    help: 
      help-text: Set the latitude and longitude as a pair of numbers to be used to position the map on page load, if no pin coordinates have been provided by the page item.

  - # ====== Custom Attribute: Circle Radius Item ================
    id: 708555363716824608
    identification: 
      static-id: attribute_07
      attribute: 7
      name: Circle Radius Item
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Synchronize with Item # 708543067004288802
      depending-on-condition-type: NOT_NULL
      always-evaluate: true

    help: 
      help-text: Set to an item which contains the distance (in Kilometres) to draw a circle around the click point. Leave blank to not draw a circle. If the item is changed, the circle will be updated. If you set this attribute, you must also set Synchronize with Item.

  events: 
  - # ====== Event: addressfound =================================
    id: 334098814488103135
    identification: 
      name: addressFound
      internal-name: addressfound

  - # ====== Event: geolocate ====================================
    id: 416146588398093126
    identification: 
      name: geolocate
      internal-name: geolocate

  - # ====== Event: maploaded ====================================
    id: 560076726506896027
    identification: 
      name: mapLoaded
      internal-name: maploaded

  - # ====== Event: mapclick =====================================
    id: 703457483869874381
    identification: 
      name: mapClick
      internal-name: mapclick

  - # ====== Event: markerclick ==================================
    id: 710174063147890497
    identification: 
      name: markerClick
      internal-name: markerclick

  files: 
  - # ====== File: jk64reportmap.js ==============================
    id: 118505135452159021
    identification: 
      file-name: jk64reportmap.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: jk64reportmap.min.js ==========================
    id: 118523694863357495
    identification: 
      file-name: jk64reportmap.min.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: SkillBuilders Super LOV (3.0) ===============
  id: 60058680244258648942
  identification: 
    name: SkillBuilders Super LOV (3.0)
    internal-name: COM_SKILLBUILDERS_SUPER_LOV
    type: Item

  advanced: 
    quick-pick: false

  subscription: 
    version-number: 1

  source: 
    pl/sql-code: |
      FUNCTION apex_super_lov_render (
         p_item                IN APEX_PLUGIN.T_PAGE_ITEM,
         p_plugin              IN APEX_PLUGIN.T_PLUGIN,
         p_value               IN VARCHAR2,
         p_is_readonly         IN BOOLEAN,
         p_is_printer_friendly IN BOOLEAN 
      )
      
         RETURN APEX_PLUGIN.T_PAGE_ITEM_RENDER_RESULT
         
      IS
      
         l_retval                  APEX_PLUGIN.T_PAGE_ITEM_RENDER_RESULT;
         lc_not_enterable          CONSTANT VARCHAR2(30) := 'NOT_ENTERABLE';
         lc_enterable_unrestricted CONSTANT VARCHAR2(30) := 'ENTERABLE_UNRESTRICTED';
         lc_enterable_restricted   CONSTANT VARCHAR2(30) := 'ENTERABLE_RESTRICTED';
         l_name                    VARCHAR2(30);
         l_dialog_title            VARCHAR2(32767) := NVL(p_item.attribute_02, p_item.plain_label);
         l_dis_ret_cols            VARCHAR2(10) := NVL(p_item.attribute_03, '2,1');
         l_searchable_cols         VARCHAR2(32767) := p_item.attribute_04;
         l_hidden_cols             VARCHAR2(32767) := p_item.attribute_05;
         l_map_from_cols           VARCHAR2(32767) := p_item.attribute_06;
         l_map_to_items            VARCHAR2(32767) := p_item.attribute_07;
         l_enterable               VARCHAR2(30) := NVL(p_item.attribute_08, lc_not_enterable);
         l_max_rows_per_page       PLS_INTEGER := NVL(p_item.attribute_09, 15);
         l_search_type             VARCHAR2(32767) := NVL(p_plugin.attribute_01, apex_plugin_util.c_search_contains_ignore);
         l_loading_image_type      VARCHAR2(30) := NVL(p_plugin.attribute_03, 'DEFAULT');
         l_loading_image_def       VARCHAR2(30) := NVL(p_plugin.attribute_04, 'bar');
         l_loading_image_cust      VARCHAR2(32767) := NVL(p_plugin.attribute_05, apex_application.g_image_prefix || 'processing3.gif');
         l_effects_speed           NUMBER := NVL(p_plugin.attribute_06, 400);
         l_clear_protection        VARCHAR2(1) := NVL(p_plugin.attribute_07, 'Y');
         l_no_data_found_msg       VARCHAR2(32767) := NVL(p_plugin.attribute_08, 'Your search returned no results.');
         l_return_col_num          PLS_INTEGER;
         l_display_col_num         PLS_INTEGER;
         l_loading_image_src       VARCHAR2(32767);
         l_display_value           VARCHAR2(32767);
         l_onload_code             VARCHAR2(32767);
         l_sql_handler             APEX_PLUGIN_UTIL.T_SQL_HANDLER;
         l_display_values          WWV_FLOW_GLOBAL.VC_ARR2;
         l_search_values           WWV_FLOW_GLOBAL.VC_ARR2;
         l_js_headers_array        VARCHAR2(32767);
         l_crlf                    CHAR(2) := CHR(13)||CHR(10);
         
      BEGIN
      
         IF apex_application.g_debug
         THEN
            apex_plugin_util.debug_page_item (
               p_plugin              => p_plugin,
               p_page_item           => p_item,
               p_value               => p_value,
               p_is_readonly         => p_is_readonly,
               p_is_printer_friendly => p_is_printer_friendly
            );
         END IF;
         
         IF l_loading_image_type = 'DEFAULT'
         THEN
            l_loading_image_src := p_plugin.file_prefix || l_loading_image_def || '.gif';
         ELSE
            l_loading_image_src := REPLACE(l_loading_image_cust, '#IMAGE_PREFIX#', apex_application.g_image_prefix);
            l_loading_image_src := REPLACE(l_loading_image_src, '#PLUGIN_PREFIX#', p_plugin.file_prefix);
         END IF;
         
         l_display_col_num := SUBSTR(l_dis_ret_cols, 1, INSTR(l_dis_ret_cols, ',') - 1);
         
         IF l_searchable_cols IS NOT NULL
            AND INSTR(',' || l_searchable_cols || ',', ',' || l_display_col_num || ',') = 0
         THEN
            --User forgot to add display column as a searchable column, let's do it for them
            l_searchable_cols := l_display_col_num || ',' || l_searchable_cols;
         END IF;
         
         IF l_hidden_cols IS NOT NULL
         THEN
            l_hidden_cols := ',' || l_hidden_cols || ',';
            
            IF INSTR(l_hidden_cols, ',' || l_display_col_num || ',') > 0
            THEN
               --User marked display column as hidden, let's remove it for them
               l_hidden_cols := REPLACE(l_hidden_cols, ',' || l_display_col_num || ',', '');
            END IF;
            
            l_hidden_cols := TRIM(BOTH ',' FROM l_hidden_cols);
         END IF;
         
         l_return_col_num := SUBSTR(l_dis_ret_cols, INSTR(l_dis_ret_cols, ',') + 1);
         l_search_values(1) := p_value;
      
         l_sql_handler := apex_plugin_util.get_sql_handler (
            p_sql_statement  => p_item.lov_definition,
            p_min_columns    => 2,
            p_max_columns    => 100,
            p_component_name => p_item.name
         ); 
         
         l_display_values := apex_plugin_util.get_display_data(
            p_sql_handler       => l_sql_handler,
            p_display_column_no => l_display_col_num,
            p_search_column_no  => l_return_col_num,
            p_search_value_list => l_search_values,
            p_display_extra     => p_item.lov_display_extra 
         );
         
         IF l_display_values.exists(1) 
         THEN
            l_display_value := l_display_values(1);
         ELSIF l_enterable = lc_enterable_unrestricted
         THEN
            l_display_value := p_value;
         END IF;
         
         l_js_headers_array := '[''';
         
         FOR x IN 1 .. l_sql_handler.column_list.count
         LOOP
            l_js_headers_array := l_js_headers_array || apex_javascript.escape(l_sql_handler.column_list(x).col_name) || ''',''';
         END LOOP;
         
         l_js_headers_array := RTRIM(l_js_headers_array, ''',''') || ''']';
         
         apex_plugin_util.free_sql_handler(l_sql_handler);
      
         IF p_is_readonly OR p_is_printer_friendly
         THEN
            apex_plugin_util.print_hidden_if_readonly (
               p_item_name           => p_item.name,
               p_value               => p_value,
               p_is_readonly         => p_is_readonly,
               p_is_printer_friendly => p_is_printer_friendly
            );
            
            apex_plugin_util.print_display_only (
               p_item_name        => p_item.name,
               p_display_value    => l_display_value,
               p_show_line_breaks => FALSE,
               p_escape           => TRUE,
               p_attributes       => p_item.element_attributes
            );
         ELSE
            l_name := apex_plugin.get_input_name_for_page_item(FALSE);
            
            sys.htp.p(
                  '<input type="hidden" name="' || l_name || '" id="' || p_item.name || '_HIDDENVALUE" value="' || sys.htf.escape_sc(p_value) || '" />' || l_crlf
               || '<fieldset id="' || p_item.name || '_fieldset" class="superlov-controls lov ' ||
                  CASE l_enterable
                     WHEN lc_not_enterable THEN 'super-lov-not-enterable'
                     WHEN lc_enterable_unrestricted THEN 'super-lov-enterable-unrestricted'
                     WHEN lc_enterable_restricted THEN 'super-lov-enterable-restricted'
                  END
               || '">' || l_crlf
               || '   <div id="' || p_item.name || '_holder" class="lov">' || l_crlf
      -- ApEx 5 Adjustment
                 || '               <input class="superlov-input popup_lov" type="text" ' || 
                                     CASE
                                        WHEN l_enterable = lc_not_enterable
                                        THEN 'disabled="disabled" onfocus="this.blur();"'
                                     END
                                  || ' value="' || sys.htf.escape_sc(l_display_value) || '" maxlength="' || p_item.element_max_length || '" size="'
                                  || p_item.element_width || '" id="' || p_item.name || '" ' || p_item.element_attributes
                                  || ' />' || l_crlf
      -- ApEx 5 Adjustment : moved this to on-load
      /*
                || CASE 
                     WHEN l_enterable IN (lc_enterable_unrestricted, lc_enterable_restricted)
                     THEN '               <script>' || l_crlf ||
                          '                  apex.jQuery("#' || p_item.name || '").bind("change", function(evnt) {' || l_crlf ||
                          '                     if (!apex.jQuery(this).apex_super_lov("changePropagationAllowed")) {' || l_crlf ||
                          '                        evnt.stopImmediatePropagation();' || l_crlf ||
                          '                     }' || l_crlf ||
                          '                  });' || l_crlf ||
                          '               </script>' || l_crlf
                  END
      */
      -- ApEx 5 Adjustment
               || '               <span class="superlov-control-buttons">' || l_crlf
      -- ApEx 5 Adjustment
      --         || '                    <span id="superlov-modal-open" class="superlov-modal-open"><i class="fa fa-search"></i></span>' || l_crlf
      --         || '                    <span id="superlov-modal-delete" class="superlov-modal-delete"><i class="fa fa-circle-minus"></i></span>' || l_crlf
               || '                  <button type="button" class="superlov-modal-delete" style="height: auto !important;">&nbsp;</button>' || l_crlf
               || '                  <button type="button" class="superlov-modal-open" style="height: auto !important;">&nbsp;</button>' || l_crlf
               || '               </span>' || l_crlf
               || '                  ' || l_crlf
               || '     </div>' || l_crlf
      -- ApEx 5 Adjustment
               || '</fieldset>' || l_crlf
            );
      
      /*
      apex_css.add_file(
               p_name      => 'font-awesome',
               p_directory => 'http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/',
               p_version   => NULL
            );
      */
      
            apex_css.add_file(
               p_name      => 'apex_super_lov',
               p_directory => p_plugin.file_prefix,
               p_version   => NULL
            );
      
            apex_javascript.add_library(
               p_name      => 'jquery.ui.button',
               p_directory => '#JQUERYUI_DIRECTORY#ui/',
               p_version   => NULL
            );
      
            apex_javascript.add_library(
               --p_name      => 'apex_super_lov.min',
               p_name      => 'apex_super_lov',
               p_directory => p_plugin.file_prefix,
               p_version   => NULL
            );
      
            l_onload_code := 'apex.jQuery("input#' || p_item.name || '").apex_super_lov({' || l_crlf
               || '   ' || apex_javascript.add_attribute('enterable', l_enterable) || l_crlf
               || '   ' || apex_javascript.add_attribute('returnColNum', l_return_col_num) || l_crlf
               || '   ' || apex_javascript.add_attribute('displayColNum', l_display_col_num) || l_crlf
               || '   ' || apex_javascript.add_attribute('hiddenCols', sys.htf.escape_sc(l_hidden_cols)) || l_crlf
               || '   ' || apex_javascript.add_attribute('searchableCols', l_searchable_cols) || l_crlf
               || '   ' || apex_javascript.add_attribute('mapFromCols', l_map_from_cols) || l_crlf
               || '   ' || apex_javascript.add_attribute('mapToItems', l_map_to_items) || l_crlf
               || '   ' || apex_javascript.add_attribute('maxRowsPerPage', l_max_rows_per_page) || l_crlf
               || '   ' || apex_javascript.add_attribute('noDataFoundMsg', sys.htf.escape_sc(l_no_data_found_msg)) || l_crlf
               || '   ' || apex_javascript.add_attribute('dialogTitle', sys.htf.escape_sc(l_dialog_title)) || l_crlf
               || '   ' || apex_javascript.add_attribute('effectsSpeed', l_effects_speed) || l_crlf
               || '   ' || apex_javascript.add_attribute('useClearProtection', l_clear_protection) || l_crlf
               || '   ' || apex_javascript.add_attribute('loadingImageSrc', sys.htf.escape_sc(l_loading_image_src)) || l_crlf
               || '   ' || apex_javascript.add_attribute('dependingOnSelector', sys.htf.escape_sc(apex_plugin_util.page_item_names_to_jquery(p_item.lov_cascade_parent_items))) || l_crlf
               || '   ' || apex_javascript.add_attribute('pageItemsToSubmit', sys.htf.escape_sc(apex_plugin_util.page_item_names_to_jquery(p_item.ajax_items_to_submit))) || l_crlf
               || '   "ajaxIdentifier": "' || apex_plugin.get_ajax_identifier() || '",' || l_crlf
               || '   "reportHeaders": ' || l_js_headers_array || l_crlf
               || '});' || l_crlf
               || CASE 
                     WHEN l_enterable IN (lc_enterable_unrestricted, lc_enterable_restricted)
                     THEN '                  apex.jQuery("#' || p_item.name || '").bind("change", function(evnt) {' || l_crlf ||
                          '                     if (!apex.jQuery(this).apex_super_lov("changePropagationAllowed")) {' || l_crlf ||
                          '                        evnt.stopImmediatePropagation();' || l_crlf ||
                          '                     }' || l_crlf ||
                          '                  });' || l_crlf
                  END
               || l_crlf;
               
            apex_javascript.add_onload_code(
               p_code => l_onload_code
            ); 
         END IF;
      
         IF l_enterable = lc_not_enterable
         THEN
            l_retval.is_navigable := FALSE;
         ELSE
            l_retval.is_navigable := TRUE;
         END IF;
              
         RETURN l_retval;
      
      EXCEPTION
      
         WHEN OTHERS
         THEN
            apex_plugin_util.free_sql_handler(l_sql_handler);
          
      END apex_super_lov_render;
      
      FUNCTION apex_super_lov_ajax (
         p_item   IN APEX_PLUGIN.T_PAGE_ITEM,
         p_plugin IN APEX_PLUGIN.T_PLUGIN
      )
      
         RETURN APEX_PLUGIN.T_PAGE_ITEM_AJAX_RESULT
      
      IS
      
         l_column_value_list APEX_PLUGIN_UTIL.T_COLUMN_VALUE_LIST2;     
         l_dis_ret_cols      VARCHAR2(10) := NVL(p_item.attribute_03, '2,1');
         l_searchable_cols   VARCHAR2(32767) := p_item.attribute_04;
         l_hidden_cols       VARCHAR2(32767) := p_item.attribute_05;
         l_map_from_cols     VARCHAR2(32767) := p_item.attribute_06;
         l_map_to_items      VARCHAR2(32767) := p_item.attribute_07;
         l_max_rows_per_page PLS_INTEGER := NVL(p_item.attribute_09, 15); 
         l_show_null_as      VARCHAR2(10) := NVL(p_item.attribute_10, '&nbsp;');
         l_map_from_parts    WWV_FLOW_GLOBAL.VC_ARR2;
         l_map_to_parts      WWV_FLOW_GLOBAL.VC_ARR2;
         l_search_type       VARCHAR2(32767) := NVL(p_plugin.attribute_01, apex_plugin_util.c_search_contains_ignore);
         l_return_col_num    PLS_INTEGER;
         l_display_col_num   PLS_INTEGER;
         l_lov_base_query    VARCHAR2(32767) := p_item.lov_definition;
         l_ajax_function     VARCHAR2(32767) := apex_application.g_x01;
         l_pagination        VARCHAR2(32767) := apex_application.g_x02;
         l_search_column_no  VARCHAR2(32767) := apex_application.g_x03;
         l_search_string     VARCHAR2(32767) := apex_application.g_x04;
         l_fetch_lov_id      NUMBER := apex_application.g_x05;
         l_return_val_search VARCHAR2(32767) := apex_application.g_x06;
         l_pagination_parts  WWV_FLOW_GLOBAL.VC_ARR2;
         l_crlf              CHAR(2) := CHR(13)||CHR(10);
      
         FUNCTION column_row_value (
            p_row           IN PLS_INTEGER,
            p_column_values IN APEX_PLUGIN_UTIL.T_COLUMN_VALUES
         )
      
            RETURN VARCHAR2
      
         IS
      
         BEGIN
      
            IF p_column_values.data_type = apex_plugin_util.c_data_type_varchar2
            THEN
               RETURN p_column_values.value_list(p_row).varchar2_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_number
            THEN
               RETURN p_column_values.value_list(p_row).number_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_date
            THEN
               RETURN p_column_values.value_list(p_row).date_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_timestamp
            THEN
               RETURN p_column_values.value_list(p_row).timestamp_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_timestamp_tz
            THEN
               RETURN p_column_values.value_list(p_row).timestamp_tz_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_timestamp_ltz
            THEN
               RETURN p_column_values.value_list(p_row).timestamp_ltz_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_interval_y2m
            THEN
               RETURN p_column_values.value_list(p_row).interval_y2m_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_interval_d2s
            THEN
               RETURN p_column_values.value_list(p_row).interval_d2s_value;
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_blob
            THEN
               RETURN '[BLOB_DATATYPE]';
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_bfile
            THEN
               RETURN '[BFILE_DATATYPE]';
            ELSIF p_column_values.data_type = apex_plugin_util.c_data_type_clob
            THEN
               RETURN p_column_values.value_list(p_row).clob_value;
            ELSE
               RETURN '[INVALID_DATATYPE]';
            END IF;
      
         END column_row_value; 
        
      BEGIN
         
         l_display_col_num := SUBSTR(l_dis_ret_cols, 1, INSTR(l_dis_ret_cols, ',') - 1);
         l_return_col_num := SUBSTR(l_dis_ret_cols, INSTR(l_dis_ret_cols, ',') + 1);
         l_hidden_cols := ',' || l_hidden_cols || ',';
         
         IF l_searchable_cols IS NOT NULL
            AND INSTR(',' || l_searchable_cols || ',', ',' || l_display_col_num || ',') = 0
         THEN 
            --User forgot to add display column as a searchable column, let's do it for them
            l_searchable_cols := l_display_col_num || ',' || l_searchable_cols;
         END IF;
         
         IF INSTR(l_hidden_cols, ',' || l_display_col_num || ',') > 0
         THEN
            --User mared display column as hidden, let's remove it for them
            l_hidden_cols := REPLACE(l_hidden_cols, ',' || l_display_col_num || ',', '');
         END IF;
         
         l_hidden_cols := TRIM(BOTH ',' FROM l_hidden_cols);
         l_hidden_cols := ',' || l_hidden_cols || ','; --Prep for repeated INSTRs later
      
         IF l_ajax_function = 'FETCH_LOV'
         THEN
            l_pagination_parts := apex_util.string_to_table(l_pagination);    
      
            IF l_search_string IS NOT NULL
            THEN
               IF l_searchable_cols IS NOT NULL 
                  AND INSTR(',' || l_searchable_cols || ',', ',' || l_search_column_no || ',') = 0
               THEN
                  RAISE_APPLICATION_ERROR(-20001, 'Super LOV Exception: Search attempt on non-searchable column.');
               END IF;
            
               l_search_string := apex_plugin_util.get_search_string(
                  p_search_type   => l_search_type,
                  p_search_string => l_search_string 
               );
            
               l_column_value_list := apex_plugin_util.get_data2(
                  p_sql_statement    => l_lov_base_query, 
                  p_min_columns      => 2, 
                  p_max_columns      => 100, 
                  p_component_name   => p_item.name,
                  p_search_type      => l_search_type,
                  p_search_column_no => l_search_column_no,
                  p_search_string    => l_search_string,
                  p_first_row        => l_pagination_parts(1),
                  p_max_rows         => l_pagination_parts(2) + 1
               );
            ELSE
               l_column_value_list := apex_plugin_util.get_data2(
                  p_sql_statement  => l_lov_base_query, 
                  p_min_columns    => 2, 
                  p_max_columns    => 100, 
                  p_component_name => p_item.name,
                  p_first_row      => l_pagination_parts(1),
                  p_max_rows       => l_pagination_parts(2) + 1
               );   
            END IF;
            
            sys.htp.p('<table id="superlov-fetch-results" cellspacing="0" cellpadding="0" border="0" ' || 
               'data-fetch-lov-id="' || l_fetch_lov_id || '" class="superlov-table ui-widget ui-widget-content ui-corner-all">');
            sys.htp.p('<thead>');
            sys.htp.p('<tr>');
            
      
            FOR x IN 1 .. l_column_value_list.count
            LOOP
               IF INSTR(l_hidden_cols, ',' || x || ',') = 0
               THEN
                  sys.htp.prn('<th class="ui-widget-header">');
                  sys.htp.prn(l_column_value_list(x).name);
                  sys.htp.prn('</th>');
               END IF;
            END LOOP;
      
            sys.htp.p('</tr>');
            sys.htp.p('</thead>');
            sys.htp.p('<tbody>');
            
            FOR x IN 1 .. LEAST(l_column_value_list(1).value_list.count, l_max_rows_per_page)
            LOOP 
               sys.htp.p(
                  '<tr data-return="' || sys.htf.escape_sc(column_row_value(x, l_column_value_list(l_return_col_num))) 
                  || '" data-display="' || sys.htf.escape_sc(column_row_value(x, l_column_value_list(l_display_col_num))) 
                  || '"'
               );
               
               FOR y IN 1 .. l_column_value_list.count
               LOOP
                  IF INSTR(l_hidden_cols, ',' || y || ',') > 0
                  THEN
                     sys.htp.prn(' data-col' || y || '-value="');
                     sys.htp.prn(NVL(sys.htf.escape_sc(column_row_value(x, l_column_value_list(y))), l_show_null_as));
                     sys.htp.prn('"');
                  END IF;
               END LOOP;
               
               sys.htp.p('>');
               
               IF p_item.escape_output
               THEN
                  FOR y IN 1 .. l_column_value_list.count
                  LOOP
                     IF INSTR(l_hidden_cols, ',' || y || ',') = 0
                     THEN
                        sys.htp.prn('<td class="ui-state-default asl-col' || y || '">');
                        sys.htp.prn(NVL(sys.htf.escape_sc(column_row_value(x, l_column_value_list(y))), l_show_null_as));
                        sys.htp.prn('</td>');
                     END IF;
                  END LOOP;
               ELSE
                  FOR y IN 1 .. l_column_value_list.count
                  LOOP
                     IF INSTR(l_hidden_cols, ',' || y || ',') = 0
                     THEN
                        sys.htp.prn('<td class="ui-state-default asl-col' || y || '">');
                        sys.htp.prn(NVL(column_row_value(x, l_column_value_list(y)), l_show_null_as));
                        sys.htp.prn('</td>');
                     END IF;
                  END LOOP;
               END IF;
               
               sys.htp.p('</tr>');
            END LOOP;
            
            sys.htp.p('</tbody></table>');
            
            IF l_column_value_list(1).value_list.count > l_max_rows_per_page
            THEN
               sys.htp.p('<input id="asl-super-lov-more-rows" type="hidden" value="Y" />');
            ELSE
               sys.htp.p('<input id="asl-super-lov-more-rows" type="hidden" value="N" />');
            END IF;
         ELSIF l_ajax_function = 'GET_VALUES_BY_RETURN'
         THEN
            l_search_string := apex_plugin_util.get_search_string(
               p_search_type   => apex_plugin_util.c_search_lookup,
               p_search_string => l_return_val_search
            );
         
            l_column_value_list := apex_plugin_util.get_data2(
               p_sql_statement    => l_lov_base_query, 
               p_min_columns      => 2, 
               p_max_columns      => 100, 
               p_component_name   => p_item.name,
               p_search_type      => apex_plugin_util.c_search_lookup,
               p_search_column_no => l_return_col_num,
               p_search_string    => l_search_string
            );
            
            sys.htp.p('{');
            
            IF l_column_value_list(1).value_list.count = 0 
            THEN
               sys.htp.p('"matchFound": false');
            ELSIF l_column_value_list(1).value_list.count > 1 
            THEN
               sys.htp.p('"matchFound": false,');
               sys.htp.p('"error": "too many rows"');
            ELSE
               sys.htp.p('"matchFound": true,');
               sys.htp.p(   '"displayVal": "' || APEX_JAVASCRIPT.ESCAPE(column_row_value(1, l_column_value_list(l_display_col_num))) || '",');
               sys.htp.p(   '"returnVal": "' || APEX_JAVASCRIPT.ESCAPE(column_row_value(1, l_column_value_list(l_return_col_num))) || '"');
               
               l_map_from_parts := apex_util.string_to_table(l_map_from_cols, ',');
               l_map_to_parts := apex_util.string_to_table(l_map_to_items, ',');
               
               IF l_map_from_parts.COUNT > 0 THEN
                  sys.htp.p(', "mappedColumns": [');
                  FOR i IN 1 .. l_map_from_parts.COUNT
                  LOOP
                     IF i != 1 THEN
                        sys.htp.p(',');
                     END IF;
                     sys.htp.p('{');
                     sys.htp.p(   '"mapItem": "' || APEX_JAVASCRIPT.ESCAPE(l_map_to_parts(i)) || '",');
                     sys.htp.p(   '"mapVal": "' || APEX_JAVASCRIPT.ESCAPE(column_row_value(1, l_column_value_list(l_map_from_parts(i)))) || '"');
                     sys.htp.p('}');
                  END LOOP;
                  sys.htp.p(']');
               END IF;
            END IF;
            
            sys.htp.p('}');
         END IF;
      
         RETURN NULL;
      
      END apex_super_lov_ajax;
      
      FUNCTION apex_super_lov_validation (
         p_item   IN APEX_PLUGIN.T_PAGE_ITEM,
         p_plugin IN APEX_PLUGIN.T_PLUGIN,
         p_value  IN VARCHAR2
      )
      
         RETURN APEX_PLUGIN.T_PAGE_ITEM_VALIDATION_RESULT
      
      IS
      
         l_retval                  APEX_PLUGIN.T_PAGE_ITEM_VALIDATION_RESULT;
         lc_not_enterable          CONSTANT VARCHAR2(30) := 'NOT_ENTERABLE';
         lc_enterable_unrestricted CONSTANT VARCHAR2(30) := 'ENTERABLE_UNRESTRICTED';
         l_return_value            VARCHAR2(32767);
         l_validate_value          VARCHAR2(1) := NVL(p_item.attribute_01, 'Y');
         l_dis_ret_cols            VARCHAR2(10) := NVL(p_item.attribute_03, '2,1');
         l_enterable               VARCHAR2(30) := NVL(p_item.attribute_08, lc_not_enterable);
         l_return_col_num          PLS_INTEGER;
      
      BEGIN
      
      
         IF p_value IS NOT NULL
            AND l_enterable != lc_enterable_unrestricted
            AND l_validate_value = 'Y' 
         THEN
            l_return_col_num := SUBSTR(l_dis_ret_cols, INSTR(l_dis_ret_cols, ',') + 1);
         
            l_return_value := apex_plugin_util.get_display_data (
               p_sql_statement     => p_item.lov_definition,
               p_min_columns       => 1,
               p_max_columns       => 100,
               p_component_name    => p_item.name,
               p_display_column_no => l_return_col_num,
               p_search_column_no  => l_return_col_num,
               p_search_string     => p_value,
               p_display_extra     => FALSE --Can't trust this value
            );
            
            IF l_return_value IS NULL
            THEN
               l_retval.message := '#LABEL# contains a value that was not in the list of values.';
            END IF;
         END IF;
         
         RETURN l_retval;
      
      END apex_super_lov_validation;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: apex_super_lov_render
    ajax-procedure/function-name: apex_super_lov_ajax
    validation-procedure-name: apex_super_lov_validation

  supported-for: 
    component-type: 
    - Page Items

  standard-attributes: 
    attributes: 
    - Is Visible Widget
    - Session State Changeable
    - Has Read Only Attribute
    - Has Escape Special Characters Attribute
    - Has Source Attributes
    - Has Element Attributes
    - Has Width Attributes
    - Has Element Option Attribute
    - Has List of Values
    - Has Cascading LOV Attributes

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 2.1
    about-url: 'http://skillbuilders.com/download/download-resource.cfm?file=Oracle-Apex/plugins/sbip_super_lov/instructions.pdf'
    help-text: <br />

  standard-attributes: 
  - # ====== Standard Attribute: LOV =============================
    id: 6419691785834605
    identification: 
      name: LOV

    value: 
      required: true

    settings: 
      minimum-columns: 2
      maximum-columns: 100

    examples: 
      examples: |
        <pre>SELECT empno AS "Emp No.",
           ename AS "Employee",
           job AS "Job",
           sal AS "Salary"
        FROM emp</pre>

  custom-attributes: 
  - # ====== Custom Attribute: When No Data Found Message ========
    id: 39489176879631200814
    identification: 
      attribute: 8
      name: When No Data Found Message
      scope: Application

    layout: 
      sequence: 80

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 60
      maximum-length: 500

    default: 
      value: Your search returned no results.

    help: 
      help-text: Use this setting to specify what message should be displayed to users when the LOV query fails to retrieve any results.

  - # ====== Custom Attribute: Dialog Title ======================
    id: 49050642797445020519
    identification: 
      attribute: 2
      name: Dialog Title
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 30
      maximum-length: 100

    help: 
      help-text: Use this setting to explicitly set the title of the dialog. If no value is supplied then the item’s label will be used.

  - # ====== Custom Attribute: Item Display & Return Columns =====
    id: 49050644999308030487
    identification: 
      attribute: 3
      name: Item Display & Return Columns
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 10
      maximum-length: 7

    default: 
      value: 2,1

    help: 
      help-text: Use this setting to specify which column should be used for the item’s display value and which column should be used for the item’s return value. The value should be a comma separated pair of numbers where the numbers refer to the column in the LOV query. The first number should be the display column and the second number should be the return column. The display column will be used as the default search column.

  - # ====== Custom Attribute: Searchable Columns ================
    id: 49050650592644047451
    identification: 
      attribute: 4
      name: Searchable Columns
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 30
      maximum-length: 100

    help: 
      help-text: Use this setting to specify which columns should be displayed in the select list of columns that allows users to filter the LOV result set. The value should be a comma separated list of numbers where the numbers refer to columns in the LOV query. If no value is supplied then all columns will be searchable. If a value is supplied then only those columns will be searchable. The display column (defined via Item Display & Return Columns) will always be searchable and will be the default search column.

  - # ====== Custom Attribute: Hidden Columns ====================
    id: 49050651907535051771
    identification: 
      attribute: 5
      name: Hidden Columns
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 30
      maximum-length: 100

    help: 
      help-text: Use this setting to specify which columns should be hidden when the LOV is displayed. The value should be a comma separated list of numbers where the numbers refer to columns in the LOV query. If no value is supplied then all columns will be visible. The display column (defined via Item Display & Return Columns) will always be visible.

  - # ====== Custom Attribute: Map From Columns ==================
    id: 49050652780308053348
    identification: 
      attribute: 6
      name: Map From Columns
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 30
      maximum-length: 100

    help: 
      help-text: Use this setting to specify which columns should be used to map values to other items (see Map To Items). The value should be a comma separated list of numbers where the numbers refer to columns in the LOV query. Both visible and hidden columns can be used when mapping to other items.

  - # ====== Custom Attribute: Map To Items ======================
    id: 49050654292082056795
    identification: 
      attribute: 7
      name: Map To Items
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Page Items
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 80
      maximum-length: 1000

    help: 
      help-text: Use this setting to specify which items should be used when mapping values from columns (see Map From Columns). The value should be a comma separated list of item names. The order of the items in Map To Items should match the order of the columns in Map To Columns.

  - # ====== Custom Attribute: Enterable =========================
    id: 49050659190828065940
    identification: 
      attribute: 8
      name: Enterable
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 60
      maximum-length: 500

    default: 
      value: NOT_ENTERABLE

    help: 
      help-text: |
        <pre>Use this setting to make the item "enterable". If enterable, users will be able to type in the actual textbox.
        
        If running as "Enterable - Restricted to LOV", any value entered into the textbox will be validated against the LOV. The display column (defined via Item Display & Return Columns) will be the default search column against which values entered will be validated. If one match is found then the display and return values will be set accordingly. If no match is found or multiple matches are found the modal dialog will open so that the user can make a selection.
        
        If running as "Enterable - Not Restricted to LOV", any value entered into the textbox will be submitted into session state.</pre>
        

    entries: 
    - # ====== Entry: Not Enterable ================================
      id: 38423694739244982780
      entry: 
        sequence: 10
        display: Not Enterable
        return: NOT_ENTERABLE

      advanced: 
        quick-pick: false

    - # ====== Entry: Enterable - Restrictred to LOV ===============
      id: 38423732850326985951
      entry: 
        sequence: 20
        display: Enterable - Restrictred to LOV
        return: ENTERABLE_RESTRICTED

      advanced: 
        quick-pick: false

    - # ====== Entry: Enterable - Not Restrictred to LOV ===========
      id: 38423763658637988365
      entry: 
        sequence: 30
        display: Enterable - Not Restrictred to LOV
        return: ENTERABLE_UNRESTRICTED

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Show Null Values As ===============
    id: 49050660201563068992
    identification: 
      attribute: 10
      name: Show Null Values As
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 5
      maximum-length: 10

    default: 
      value: '&nbsp;'

    help: 
      help-text: Use this setting to specify how null values should be displayed in the result set.

  - # ====== Custom Attribute: Max Rows Per Page =================
    id: 49050698505635089074
    identification: 
      attribute: 9
      name: Max Rows Per Page
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 3
      maximum-length: 3

    default: 
      value: 15

    help: 
      help-text: Use this setting to specify the maximum number of records that should be displayed at one time.

  - # ====== Custom Attribute: Use Clear Confirm =================
    id: 49139737803397495138
    identification: 
      attribute: 7
      name: Use Clear Confirm
      scope: Application

    layout: 
      sequence: 70

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: Y

    help: 
      help-text: Use this setting to enable or disable the Clear Protection feature. Clear Protection requires the user to click the clear button twice to clear the selected value. This is done to help prevent accidental clearings that would require the LOV to be reopened.

  - # ====== Custom Attribute: Use Value Validation ==============
    id: 55941514703847580282
    identification: 
      attribute: 1
      name: Use Value Validation
      scope: Component

    layout: 
      sequence: 85

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: Y

    condition: 
      depending-on-custom-attribute: Enterable # 49050659190828065940
      depending-on-condition-type: not equal to
      expression: ENTERABLE_UNRESTRICTED
      always-evaluate: true

    help: 
      help-text: Use this setting to enable or disable the Value Validation feature. Value Validation will re-check the submitted value against the LOV. If the value is not found then the validation will fail and the user will see a validation error message.

  - # ====== Custom Attribute: Effects Speed =====================
    id: 56508293891133044529
    identification: 
      attribute: 6
      name: Effects Speed
      scope: Application

    layout: 
      sequence: 25

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: 400

    help: 
      help-text: Use this setting to specify the speed at which the modal dialog should perform certain effects such as sizing, resizing, and fading. Selecting “instant” will essentially disable any effects.

    entries: 
    - # ====== Entry: Slow =========================================
      id: 56508295395634045867
      entry: 
        sequence: 10
        display: Slow
        return: 600

      advanced: 
        quick-pick: false

    - # ====== Entry: Normal =======================================
      id: 56508295998751046709
      entry: 
        sequence: 20
        display: Normal
        return: 400

      advanced: 
        quick-pick: false

    - # ====== Entry: Fast =========================================
      id: 56508296601868047577
      entry: 
        sequence: 30
        display: Fast
        return: 200

      advanced: 
        quick-pick: false

    - # ====== Entry: Instant ======================================
      id: 56508297306370048948
      entry: 
        sequence: 40
        display: Instant
        return: 0

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Search Type =======================
    id: 62651953405859850987
    identification: 
      attribute: 1
      name: Search Type
      scope: Application

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: CONTAINS_IGNORE

    help: 
      help-text: 'Use this setting to control how search strings are used to filter the LOV result set. '

    entries: 
    - # ====== Entry: Contains/Case (uses INSTR) ===================
      id: 62651969918111863967
      entry: 
        sequence: 10
        display: Contains/Case (uses INSTR)
        return: CONTAINS_CASE

      advanced: 
        quick-pick: false

    - # ====== Entry: Contains/Ignore (uses INSTR with UPPER) ======
      id: 62651979007160870280
      entry: 
        sequence: 20
        display: Contains/Ignore (uses INSTR with UPPER)
        return: CONTAINS_IGNORE

      advanced: 
        quick-pick: false

    - # ====== Entry: Exact/Case (uses LIKE value%) ================
      id: 62651980511662871592
      entry: 
        sequence: 30
        display: Exact/Case (uses LIKE value%)
        return: EXACT_CASE

      advanced: 
        quick-pick: false

    - # ====== Entry: Exact/Ignore (uses LIKE VALUE% with UPPER) ===
      id: 62651983917549873314
      entry: 
        sequence: 40
        display: Exact/Ignore (uses LIKE VALUE% with UPPER)
        return: EXACT_IGNORE

      advanced: 
        quick-pick: false

    - # ====== Entry: Like/Case (uses LIKE %value%) ================
      id: 62651997924129875194
      entry: 
        sequence: 50
        display: Like/Case (uses LIKE %value%)
        return: LIKE_CASE

      advanced: 
        quick-pick: false

    - # ====== Entry: Like/Ignore (uses LIKE %VALUE% with UPPER) ===
      id: 62652000496555876671
      entry: 
        sequence: 60
        display: Like/Ignore (uses LIKE %VALUE% with UPPER)
        return: LIKE_IGNORE

      advanced: 
        quick-pick: false

    - # ====== Entry: Lookup (uses = value) ========================
      id: 62652012503828878756
      entry: 
        sequence: 70
        display: Lookup (uses = value)
        return: LOOKUP

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Loading Image Type ================
    id: 62653697801254417281
    identification: 
      attribute: 3
      name: Loading Image Type
      scope: Application

    layout: 
      sequence: 30

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: DEFAULT

    help: 
      help-text: Use this setting to choose between a default or custom loading image. The loading image is displayed when the LOV is opened, before the result set appears. There are a number of default loading images that can be used (see Loading Image next) but you can use your own as well.

    entries: 
    - # ====== Entry: Default ======================================
      id: 62653710109912419812
      entry: 
        sequence: 10
        display: Default
        return: DEFAULT

      advanced: 
        quick-pick: false

    - # ====== Entry: Custom =======================================
      id: 62653721414067420975
      entry: 
        sequence: 20
        display: Custom
        return: CUSTOM

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Loading Image =====================
    id: 62653733618354431655
    identification: 
      attribute: 4
      name: Loading Image
      scope: Application

    layout: 
      sequence: 40

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: bar

    condition: 
      depending-on-custom-attribute: Loading Image Type # 62653697801254417281
      depending-on-condition-type: equal to
      expression: DEFAULT
      always-evaluate: true

    help: 
      help-text: Use this setting to specify which loading image you would like to use. Based on the Loading Image Type selection, you will either choose from a number of default images or you will specify the path/name to a custom image.

    entries: 
    - # ====== Entry: Bar ==========================================
      id: 62653878006027513287
      entry: 
        sequence: 10
        display: Bar
        return: bar

      advanced: 
        quick-pick: false

    - # ====== Entry: Bar 2 ========================================
      id: 62653879310876514662
      entry: 
        sequence: 20
        display: Bar 2
        return: bar2

      advanced: 
        quick-pick: false

    - # ====== Entry: Bert =========================================
      id: 62653881414685515700
      entry: 
        sequence: 30
        display: Bert
        return: bert

      advanced: 
        quick-pick: false

    - # ====== Entry: Bert 2 =======================================
      id: 62653882818494516853
      entry: 
        sequence: 40
        display: Bert 2
        return: bert2

      advanced: 
        quick-pick: false

    - # ====== Entry: Big Snake ====================================
      id: 62653883922650518036
      entry: 
        sequence: 50
        display: Big Snake
        return: big-snake

      advanced: 
        quick-pick: false

    - # ====== Entry: Clock ========================================
      id: 62653886194730519491
      entry: 
        sequence: 60
        display: Clock
        return: clock

      advanced: 
        quick-pick: false

    - # ====== Entry: Drip Circle ==================================
      id: 62653887401656521440
      entry: 
        sequence: 70
        display: Drip Circle
        return: drip-circle

      advanced: 
        quick-pick: false

    - # ====== Entry: Squares Circle ===============================
      id: 62653888305812522680
      entry: 
        sequence: 80
        display: Squares Circle
        return: squares-circle

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Loading Image =====================
    id: 62654811806841147362
    identification: 
      attribute: 5
      name: Loading Image
      scope: Application

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 40
      maximum-length: 500

    default: 
      value: '#IMAGE_PREFIX#processing3.gif'

    condition: 
      depending-on-custom-attribute: Loading Image Type # 62653697801254417281
      depending-on-condition-type: equal to
      expression: CUSTOM
      always-evaluate: true

    help: 
      help-text: Enter the path to and name of the image you would like displayed when the dialog opens.

  files: 
  - # ====== File: apex_super_lov.css ============================
    id: 7754831625170032340
    identification: 
      file-name: apex_super_lov.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: apex_super_lov.js =============================
    id: 7797359578292772667
    identification: 
      file-name: apex_super_lov.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: drip-circle.gif ===============================
    id: 62654902611104168797
    identification: 
      file-name: drip-circle.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: bert.gif ======================================
    id: 62654906306144171073
    identification: 
      file-name: bert.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: bert2.gif =====================================
    id: 62654908402262172791
    identification: 
      file-name: bert2.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: clock.gif =====================================
    id: 62654910398812174398
    identification: 
      file-name: clock.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: big-snake.gif =================================
    id: 62654912694283176490
    identification: 
      file-name: big-snake.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: squares-circle.gif ============================
    id: 62654918221444179182
    identification: 
      file-name: squares-circle.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: bar2.gif ======================================
    id: 62654921714542182365
    identification: 
      file-name: bar2.gif

    attributes: 
      mime-type: image/gif

  - # ====== File: bar.gif =======================================
    id: 62654925007210185739
    identification: 
      file-name: bar.gif

    attributes: 
      mime-type: image/gif

