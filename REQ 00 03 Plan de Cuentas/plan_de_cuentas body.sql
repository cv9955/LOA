create or replace PACKAGE BODY PLAN_DE_CUENTAS_PKG AS
    RAMA_PRINCIPAL_LIST LIST_TREE;
    LOV_CUENTA_CONFIG_LIST  LIST_BY_KEY;

  FUNCTION RAMA_PRINCIPAL RETURN LIST_TREE AS
  BEGIN
        RETURN RAMA_PRINCIPAL_LIST;
  END RAMA_PRINCIPAL;

  FUNCTION LOV_CUENTA_CONFIG RETURN LIST_BY_KEY AS
  BEGIN
        RETURN LOV_CUENTA_CONFIG_LIST;
  END LOV_CUENTA_CONFIG;

  FUNCTION SIGUIENTE_RUBRO_ID(P_PARENT_ID INTEGER) RETURN NUMBER AS
   V_RUBRO_ID NUMBER;
  BEGIN
    SELECT MAX(ID)+ 1 INTO V_RUBRO_ID
        FROM T_PC_RUBROS
        WHERE PARENT_ID = P_PARENT_ID;

    IF V_RUBRO_ID IS NULL THEN
        V_RUBRO_ID := P_PARENT_ID * 10 + 1;
    END IF;

    RETURN V_RUBRO_ID;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN(P_PARENT_ID * 10 + 1);
  END SIGUIENTE_RUBRO_ID;

  PROCEDURE AGREGAR_RUBRO(
        P_PARENT_ID INTEGER,
        P_RUBRO_TITLE VARCHAR2,
        P_RUBRO_CONFIG VARCHAR2,
        P_RUBRO_ID IN OUT NUMBER
    ) AS
  BEGIN
        P_RUBRO_ID := SIGUIENTE_RUBRO_ID(P_PARENT_ID);
        INSERT INTO T_PC_RUBROS(ID,PARENT_ID,RUBRO_TITLE,RUBRO_CONFIG)
        VALUES(P_RUBRO_ID,P_PARENT_ID,P_RUBRO_TITLE,P_RUBRO_CONFIG);
  END AGREGAR_RUBRO;

  PROCEDURE EDITAR_RUBRO(
        P_RUBRO_ID INTEGER,
        P_RUBRO_TITLE VARCHAR2,
        P_RUBRO_CONFIG VARCHAR2
    ) AS
  BEGIN
    UPDATE T_PC_RUBROS
     SET RUBRO_TITLE = P_RUBRO_TITLE 
        ,RUBRO_CONFIG= P_RUBRO_CONFIG
    WHERE ID = P_RUBRO_ID;  
  END EDITAR_RUBRO;

  PROCEDURE BORRAR_RUBRO(
        P_RUBRO_ID INTEGER
    ) AS
  BEGIN
    -- TAREA: CONTROLOR RUBRO VACIO
    DELETE T_PC_RUBROS WHERE ID = P_RUBRO_ID;
  END BORRAR_RUBRO;

  FUNCTION SIGUIENTE_CUENTA_NUM(P_RUBRO_ID INTEGER) RETURN NUMBER AS
        V_CUENTA_NUM NUMBER;
    BEGIN
        SELECT MAX(CUENTA_NUM)+ 1 INTO V_CUENTA_NUM
            FROM T_PC_CUENTAS
            WHERE RUBRO_ID = P_RUBRO_ID;
        IF V_CUENTA_NUM IS NULL THEN
            V_CUENTA_NUM := 1;
        END IF;

        RETURN V_CUENTA_NUM;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN(1);
  END SIGUIENTE_CUENTA_NUM;

  PROCEDURE AGREGAR_CUENTA(
        P_RUBRO_ID INTEGER,
        P_CUENTA_NUM IN OUT NUMBER,
        P_CUENTA_TITLE VARCHAR2,
        P_CUENTA_CONFIG VARCHAR2,
        P_CUENTA_ID OUT NUMBER
    ) AS
  BEGIN
    P_CUENTA_NUM := NVL(P_CUENTA_NUM,SIGUIENTE_CUENTA_NUM(P_RUBRO_ID));
        INSERT INTO T_PC_CUENTAS (RUBRO_ID,CUENTA_NUM,CUENTA_CONFIG,CUENTA_TITLE)
        VALUES (P_RUBRO_ID,P_CUENTA_NUM,P_CUENTA_CONFIG,P_CUENTA_TITLE)
        RETURNING ID INTO P_CUENTA_ID;
  END AGREGAR_CUENTA;

  PROCEDURE EDITAR_CUENTA(
        P_CUENTA_ID INTEGER,
        P_CUENTA_NUM NUMBER,
        P_CUENTA_TITLE VARCHAR2,
        P_CUENTA_CONFIG VARCHAR2
    ) AS
  BEGIN
    UPDATE T_PC_CUENTAS
     SET CUENTA_TITLE = P_CUENTA_TITLE 
        ,CUENTA_NUM= P_CUENTA_NUM
        ,CUENTA_CONFIG= P_CUENTA_CONFIG
    WHERE ID = P_CUENTA_ID;  
  END EDITAR_CUENTA;

  PROCEDURE BORRAR_CUENTA(
        P_CUENTA_ID INTEGER
    ) AS
  BEGIN
    -- TAREA: CONTROLAR CUENTA VACIO
    DELETE T_PC_CUENTAS WHERE ID = P_CUENTA_ID;
  END BORRAR_CUENTA;
  
BEGIN
    RAMA_PRINCIPAL_LIST := LIST_TREE(
        TREE_TYP('1', '  1 - ACTIVO', NULL),
        TREE_TYP('2', '  2 - PASIVO', NULL),
        TREE_TYP('3', '  3 - PATRIMONIO NETO', NULL ),
        TREE_TYP('4', '  4 - GANANCIAS', NULL),
        TREE_TYP('5', '  5 - GASTOS', NULL),
        TREE_TYP('11', ' 11 - Activo Corriente', '1'),
        TREE_TYP('12', ' 12 - Activo No Corriente', '1'),
        TREE_TYP('21', ' 21 - Pasivo Corriente', '2'),
        TREE_TYP('22', ' 22 - Pasivo No Corriente', '2'),
        TREE_TYP('31', ' 31 - Patrimonio Neto', '3'),
        TREE_TYP('41', ' 41 - Ingresos Ordinarios', '4'),
        TREE_TYP('42', ' 42 - Ingresos Extraordinarios', '4'),
        TREE_TYP('51', ' 51 - Gastos Ordinarios', '5'),
        TREE_TYP('52', ' 52 - Gastos Extraordinarios', '5')
        );

    LOV_CUENTA_CONFIG_LIST := LIST_BY_KEY(
        KEY_TITLE_TYP('DEST_CPA', 'CUENTAS DESTINO DE COMPRAS')
        ,KEY_TITLE_TYP('VAL_CAJA', 'CUENTAS MOVIMIENTOS DE VALORES NO BANCARIOS')
        ,KEY_TITLE_TYP('VAL_BANCO', 'CUENTAS MOVIMIENTOS DE VALORES BANCARIOS')
        );
END PLAN_DE_CUENTAS_PKG;